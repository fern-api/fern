{
    "endpoints": [
        {
            "id": {
                "path": "/",
                "method": "POST",
                "identifier_override": "endpoint_union.get"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\tfern \"github.com/undiscriminated-unions/fern\"\n\tfernclient \"github.com/undiscriminated-unions/fern/client\"\n)\n\nclient := fernclient.NewClient()\nresponse, err := client.Union.Get(\n\tcontext.TODO(),\n\tfern.NewMyUnionFromString(\n\t\t\"string\",\n\t),\n)\n"
            }
        },
        {
            "id": {
                "path": "/call",
                "method": "POST",
                "identifier_override": "endpoint_union.call"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\tfern \"github.com/undiscriminated-unions/fern\"\n\tfernclient \"github.com/undiscriminated-unions/fern/client\"\n)\n\nclient := fernclient.NewClient()\nresponse, err := client.Union.Call(\n\tcontext.TODO(),\n\t\u0026fern.Request{\n\t\tUnion: fern.NewMetadataUnionFromOptionalMetadata(\n\t\t\tmap[string]interface{}{\n\t\t\t\t\"union\": map[string]interface{}{\n\t\t\t\t\t\"key\": \"value\",\n\t\t\t\t},\n\t\t\t},\n\t\t),\n\t},\n)\n"
            }
        },
        {
            "id": {
                "path": "/duplicate",
                "method": "POST",
                "identifier_override": "endpoint_union.duplicateTypesUnion"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\tfern \"github.com/undiscriminated-unions/fern\"\n\tfernclient \"github.com/undiscriminated-unions/fern/client\"\n)\n\nclient := fernclient.NewClient()\nresponse, err := client.Union.DuplicateTypesUnion(\n\tcontext.TODO(),\n\tfern.NewUnionWithDuplicateTypesFromString(\n\t\t\"string\",\n\t),\n)\n"
            }
        },
        {
            "id": {
                "path": "/metadata",
                "method": "GET",
                "identifier_override": "endpoint_union.getMetadata"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\tfernclient \"github.com/undiscriminated-unions/fern/client\"\n)\n\nclient := fernclient.NewClient()\nresponse, err := client.Union.GetMetadata(\n\tcontext.TODO(),\n)\n"
            }
        },
        {
            "id": {
                "path": "/metadata",
                "method": "PUT",
                "identifier_override": "endpoint_union.updateMetadata"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\tfern \"github.com/undiscriminated-unions/fern\"\n\tfernclient \"github.com/undiscriminated-unions/fern/client\"\n)\n\nclient := fernclient.NewClient()\nresponse, err := client.Union.UpdateMetadata(\n\tcontext.TODO(),\n\tfern.NewMetadataUnionFromOptionalMetadata(\n\t\tmap[string]interface{}{\n\t\t\t\"string\": map[string]interface{}{\n\t\t\t\t\"key\": \"value\",\n\t\t\t},\n\t\t},\n\t),\n)\n"
            }
        },
        {
            "id": {
                "path": "/nested",
                "method": "POST",
                "identifier_override": "endpoint_union.nestedUnions"
            },
            "snippet": {
                "type": "go",
                "client": "import (\n\tcontext \"context\"\n\tfern \"github.com/undiscriminated-unions/fern\"\n\tfernclient \"github.com/undiscriminated-unions/fern/client\"\n)\n\nclient := fernclient.NewClient()\nresponse, err := client.Union.NestedUnions(\n\tcontext.TODO(),\n\tfern.NewNestedUnionRootFromString(\n\t\t\"string\",\n\t),\n)\n"
            }
        }
    ]
}