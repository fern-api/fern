// Code generated by Fern. DO NOT EDIT.

package client

import (
	context "context"
	core "github.com/folders/fern/core"
	internal "github.com/folders/fern/internal"
	option "github.com/folders/fern/option"
	http "net/http"
)

type Client struct {
	baseURL         string
	caller          *internal.Caller
	header          http.Header
	WithRawResponse *RawClient
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:          options.ToHeader(),
		WithRawResponse: NewRawClient(options),
	}
}

func (c *Client) Foo(
	ctx context.Context,
	opts ...option.RequestOption,
) error {
	_, err := c.WithRawResponse.Foo(
		ctx,
		opts...,
	)
	if err != nil {
		return err
	}
	return nil
}
