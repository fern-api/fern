// Code generated by Fern. DO NOT EDIT.

package v1

import (
	json "encoding/json"
	fmt "fmt"
	internal "github.com/chat/fern/internal"
)

type ChatRequest struct {
	// Pass text/event-stream to receive the streamed response as server-sent events. The default is `\n` delimited events.
	Accepts *string `json:"-" url:"-"`
	// Text input for the model to respond to.
	//
	// Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments
	Message string `json:"message" url:"-"`
	// Defaults to `command-r-plus-08-2024`.
	//
	// The name of a compatible [Cohere model](https://docs.cohere.com/docs/models) or the ID of a [fine-tuned](https://docs.cohere.com/docs/chat-fine-tuning) model.
	//
	// Compatible Deployments: Cohere Platform, Private Deployments
	Model *string `json:"model,omitempty" url:"-"`
	// Defaults to `false`.
	//
	// When `true`, the response will be a JSON stream of events. The final event will contain the complete response, and will have an `event_type` of `"stream-end"`.
	//
	// Streaming is beneficial for user interfaces that render the contents of the response piece by piece, as it gets generated.
	//
	// Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments
	Stream *bool `json:"stream,omitempty" url:"-"`
	// When specified, the default Cohere preamble will be replaced with the provided one. Preambles are a part of the prompt used to adjust the model's overall behavior and conversation style, and use the `SYSTEM` role.
	//
	// The `SYSTEM` role is also used for the contents of the optional `chat_history=` parameter. When used with the `chat_history=` parameter it adds content throughout a conversation. Conversely, when used with the `preamble=` parameter it adds content at the start of the conversation only.
	//
	// Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments
	Preamble *string `json:"preamble,omitempty" url:"-"`
	// A list of previous messages between the user and the model, giving the model conversational context for responding to the user's `message`.
	//
	// Each item represents a single message in the chat history, excluding the current user turn. It has two properties: `role` and `message`. The `role` identifies the sender (`CHATBOT`, `SYSTEM`, or `USER`), while the `message` contains the text content.
	//
	// The chat_history parameter should not be used for `SYSTEM` messages in most cases. Instead, to add a `SYSTEM` role message at the beginning of a conversation, the `preamble` parameter should be used.
	//
	// Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments
	ChatHistory []interface{} `json:"chat_history,omitempty" url:"-"`
	// An alternative to `chat_history`.
	//
	// Providing a `conversation_id` creates or resumes a persisted conversation with the specified ID. The ID can be any non empty string.
	//
	// Compatible Deployments: Cohere Platform
	ConversationId *string `json:"conversation_id,omitempty" url:"-"`
	// Defaults to `AUTO` when `connectors` are specified and `OFF` in all other cases.
	//
	// Dictates how the prompt will be constructed.
	//
	// With `prompt_truncation` set to "AUTO", some elements from `chat_history` and `documents` will be dropped in an attempt to construct a prompt that fits within the model's context length limit. During this process the order of the documents and chat history will be changed and ranked by relevance.
	//
	// With `prompt_truncation` set to "AUTO_PRESERVE_ORDER", some elements from `chat_history` and `documents` will be dropped in an attempt to construct a prompt that fits within the model's context length limit. During this process the order of the documents and chat history will be preserved as they are inputted into the API.
	//
	// With `prompt_truncation` set to "OFF", no elements will be dropped. If the sum of the inputs exceeds the model's context length limit, a `TooManyTokens` error will be returned.
	//
	// Compatible Deployments:
	//   - AUTO: Cohere Platform Only
	//   - AUTO_PRESERVE_ORDER: Azure, AWS Sagemaker/Bedrock, Private Deployments
	PromptTruncation *ChatRequestPromptTruncation `json:"prompt_truncation,omitempty" url:"-"`
	// Forces the chat to be single step. Defaults to `false`.
	ForceSingleStep *bool `json:"force_single_step,omitempty" url:"-"`
	// Used to select the [safety instruction](/docs/safety-modes) inserted into the prompt. Defaults to `CONTEXTUAL`.
	// When `NONE` is specified, the safety instruction will be omitted.
	//
	// Safety modes are not yet configurable in combination with `tools`, `tool_results` and `documents` parameters.
	//
	// **Note**: This parameter is only compatible with models [Command R 08-2024](/docs/command-r#august-2024-release), [Command R+ 08-2024](/docs/command-r-plus#august-2024-release) and newer.
	//
	// Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments
	SafetyMode *ChatRequestSafetyMode `json:"safety_mode,omitempty" url:"-"`
}

type BadRequestErrorBody struct {
	Data *string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (b *BadRequestErrorBody) GetData() *string {
	if b == nil {
		return nil
	}
	return b.Data
}

func (b *BadRequestErrorBody) GetExtraProperties() map[string]interface{} {
	return b.extraProperties
}

func (b *BadRequestErrorBody) UnmarshalJSON(data []byte) error {
	type unmarshaler BadRequestErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*b = BadRequestErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *b)
	if err != nil {
		return err
	}
	b.extraProperties = extraProperties
	b.rawJSON = json.RawMessage(data)
	return nil
}

func (b *BadRequestErrorBody) String() string {
	if len(b.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(b.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(b); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", b)
}

// Defaults to `AUTO` when `connectors` are specified and `OFF` in all other cases.
//
// Dictates how the prompt will be constructed.
//
// With `prompt_truncation` set to "AUTO", some elements from `chat_history` and `documents` will be dropped in an attempt to construct a prompt that fits within the model's context length limit. During this process the order of the documents and chat history will be changed and ranked by relevance.
//
// With `prompt_truncation` set to "AUTO_PRESERVE_ORDER", some elements from `chat_history` and `documents` will be dropped in an attempt to construct a prompt that fits within the model's context length limit. During this process the order of the documents and chat history will be preserved as they are inputted into the API.
//
// With `prompt_truncation` set to "OFF", no elements will be dropped. If the sum of the inputs exceeds the model's context length limit, a `TooManyTokens` error will be returned.
//
// Compatible Deployments:
//   - AUTO: Cohere Platform Only
//   - AUTO_PRESERVE_ORDER: Azure, AWS Sagemaker/Bedrock, Private Deployments
type ChatRequestPromptTruncation string

const (
	ChatRequestPromptTruncationOff               ChatRequestPromptTruncation = "OFF"
	ChatRequestPromptTruncationAuto              ChatRequestPromptTruncation = "AUTO"
	ChatRequestPromptTruncationAutoPreserveOrder ChatRequestPromptTruncation = "AUTO_PRESERVE_ORDER"
)

func NewChatRequestPromptTruncationFromString(s string) (ChatRequestPromptTruncation, error) {
	switch s {
	case "OFF":
		return ChatRequestPromptTruncationOff, nil
	case "AUTO":
		return ChatRequestPromptTruncationAuto, nil
	case "AUTO_PRESERVE_ORDER":
		return ChatRequestPromptTruncationAutoPreserveOrder, nil
	}
	var t ChatRequestPromptTruncation
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (c ChatRequestPromptTruncation) Ptr() *ChatRequestPromptTruncation {
	return &c
}

// Used to select the [safety instruction](/docs/safety-modes) inserted into the prompt. Defaults to `CONTEXTUAL`.
// When `NONE` is specified, the safety instruction will be omitted.
//
// Safety modes are not yet configurable in combination with `tools`, `tool_results` and `documents` parameters.
//
// **Note**: This parameter is only compatible with models [Command R 08-2024](/docs/command-r#august-2024-release), [Command R+ 08-2024](/docs/command-r-plus#august-2024-release) and newer.
//
// Compatible Deployments: Cohere Platform, Azure, AWS Sagemaker/Bedrock, Private Deployments
type ChatRequestSafetyMode string

const (
	ChatRequestSafetyModeContextual ChatRequestSafetyMode = "CONTEXTUAL"
	ChatRequestSafetyModeStrict     ChatRequestSafetyMode = "STRICT"
	ChatRequestSafetyModeNone       ChatRequestSafetyMode = "NONE"
)

func NewChatRequestSafetyModeFromString(s string) (ChatRequestSafetyMode, error) {
	switch s {
	case "CONTEXTUAL":
		return ChatRequestSafetyModeContextual, nil
	case "STRICT":
		return ChatRequestSafetyModeStrict, nil
	case "NONE":
		return ChatRequestSafetyModeNone, nil
	}
	var t ChatRequestSafetyMode
	return "", fmt.Errorf("%s is not a valid %T", s, t)
}

func (c ChatRequestSafetyMode) Ptr() *ChatRequestSafetyMode {
	return &c
}

type ClientClosedRequestErrorBody struct {
	Data *string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (c *ClientClosedRequestErrorBody) GetData() *string {
	if c == nil {
		return nil
	}
	return c.Data
}

func (c *ClientClosedRequestErrorBody) GetExtraProperties() map[string]interface{} {
	return c.extraProperties
}

func (c *ClientClosedRequestErrorBody) UnmarshalJSON(data []byte) error {
	type unmarshaler ClientClosedRequestErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*c = ClientClosedRequestErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *c)
	if err != nil {
		return err
	}
	c.extraProperties = extraProperties
	c.rawJSON = json.RawMessage(data)
	return nil
}

func (c *ClientClosedRequestErrorBody) String() string {
	if len(c.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(c.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(c); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", c)
}

type ForbiddenErrorBody struct {
	Data *string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (f *ForbiddenErrorBody) GetData() *string {
	if f == nil {
		return nil
	}
	return f.Data
}

func (f *ForbiddenErrorBody) GetExtraProperties() map[string]interface{} {
	return f.extraProperties
}

func (f *ForbiddenErrorBody) UnmarshalJSON(data []byte) error {
	type unmarshaler ForbiddenErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*f = ForbiddenErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *f)
	if err != nil {
		return err
	}
	f.extraProperties = extraProperties
	f.rawJSON = json.RawMessage(data)
	return nil
}

func (f *ForbiddenErrorBody) String() string {
	if len(f.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(f.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(f); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", f)
}

type GatewayTimeoutErrorBody struct {
	Data *string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (g *GatewayTimeoutErrorBody) GetData() *string {
	if g == nil {
		return nil
	}
	return g.Data
}

func (g *GatewayTimeoutErrorBody) GetExtraProperties() map[string]interface{} {
	return g.extraProperties
}

func (g *GatewayTimeoutErrorBody) UnmarshalJSON(data []byte) error {
	type unmarshaler GatewayTimeoutErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*g = GatewayTimeoutErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *g)
	if err != nil {
		return err
	}
	g.extraProperties = extraProperties
	g.rawJSON = json.RawMessage(data)
	return nil
}

func (g *GatewayTimeoutErrorBody) String() string {
	if len(g.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(g.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(g); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", g)
}

type InternalServerErrorBody struct {
	Data *string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (i *InternalServerErrorBody) GetData() *string {
	if i == nil {
		return nil
	}
	return i.Data
}

func (i *InternalServerErrorBody) GetExtraProperties() map[string]interface{} {
	return i.extraProperties
}

func (i *InternalServerErrorBody) UnmarshalJSON(data []byte) error {
	type unmarshaler InternalServerErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*i = InternalServerErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *i)
	if err != nil {
		return err
	}
	i.extraProperties = extraProperties
	i.rawJSON = json.RawMessage(data)
	return nil
}

func (i *InternalServerErrorBody) String() string {
	if len(i.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(i.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(i); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", i)
}

type InvalidTokenErrorBody struct {
	Data *string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (i *InvalidTokenErrorBody) GetData() *string {
	if i == nil {
		return nil
	}
	return i.Data
}

func (i *InvalidTokenErrorBody) GetExtraProperties() map[string]interface{} {
	return i.extraProperties
}

func (i *InvalidTokenErrorBody) UnmarshalJSON(data []byte) error {
	type unmarshaler InvalidTokenErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*i = InvalidTokenErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *i)
	if err != nil {
		return err
	}
	i.extraProperties = extraProperties
	i.rawJSON = json.RawMessage(data)
	return nil
}

func (i *InvalidTokenErrorBody) String() string {
	if len(i.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(i.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(i); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", i)
}

type NotFoundErrorBody struct {
	Data *string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (n *NotFoundErrorBody) GetData() *string {
	if n == nil {
		return nil
	}
	return n.Data
}

func (n *NotFoundErrorBody) GetExtraProperties() map[string]interface{} {
	return n.extraProperties
}

func (n *NotFoundErrorBody) UnmarshalJSON(data []byte) error {
	type unmarshaler NotFoundErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*n = NotFoundErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *n)
	if err != nil {
		return err
	}
	n.extraProperties = extraProperties
	n.rawJSON = json.RawMessage(data)
	return nil
}

func (n *NotFoundErrorBody) String() string {
	if len(n.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(n.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(n); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", n)
}

type NotImplementedErrorBody struct {
	Data *string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (n *NotImplementedErrorBody) GetData() *string {
	if n == nil {
		return nil
	}
	return n.Data
}

func (n *NotImplementedErrorBody) GetExtraProperties() map[string]interface{} {
	return n.extraProperties
}

func (n *NotImplementedErrorBody) UnmarshalJSON(data []byte) error {
	type unmarshaler NotImplementedErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*n = NotImplementedErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *n)
	if err != nil {
		return err
	}
	n.extraProperties = extraProperties
	n.rawJSON = json.RawMessage(data)
	return nil
}

func (n *NotImplementedErrorBody) String() string {
	if len(n.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(n.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(n); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", n)
}

type ServiceUnavailableErrorBody struct {
	Data *string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (s *ServiceUnavailableErrorBody) GetData() *string {
	if s == nil {
		return nil
	}
	return s.Data
}

func (s *ServiceUnavailableErrorBody) GetExtraProperties() map[string]interface{} {
	return s.extraProperties
}

func (s *ServiceUnavailableErrorBody) UnmarshalJSON(data []byte) error {
	type unmarshaler ServiceUnavailableErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*s = ServiceUnavailableErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *s)
	if err != nil {
		return err
	}
	s.extraProperties = extraProperties
	s.rawJSON = json.RawMessage(data)
	return nil
}

func (s *ServiceUnavailableErrorBody) String() string {
	if len(s.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(s.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(s); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", s)
}

type TooManyRequestsErrorBody struct {
	Data *string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (t *TooManyRequestsErrorBody) GetData() *string {
	if t == nil {
		return nil
	}
	return t.Data
}

func (t *TooManyRequestsErrorBody) GetExtraProperties() map[string]interface{} {
	return t.extraProperties
}

func (t *TooManyRequestsErrorBody) UnmarshalJSON(data []byte) error {
	type unmarshaler TooManyRequestsErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*t = TooManyRequestsErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *t)
	if err != nil {
		return err
	}
	t.extraProperties = extraProperties
	t.rawJSON = json.RawMessage(data)
	return nil
}

func (t *TooManyRequestsErrorBody) String() string {
	if len(t.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(t.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(t); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", t)
}

type UnauthorizedErrorBody struct {
	Data *string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (u *UnauthorizedErrorBody) GetData() *string {
	if u == nil {
		return nil
	}
	return u.Data
}

func (u *UnauthorizedErrorBody) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UnauthorizedErrorBody) UnmarshalJSON(data []byte) error {
	type unmarshaler UnauthorizedErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UnauthorizedErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties
	u.rawJSON = json.RawMessage(data)
	return nil
}

func (u *UnauthorizedErrorBody) String() string {
	if len(u.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(u.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}

type UnprocessableEntityErrorBody struct {
	Data *string `json:"data,omitempty" url:"data,omitempty"`

	extraProperties map[string]interface{}
	rawJSON         json.RawMessage
}

func (u *UnprocessableEntityErrorBody) GetData() *string {
	if u == nil {
		return nil
	}
	return u.Data
}

func (u *UnprocessableEntityErrorBody) GetExtraProperties() map[string]interface{} {
	return u.extraProperties
}

func (u *UnprocessableEntityErrorBody) UnmarshalJSON(data []byte) error {
	type unmarshaler UnprocessableEntityErrorBody
	var value unmarshaler
	if err := json.Unmarshal(data, &value); err != nil {
		return err
	}
	*u = UnprocessableEntityErrorBody(value)
	extraProperties, err := internal.ExtractExtraProperties(data, *u)
	if err != nil {
		return err
	}
	u.extraProperties = extraProperties
	u.rawJSON = json.RawMessage(data)
	return nil
}

func (u *UnprocessableEntityErrorBody) String() string {
	if len(u.rawJSON) > 0 {
		if value, err := internal.StringifyJSON(u.rawJSON); err == nil {
			return value
		}
	}
	if value, err := internal.StringifyJSON(u); err == nil {
		return value
	}
	return fmt.Sprintf("%#v", u)
}
