// Code generated by Fern. DO NOT EDIT.

package user

import (
	context "context"
	fern "github.com/version-no-default/fern"
	core "github.com/version-no-default/fern/core"
	internal "github.com/version-no-default/fern/internal"
	option "github.com/version-no-default/fern/option"
	http "net/http"
)

type Client struct {
	baseURL         string
	caller          *internal.Caller
	header          http.Header
	WithRawResponse *RawClient
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		baseURL: options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header:          options.ToHeader(),
		WithRawResponse: NewRawClient(options),
	}
}

func (c *Client) GetUser(
	ctx context.Context,
	userId fern.UserId,
	opts ...option.RequestOption,
) (*fern.User, error) {
	response, err := c.WithRawResponse.GetUser(
		ctx,
		userId,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
