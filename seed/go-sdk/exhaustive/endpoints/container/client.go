// Code generated by Fern. DO NOT EDIT.

package container

import (
	context "context"
	core "github.com/exhaustive/fern/core"
	internal "github.com/exhaustive/fern/internal"
	option "github.com/exhaustive/fern/option"
	types "github.com/exhaustive/fern/types"
	http "net/http"
)

type Client struct {
	WithRawResponse *RawClient

	baseURL string
	caller  *internal.Caller
	header  http.Header
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		WithRawResponse: NewRawClient(options),
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
	}
}

func (c *Client) GetAndReturnListOfPrimitives(
	ctx context.Context,
	request []string,
	opts ...option.RequestOption,
) ([]string, error) {
	response, err := c.WithRawResponse.GetAndReturnListOfPrimitives(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) GetAndReturnListOfObjects(
	ctx context.Context,
	request []*types.ObjectWithRequiredField,
	opts ...option.RequestOption,
) ([]*types.ObjectWithRequiredField, error) {
	response, err := c.WithRawResponse.GetAndReturnListOfObjects(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) GetAndReturnSetOfPrimitives(
	ctx context.Context,
	request []string,
	opts ...option.RequestOption,
) ([]string, error) {
	response, err := c.WithRawResponse.GetAndReturnSetOfPrimitives(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) GetAndReturnSetOfObjects(
	ctx context.Context,
	request []*types.ObjectWithRequiredField,
	opts ...option.RequestOption,
) ([]*types.ObjectWithRequiredField, error) {
	response, err := c.WithRawResponse.GetAndReturnSetOfObjects(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) GetAndReturnMapPrimToPrim(
	ctx context.Context,
	request map[string]string,
	opts ...option.RequestOption,
) (map[string]string, error) {
	response, err := c.WithRawResponse.GetAndReturnMapPrimToPrim(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) GetAndReturnMapOfPrimToObject(
	ctx context.Context,
	request map[string]*types.ObjectWithRequiredField,
	opts ...option.RequestOption,
) (map[string]*types.ObjectWithRequiredField, error) {
	response, err := c.WithRawResponse.GetAndReturnMapOfPrimToObject(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) GetAndReturnOptional(
	ctx context.Context,
	request *types.ObjectWithRequiredField,
	opts ...option.RequestOption,
) (*types.ObjectWithRequiredField, error) {
	response, err := c.WithRawResponse.GetAndReturnOptional(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
