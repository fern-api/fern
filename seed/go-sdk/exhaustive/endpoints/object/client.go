// Code generated by Fern. DO NOT EDIT.

package object

import (
	context "context"
	core "github.com/exhaustive/fern/core"
	internal "github.com/exhaustive/fern/internal"
	option "github.com/exhaustive/fern/option"
	types "github.com/exhaustive/fern/types"
)

type Client struct {
	WithRawResponse *RawClient

	options *core.RequestOptions
	baseURL string
	caller  *internal.Caller
}

func NewClient(options *core.RequestOptions) *Client {
	return &Client{
		WithRawResponse: NewRawClient(options),
		options:         options,
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
	}
}

func (c *Client) GetAndReturnWithOptionalField(
	ctx context.Context,
	request *types.ObjectWithOptionalField,
	opts ...option.RequestOption,
) (*types.ObjectWithOptionalField, error) {
	response, err := c.WithRawResponse.GetAndReturnWithOptionalField(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) GetAndReturnWithRequiredField(
	ctx context.Context,
	request *types.ObjectWithRequiredField,
	opts ...option.RequestOption,
) (*types.ObjectWithRequiredField, error) {
	response, err := c.WithRawResponse.GetAndReturnWithRequiredField(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) GetAndReturnWithMapOfMap(
	ctx context.Context,
	request *types.ObjectWithMapOfMap,
	opts ...option.RequestOption,
) (*types.ObjectWithMapOfMap, error) {
	response, err := c.WithRawResponse.GetAndReturnWithMapOfMap(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) GetAndReturnNestedWithOptionalField(
	ctx context.Context,
	request *types.NestedObjectWithOptionalField,
	opts ...option.RequestOption,
) (*types.NestedObjectWithOptionalField, error) {
	response, err := c.WithRawResponse.GetAndReturnNestedWithOptionalField(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) GetAndReturnNestedWithRequiredField(
	ctx context.Context,
	string_ string,
	request *types.NestedObjectWithRequiredField,
	opts ...option.RequestOption,
) (*types.NestedObjectWithRequiredField, error) {
	response, err := c.WithRawResponse.GetAndReturnNestedWithRequiredField(
		ctx,
		string_,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) GetAndReturnNestedWithRequiredFieldAsList(
	ctx context.Context,
	request []*types.NestedObjectWithRequiredField,
	opts ...option.RequestOption,
) (*types.NestedObjectWithRequiredField, error) {
	response, err := c.WithRawResponse.GetAndReturnNestedWithRequiredFieldAsList(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}

func (c *Client) TestIntegerOverflowEdgeCases(
	ctx context.Context,
	request *types.ObjectWithOptionalField,
	opts ...option.RequestOption,
) (*types.ObjectWithOptionalField, error) {
	response, err := c.WithRawResponse.TestIntegerOverflowEdgeCases(
		ctx,
		request,
		opts...,
	)
	if err != nil {
		return nil, err
	}
	return response.Body, nil
}
