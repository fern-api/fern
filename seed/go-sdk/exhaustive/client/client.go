// Code generated by Fern. DO NOT EDIT.

package client

import (
	core "github.com/exhaustive/fern/core"
	client "github.com/exhaustive/fern/endpoints/client"
	inlinedrequests "github.com/exhaustive/fern/inlinedrequests"
	internal "github.com/exhaustive/fern/internal"
	noauth "github.com/exhaustive/fern/noauth"
	noreqbody "github.com/exhaustive/fern/noreqbody"
	option "github.com/exhaustive/fern/option"
	reqwithheaders "github.com/exhaustive/fern/reqwithheaders"
	http "net/http"
)

type Client struct {
	Endpoints       *client.Client
	InlinedRequests *inlinedrequests.Client
	NoAuth          *noauth.Client
	NoReqBody       *noreqbody.Client
	ReqWithHeaders  *reqwithheaders.Client

	baseURL string
	caller  *internal.Caller
	header  http.Header
}

func NewClient(opts ...option.RequestOption) *Client {
	options := core.NewRequestOptions(opts...)
	return &Client{
		Endpoints:       client.NewClient(opts...),
		InlinedRequests: inlinedrequests.NewClient(opts...),
		NoAuth:          noauth.NewClient(opts...),
		NoReqBody:       noreqbody.NewClient(opts...),
		ReqWithHeaders:  reqwithheaders.NewClient(opts...),
		baseURL:         options.BaseURL,
		caller: internal.NewCaller(
			&internal.CallerParams{
				Client:      options.HTTPClient,
				MaxAttempts: options.MaxAttempts,
			},
		),
		header: options.ToHeader(),
	}
}
