// Code generated by Fern. DO NOT EDIT.

package types

import (
	json "encoding/json"
	core "github.com/exhaustive/fern/core"
)

type ErrorWithEnumBody struct {
	*core.APIError
	Body WeatherReport
}

func (e *ErrorWithEnumBody) UnmarshalJSON(data []byte) error {
	var body WeatherReport
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	e.StatusCode = 400
	e.Body = body
	return nil
}

func (e *ErrorWithEnumBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(e.Body)
}

func (e *ErrorWithEnumBody) Unwrap() error {
	return e.APIError
}

type NestedObjectWithOptionalFieldError struct {
	*core.APIError
	Body *NestedObjectWithOptionalField
}

func (n *NestedObjectWithOptionalFieldError) UnmarshalJSON(data []byte) error {
	var body *NestedObjectWithOptionalField
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	n.StatusCode = 400
	n.Body = body
	return nil
}

func (n *NestedObjectWithOptionalFieldError) MarshalJSON() ([]byte, error) {
	return json.Marshal(n.Body)
}

func (n *NestedObjectWithOptionalFieldError) Unwrap() error {
	return n.APIError
}

type NestedObjectWithRequiredFieldError struct {
	*core.APIError
	Body *NestedObjectWithRequiredField
}

func (n *NestedObjectWithRequiredFieldError) UnmarshalJSON(data []byte) error {
	var body *NestedObjectWithRequiredField
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	n.StatusCode = 400
	n.Body = body
	return nil
}

func (n *NestedObjectWithRequiredFieldError) MarshalJSON() ([]byte, error) {
	return json.Marshal(n.Body)
}

func (n *NestedObjectWithRequiredFieldError) Unwrap() error {
	return n.APIError
}

type ObjectWithOptionalFieldError struct {
	*core.APIError
	Body *ObjectWithOptionalField
}

func (o *ObjectWithOptionalFieldError) UnmarshalJSON(data []byte) error {
	var body *ObjectWithOptionalField
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	o.StatusCode = 400
	o.Body = body
	return nil
}

func (o *ObjectWithOptionalFieldError) MarshalJSON() ([]byte, error) {
	return json.Marshal(o.Body)
}

func (o *ObjectWithOptionalFieldError) Unwrap() error {
	return o.APIError
}

type ObjectWithRequiredFieldError struct {
	*core.APIError
	Body *ObjectWithRequiredField
}

func (o *ObjectWithRequiredFieldError) UnmarshalJSON(data []byte) error {
	var body *ObjectWithRequiredField
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	o.StatusCode = 400
	o.Body = body
	return nil
}

func (o *ObjectWithRequiredFieldError) MarshalJSON() ([]byte, error) {
	return json.Marshal(o.Body)
}

func (o *ObjectWithRequiredFieldError) Unwrap() error {
	return o.APIError
}

type ErrorWithUnionBody struct {
	*core.APIError
	Body *Animal
}

func (e *ErrorWithUnionBody) UnmarshalJSON(data []byte) error {
	var body *Animal
	if err := json.Unmarshal(data, &body); err != nil {
		return err
	}
	e.StatusCode = 400
	e.Body = body
	return nil
}

func (e *ErrorWithUnionBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(e.Body)
}

func (e *ErrorWithUnionBody) Unwrap() error {
	return e.APIError
}
