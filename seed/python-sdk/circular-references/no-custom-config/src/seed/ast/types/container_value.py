# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs


class ContainerValue_List(UniversalBaseModel):
    value: typing.List["FieldValue"]
    type: typing.Literal["list"] = "list"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


class ContainerValue_Optional(UniversalBaseModel):
    value: typing.Optional["FieldValue"] = None
    type: typing.Literal["optional"] = "optional"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


ContainerValue = typing.Union[ContainerValue_List, ContainerValue_Optional]
from .field_value import FieldValue  # noqa: E402, F401, I001

update_forward_refs(ContainerValue_List)
update_forward_refs(ContainerValue_Optional)
