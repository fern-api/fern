# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
from ....core.pydantic_utilities import UniversalBaseModel


class OptionalAlias(UniversalBaseModel):
    __root__: typing.Optional[str]

    def get_as_str(self) -> typing.Optional[str]:
        return self.__root__

    @staticmethod
    def from_str(value: typing.Optional[str]) -> OptionalAlias:
        return OptionalAlias(__root__=value)

    class Config:
        frozen = True
        smart_union = True
        extra = pydantic.Extra.allow
