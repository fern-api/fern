# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from .raw_client import AsyncRawNoAuthClient, RawNoAuthClient

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class NoAuthClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawNoAuthClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawNoAuthClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawNoAuthClient
        """
        return self._raw_client

    def post_with_no_auth(
        self, *, request: typing.Optional[typing.Any] = None, request_options: typing.Optional[RequestOptions] = None
    ) -> bool:
        """
        POST request with no auth

        Parameters
        ----------
        request : typing.Optional[typing.Any]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        bool

        Examples
        --------
        from seed import SeedExhaustive
        client = SeedExhaustive(token="YOUR_TOKEN", base_url="https://yourhost.com/path/to/api", )
        client.no_auth.post_with_no_auth(request={'key': 'value'}
        , )
        """
        _response = self._raw_client.post_with_no_auth(request=request, request_options=request_options)
        return _response.data


class AsyncNoAuthClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawNoAuthClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawNoAuthClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawNoAuthClient
        """
        return self._raw_client

    async def post_with_no_auth(
        self, *, request: typing.Optional[typing.Any] = None, request_options: typing.Optional[RequestOptions] = None
    ) -> bool:
        """
        POST request with no auth

        Parameters
        ----------
        request : typing.Optional[typing.Any]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        bool

        Examples
        --------
        from seed import AsyncSeedExhaustive
        import asyncio
        client = AsyncSeedExhaustive(token="YOUR_TOKEN", base_url="https://yourhost.com/path/to/api", )
        async def main() -> None:
            await client.no_auth.post_with_no_auth(request={'key': 'value'}
            , )
        asyncio.run(main())
        """
        _response = await self._raw_client.post_with_no_auth(request=request, request_options=request_options)
        return _response.data
