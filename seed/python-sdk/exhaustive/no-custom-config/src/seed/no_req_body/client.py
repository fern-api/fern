# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from ..types.object.types.object_with_optional_field import ObjectWithOptionalField
from .raw_client import AsyncRawNoReqBodyClient, RawNoReqBodyClient


class NoReqBodyClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawNoReqBodyClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawNoReqBodyClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawNoReqBodyClient
        """
        return self._raw_client

    def get_with_no_request_body(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> ObjectWithOptionalField:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        ObjectWithOptionalField

        Examples
        --------
        from seed import SeedExhaustive
        client = SeedExhaustive(token="YOUR_TOKEN", base_url="https://yourhost.com/path/to/api", )
        client.no_req_body.get_with_no_request_body()
        """
        response = self._raw_client.get_with_no_request_body(request_options=request_options)
        return response.data

    def post_with_no_request_body(self, *, request_options: typing.Optional[RequestOptions] = None) -> str:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        str

        Examples
        --------
        from seed import SeedExhaustive
        client = SeedExhaustive(token="YOUR_TOKEN", base_url="https://yourhost.com/path/to/api", )
        client.no_req_body.post_with_no_request_body()
        """
        response = self._raw_client.post_with_no_request_body(request_options=request_options)
        return response.data


class AsyncNoReqBodyClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawNoReqBodyClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawNoReqBodyClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawNoReqBodyClient
        """
        return self._raw_client

    async def get_with_no_request_body(
        self, *, request_options: typing.Optional[RequestOptions] = None
    ) -> ObjectWithOptionalField:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        ObjectWithOptionalField

        Examples
        --------
        from seed import AsyncSeedExhaustive
        import asyncio
        client = AsyncSeedExhaustive(token="YOUR_TOKEN", base_url="https://yourhost.com/path/to/api", )
        async def main() -> None:
            await client.no_req_body.get_with_no_request_body()
        asyncio.run(main())
        """
        response = await self._raw_client.get_with_no_request_body(request_options=request_options)
        return response.data

    async def post_with_no_request_body(self, *, request_options: typing.Optional[RequestOptions] = None) -> str:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        str

        Examples
        --------
        from seed import AsyncSeedExhaustive
        import asyncio
        client = AsyncSeedExhaustive(token="YOUR_TOKEN", base_url="https://yourhost.com/path/to/api", )
        async def main() -> None:
            await client.no_req_body.post_with_no_request_body()
        asyncio.run(main())
        """
        response = await self._raw_client.post_with_no_request_body(request_options=request_options)
        return response.data
