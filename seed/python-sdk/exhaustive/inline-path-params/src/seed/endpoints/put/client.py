# This file was auto-generated by Fern from our API Definition.

from ...core.client_wrapper import SyncClientWrapper
from .raw_client import RawPutClient
import typing
from ...core.request_options import RequestOptions
from .types.put_response import PutResponse
from ...core.client_wrapper import AsyncClientWrapper
from .raw_client import AsyncRawPutClient


class PutClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawPutClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawPutClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawPutClient
        """
        return self._raw_client

    def add(self, *, id: str, request_options: typing.Optional[RequestOptions] = None) -> PutResponse:
        """
        Parameters
        ----------
        id : str

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        PutResponse

        Examples
        --------
        from seed import SeedExhaustive
        client = SeedExhaustive(token="YOUR_TOKEN", base_url="https://yourhost.com/path/to/api", )
        client.endpoints.put.add(id='id', )
        """
        response = self._raw_client.add(id=id, request_options=request_options)
        return response.data


class AsyncPutClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawPutClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawPutClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawPutClient
        """
        return self._raw_client

    async def add(self, *, id: str, request_options: typing.Optional[RequestOptions] = None) -> PutResponse:
        """
        Parameters
        ----------
        id : str

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        PutResponse

        Examples
        --------
        from seed import AsyncSeedExhaustive
        import asyncio
        client = AsyncSeedExhaustive(token="YOUR_TOKEN", base_url="https://yourhost.com/path/to/api", )
        async def main() -> None:
            await client.endpoints.put.add(id='id', )
        asyncio.run(main())
        """
        response = await self._raw_client.add(id=id, request_options=request_options)
        return response.data
