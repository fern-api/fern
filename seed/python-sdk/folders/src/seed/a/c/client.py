# This file was auto-generated by Fern from our API Definition.

from ...core.client_wrapper import SyncClientWrapper
from .raw_client import RawCClient
import typing
from ...core.request_options import RequestOptions
from ...core.client_wrapper import AsyncClientWrapper
from .raw_client import AsyncRawCClient


class CClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawCClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawCClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawCClient
        """
        return self._raw_client

    def foo(self, *, request_options: typing.Optional[RequestOptions] = None) -> None:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from seed import SeedApi

        client = SeedApi(
            base_url="https://yourhost.com/path/to/api",
        )
        client.a.c.foo()
        """
        response = self._raw_client.foo(
            request_options=request_options,
        )
        return response.data


class AsyncCClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawCClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawCClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawCClient
        """
        return self._raw_client

    async def foo(self, *, request_options: typing.Optional[RequestOptions] = None) -> None:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        import asyncio

        from seed import AsyncSeedApi

        client = AsyncSeedApi(
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.a.c.foo()


        asyncio.run(main())
        """
        response = await self._raw_client.foo(
            request_options=request_options,
        )
        return response.data
