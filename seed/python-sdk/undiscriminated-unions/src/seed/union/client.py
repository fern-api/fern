# This file was auto-generated by Fern from our API Definition.

import typing
from ..core.client_wrapper import SyncClientWrapper
from .raw_client import RawUnionClient
from .types.my_union import MyUnion
from ..core.request_options import RequestOptions
from .types.metadata import Metadata
from ..core.client_wrapper import AsyncClientWrapper
from .raw_client import AsyncRawUnionClient

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class UnionClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawUnionClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawUnionClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawUnionClient
        """
        return self._raw_client

    def get(self, *, request: MyUnion, request_options: typing.Optional[RequestOptions] = None) -> MyUnion:
        """
        Parameters
        ----------
        request : MyUnion

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        MyUnion

        Examples
        --------
        from seed import SeedUndiscriminatedUnions

        client = SeedUndiscriminatedUnions(
            base_url="https://yourhost.com/path/to/api",
        )
        client.union.get(
            request="string",
        )
        """
        response = self._raw_client.get(
            request=request,
            request_options=request_options,
        )
        return response.data

    def get_metadata(self, *, request_options: typing.Optional[RequestOptions] = None) -> Metadata:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        Metadata

        Examples
        --------
        from seed import SeedUndiscriminatedUnions

        client = SeedUndiscriminatedUnions(
            base_url="https://yourhost.com/path/to/api",
        )
        client.union.get_metadata()
        """
        response = self._raw_client.get_metadata(
            request_options=request_options,
        )
        return response.data


class AsyncUnionClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawUnionClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawUnionClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawUnionClient
        """
        return self._raw_client

    async def get(self, *, request: MyUnion, request_options: typing.Optional[RequestOptions] = None) -> MyUnion:
        """
        Parameters
        ----------
        request : MyUnion

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        MyUnion

        Examples
        --------
        import asyncio

        from seed import AsyncSeedUndiscriminatedUnions

        client = AsyncSeedUndiscriminatedUnions(
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.union.get(
                request="string",
            )


        asyncio.run(main())
        """
        response = await self._raw_client.get(
            request=request,
            request_options=request_options,
        )
        return response.data

    async def get_metadata(self, *, request_options: typing.Optional[RequestOptions] = None) -> Metadata:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        Metadata

        Examples
        --------
        import asyncio

        from seed import AsyncSeedUndiscriminatedUnions

        client = AsyncSeedUndiscriminatedUnions(
            base_url="https://yourhost.com/path/to/api",
        )


        async def main() -> None:
            await client.union.get_metadata()


        asyncio.run(main())
        """
        response = await self._raw_client.get_metadata(
            request_options=request_options,
        )
        return response.data
