# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ..core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .node import Node


class Tree(UniversalBaseModel):
    """
    Examples
    --------
    from seed import Tree
    from seed import Node
    from seed.commons.metadata import Metadata
    Tree(nodes=[Node(id='node-8dvgfja2', label='left', metadata=Metadata(id='metadata-kjasf923', data={'foo': 'bar', 'baz': 'qux'}, ), ), Node(id='node-cwda9fi2x', label='right', metadata=Metadata(id='metadata-lkasdfv9j', data={'one': 'two', 'three': 'four'}, ), )], )
    """

    nodes: typing.Optional[typing.List[Node]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
