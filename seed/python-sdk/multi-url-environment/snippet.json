{
    "types": {},
    "endpoints": [
        {
            "example_identifier": "default",
            "id": {
                "path": "/ec2/boot",
                "method": "POST",
                "identifier_override": "endpoint_ec2.bootInstance"
            },
            "snippet": {
                "sync_client": "from seed import SeedMultiUrlEnvironment\nclient = SeedMultiUrlEnvironment(token=\"YOUR_TOKEN\", )\nclient.ec_2.boot_instance(size='size', )\n",
                "async_client": "from seed import AsyncSeedMultiUrlEnvironment\nimport asyncio\nclient = AsyncSeedMultiUrlEnvironment(token=\"YOUR_TOKEN\", )\nasync def main() -> None:\n    await client.ec_2.boot_instance(size='size', )\nasyncio.run(main())",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/s3/presigned-url",
                "method": "POST",
                "identifier_override": "endpoint_s3.getPresignedUrl"
            },
            "snippet": {
                "sync_client": "from seed import SeedMultiUrlEnvironment\nclient = SeedMultiUrlEnvironment(token=\"YOUR_TOKEN\", )\nclient.s_3.get_presigned_url(s_3_key='s3Key', )\n",
                "async_client": "from seed import AsyncSeedMultiUrlEnvironment\nimport asyncio\nclient = AsyncSeedMultiUrlEnvironment(token=\"YOUR_TOKEN\", )\nasync def main() -> None:\n    await client.s_3.get_presigned_url(s_3_key='s3Key', )\nasyncio.run(main())",
                "type": "python"
            }
        }
    ]
}