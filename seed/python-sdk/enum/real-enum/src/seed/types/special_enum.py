# This file was auto-generated by Fern from our API Definition.

import enum
import typing
T_Result = typing.TypeVar("T_Result")
class SpecialEnum(str, enum.Enum):
    A = ""
    B = "Hello \"World\""
    C = "Hello 'World'"
    D = "Hello\\World"
    E = "Hello\nWorld"
    F = "Hello\rWorld"
    H = "Hello\tWorld"
    I = "Hello\fWorld"
    J = "Hello\u0008World"
    K = "Hello\vWorld"
    L = "Hello\0World"
    M = "Hello\u0007World"
    N = "Hello\u0001World"
    O = "Hello\u0002World"
    P = "Hello\u001FWorld"
    Q = "Hello\u007FWorld"
    R = "Hello\u009FWorld"
    S = "Line 1\n"Quote"\tTab\\Backslash\r\nLine 2\0Null"
    T = "\n\r\t\0\u0008\f\v\u0007"
    U = "Hello ä¸–ç•Œ"
    V = "cafÃ©"
    W = "ğŸš€"
    X = "\\n"
    Y = "\\"
    Z = "{"name": "John", "age": 30, "city": "New York"}"
    AA = "SELECT * FROM users WHERE name = 'John O\\'Reilly'"
    BB = "C:\\Users\\John\\Documents\\file.txt"
    CC = "/usr/local/bin/app"
    DD = "\\d{3}-\\d{2}-\\d{4}"
    EE = "[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}"
    FF = "transcript[transcriptType="final"]"
    GG = "transcript[transcriptType='final']"
    
    def visit(self, a: typing.Callable[[], T_Result], b: typing.Callable[[], T_Result], c: typing.Callable[[], T_Result], d: typing.Callable[[], T_Result], e: typing.Callable[[], T_Result], f: typing.Callable[[], T_Result], h: typing.Callable[[], T_Result], i: typing.Callable[[], T_Result], j: typing.Callable[[], T_Result], k: typing.Callable[[], T_Result], l: typing.Callable[[], T_Result], m: typing.Callable[[], T_Result], n: typing.Callable[[], T_Result], o: typing.Callable[[], T_Result], p: typing.Callable[[], T_Result], q: typing.Callable[[], T_Result], r: typing.Callable[[], T_Result], s: typing.Callable[[], T_Result], t: typing.Callable[[], T_Result], u: typing.Callable[[], T_Result], v: typing.Callable[[], T_Result], w: typing.Callable[[], T_Result], x: typing.Callable[[], T_Result], y: typing.Callable[[], T_Result], z: typing.Callable[[], T_Result], aa: typing.Callable[[], T_Result], bb: typing.Callable[[], T_Result], cc: typing.Callable[[], T_Result], dd: typing.Callable[[], T_Result], ee: typing.Callable[[], T_Result], ff: typing.Callable[[], T_Result], gg: typing.Callable[[], T_Result]) -> T_Result:
        if self is SpecialEnum.A:
            return a(
            )
        if self is SpecialEnum.B:
            return b(
            )
        if self is SpecialEnum.C:
            return c(
            )
        if self is SpecialEnum.D:
            return d(
            )
        if self is SpecialEnum.E:
            return e(
            )
        if self is SpecialEnum.F:
            return f(
            )
        if self is SpecialEnum.H:
            return h(
            )
        if self is SpecialEnum.I:
            return i(
            )
        if self is SpecialEnum.J:
            return j(
            )
        if self is SpecialEnum.K:
            return k(
            )
        if self is SpecialEnum.L:
            return l(
            )
        if self is SpecialEnum.M:
            return m(
            )
        if self is SpecialEnum.N:
            return n(
            )
        if self is SpecialEnum.O:
            return o(
            )
        if self is SpecialEnum.P:
            return p(
            )
        if self is SpecialEnum.Q:
            return q(
            )
        if self is SpecialEnum.R:
            return r(
            )
        if self is SpecialEnum.S:
            return s(
            )
        if self is SpecialEnum.T:
            return t(
            )
        if self is SpecialEnum.U:
            return u(
            )
        if self is SpecialEnum.V:
            return v(
            )
        if self is SpecialEnum.W:
            return w(
            )
        if self is SpecialEnum.X:
            return x(
            )
        if self is SpecialEnum.Y:
            return y(
            )
        if self is SpecialEnum.Z:
            return z(
            )
        if self is SpecialEnum.AA:
            return aa(
            )
        if self is SpecialEnum.BB:
            return bb(
            )
        if self is SpecialEnum.CC:
            return cc(
            )
        if self is SpecialEnum.DD:
            return dd(
            )
        if self is SpecialEnum.EE:
            return ee(
            )
        if self is SpecialEnum.FF:
            return ff(
            )
        if self is SpecialEnum.GG:
            return gg(
            )
