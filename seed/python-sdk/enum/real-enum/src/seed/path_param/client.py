# This file was auto-generated by Fern from our API Definition.

from ..core.client_wrapper import SyncClientWrapper
from .raw_client import RawPathParamClient
from ..types.operand import Operand
from ..types.color_or_operand import ColorOrOperand
import typing
from ..core.request_options import RequestOptions
from ..core.client_wrapper import AsyncClientWrapper
from .raw_client import AsyncRawPathParamClient


class PathParamClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawPathParamClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawPathParamClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawPathParamClient
        """
        return self._raw_client

    def send(
        self,
        operand: Operand,
        operand_or_color: ColorOrOperand,
        *,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        Parameters
        ----------
        operand : Operand

        operand_or_color : ColorOrOperand

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from seed import SeedEnum
        from seed import Operand
        from seed import Color
        client = SeedEnum(base_url="https://yourhost.com/path/to/api", )
        client.path_param.send(operand=Operand.GREATER_THAN, operand_or_color=Color.RED, )
        """
        response = self._raw_client.send(operand, operand_or_color, request_options=request_options)
        return response.data


class AsyncPathParamClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawPathParamClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawPathParamClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawPathParamClient
        """
        return self._raw_client

    async def send(
        self,
        operand: Operand,
        operand_or_color: ColorOrOperand,
        *,
        request_options: typing.Optional[RequestOptions] = None,
    ) -> None:
        """
        Parameters
        ----------
        operand : Operand

        operand_or_color : ColorOrOperand

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        None

        Examples
        --------
        from seed import AsyncSeedEnum
        from seed import Operand
        from seed import Color
        import asyncio
        client = AsyncSeedEnum(base_url="https://yourhost.com/path/to/api", )
        async def main() -> None:
            await client.path_param.send(operand=Operand.GREATER_THAN, operand_or_color=Color.RED, )
        asyncio.run(main())
        """
        response = await self._raw_client.send(operand, operand_or_color, request_options=request_options)
        return response.data
