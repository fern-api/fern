{
    "types": {
        "type_:Operand": "from seed import Operand\nOperand.GREATER_THAN",
        "type_:Color": "from seed import Color\nColor.RED",
        "type_:ColorOrOperand": "from seed import Color\nColor.RED",
        "type_:EnumWithCustom": "from seed import EnumWithCustom\nEnumWithCustom.SAFE"
    },
    "endpoints": [
        {
            "example_identifier": "default",
            "id": {
                "path": "/inlined",
                "method": "POST",
                "identifier_override": "endpoint_inlined-request.send"
            },
            "snippet": {
                "sync_client": "from seed import SeedEnum\nfrom seed import Operand\nfrom seed import Color\nclient = SeedEnum(base_url=\"https://yourhost.com/path/to/api\", )\nclient.inlined_request.send(operand=Operand.GREATER_THAN, operand_or_color=Color.RED, )\n",
                "async_client": "from seed import AsyncSeedEnum\nfrom seed import Operand\nfrom seed import Color\nimport asyncio\nclient = AsyncSeedEnum(base_url=\"https://yourhost.com/path/to/api\", )\nasync def main() -> None:\n    await client.inlined_request.send(operand=Operand.GREATER_THAN, operand_or_color=Color.RED, )\nasyncio.run(main())",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/path/{operand}/{operandOrColor}",
                "method": "POST",
                "identifier_override": "endpoint_path-param.send"
            },
            "snippet": {
                "sync_client": "from seed import SeedEnum\nfrom seed import Operand\nfrom seed import Color\nclient = SeedEnum(base_url=\"https://yourhost.com/path/to/api\", )\nclient.path_param.send(operand=Operand.GREATER_THAN, operand_or_color=Color.RED, )\n",
                "async_client": "from seed import AsyncSeedEnum\nfrom seed import Operand\nfrom seed import Color\nimport asyncio\nclient = AsyncSeedEnum(base_url=\"https://yourhost.com/path/to/api\", )\nasync def main() -> None:\n    await client.path_param.send(operand=Operand.GREATER_THAN, operand_or_color=Color.RED, )\nasyncio.run(main())",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/query",
                "method": "POST",
                "identifier_override": "endpoint_query-param.send"
            },
            "snippet": {
                "sync_client": "from seed import SeedEnum\nfrom seed import Operand\nfrom seed import Color\nclient = SeedEnum(base_url=\"https://yourhost.com/path/to/api\", )\nclient.query_param.send(operand=Operand.GREATER_THAN, operand_or_color=Color.RED, )\n",
                "async_client": "from seed import AsyncSeedEnum\nfrom seed import Operand\nfrom seed import Color\nimport asyncio\nclient = AsyncSeedEnum(base_url=\"https://yourhost.com/path/to/api\", )\nasync def main() -> None:\n    await client.query_param.send(operand=Operand.GREATER_THAN, operand_or_color=Color.RED, )\nasyncio.run(main())",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/query-list",
                "method": "POST",
                "identifier_override": "endpoint_query-param.sendList"
            },
            "snippet": {
                "sync_client": "from seed import SeedEnum\nfrom seed import Operand\nfrom seed import Color\nclient = SeedEnum(base_url=\"https://yourhost.com/path/to/api\", )\nclient.query_param.send_list(operand=Operand.GREATER_THAN, maybe_operand=Operand.GREATER_THAN, operand_or_color=Color.RED, maybe_operand_or_color=Color.RED, )\n",
                "async_client": "from seed import AsyncSeedEnum\nfrom seed import Operand\nfrom seed import Color\nimport asyncio\nclient = AsyncSeedEnum(base_url=\"https://yourhost.com/path/to/api\", )\nasync def main() -> None:\n    await client.query_param.send_list(operand=Operand.GREATER_THAN, maybe_operand=Operand.GREATER_THAN, operand_or_color=Color.RED, maybe_operand_or_color=Color.RED, )\nasyncio.run(main())",
                "type": "python"
            }
        }
    ]
}