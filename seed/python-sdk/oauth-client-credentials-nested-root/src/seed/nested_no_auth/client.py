# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from .raw_client import AsyncRawNestedNoAuthClient, RawNestedNoAuthClient

if typing.TYPE_CHECKING:
    from .api.client import ApiClient, AsyncApiClient


class NestedNoAuthClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawNestedNoAuthClient(client_wrapper=client_wrapper)
        self._client_wrapper = client_wrapper
        self._api: typing.Optional[ApiClient] = None

    @property
    def with_raw_response(self) -> RawNestedNoAuthClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawNestedNoAuthClient
        """
        return self._raw_client

    @property
    def api(self):
        if self._api is None:
            from .api.client import ApiClient  # noqa: E402

            self._api = ApiClient(client_wrapper=self._client_wrapper)
        return self._api


class AsyncNestedNoAuthClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawNestedNoAuthClient(client_wrapper=client_wrapper)
        self._client_wrapper = client_wrapper
        self._api: typing.Optional[AsyncApiClient] = None

    @property
    def with_raw_response(self) -> AsyncRawNestedNoAuthClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawNestedNoAuthClient
        """
        return self._raw_client

    @property
    def api(self):
        if self._api is None:
            from .api.client import AsyncApiClient  # noqa: E402

            self._api = AsyncApiClient(client_wrapper=self._client_wrapper)
        return self._api
