{
    "types": {},
    "endpoints": [
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users/{userId}",
                "method": "GET",
                "identifier_override": "endpoint_nullable-optional.getUser"
            },
            "snippet": {
                "sync_client": "from seed import SeedNullableOptional\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.get_user(\n    user_id=\"userId\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedNullableOptional\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.get_user(\n        user_id=\"userId\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users",
                "method": "POST",
                "identifier_override": "endpoint_nullable-optional.createUser"
            },
            "snippet": {
                "sync_client": "from seed import SeedNullableOptional\nfrom seed.nullable_optional import Address\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.create_user(\n    username=\"username\",\n    email=\"email\",\n    phone=\"phone\",\n    address=Address(\n        street=\"street\",\n        city=\"city\",\n        state=\"state\",\n        zip_code=\"zipCode\",\n        country=\"country\",\n        building_id=\"buildingId\",\n        tenant_id=\"tenantId\",\n    ),\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedNullableOptional\nfrom seed.nullable_optional import Address\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.create_user(\n        username=\"username\",\n        email=\"email\",\n        phone=\"phone\",\n        address=Address(\n            street=\"street\",\n            city=\"city\",\n            state=\"state\",\n            zip_code=\"zipCode\",\n            country=\"country\",\n            building_id=\"buildingId\",\n            tenant_id=\"tenantId\",\n        ),\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users/{userId}",
                "method": "PATCH",
                "identifier_override": "endpoint_nullable-optional.updateUser"
            },
            "snippet": {
                "sync_client": "from seed import SeedNullableOptional\nfrom seed.nullable_optional import Address\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.update_user(\n    user_id=\"userId\",\n    username=\"username\",\n    email=\"email\",\n    phone=\"phone\",\n    address=Address(\n        street=\"street\",\n        city=\"city\",\n        state=\"state\",\n        zip_code=\"zipCode\",\n        country=\"country\",\n        building_id=\"buildingId\",\n        tenant_id=\"tenantId\",\n    ),\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedNullableOptional\nfrom seed.nullable_optional import Address\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.update_user(\n        user_id=\"userId\",\n        username=\"username\",\n        email=\"email\",\n        phone=\"phone\",\n        address=Address(\n            street=\"street\",\n            city=\"city\",\n            state=\"state\",\n            zip_code=\"zipCode\",\n            country=\"country\",\n            building_id=\"buildingId\",\n            tenant_id=\"tenantId\",\n        ),\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users",
                "method": "GET",
                "identifier_override": "endpoint_nullable-optional.listUsers"
            },
            "snippet": {
                "sync_client": "from seed import SeedNullableOptional\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.list_users(\n    limit=1,\n    offset=1,\n    include_deleted=True,\n    sort_by=\"sortBy\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedNullableOptional\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.list_users(\n        limit=1,\n        offset=1,\n        include_deleted=True,\n        sort_by=\"sortBy\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users/search",
                "method": "GET",
                "identifier_override": "endpoint_nullable-optional.searchUsers"
            },
            "snippet": {
                "sync_client": "from seed import SeedNullableOptional\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.search_users(\n    query=\"query\",\n    department=\"department\",\n    role=\"role\",\n    is_active=True,\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedNullableOptional\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.search_users(\n        query=\"query\",\n        department=\"department\",\n        role=\"role\",\n        is_active=True,\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/profiles/complex",
                "method": "POST",
                "identifier_override": "endpoint_nullable-optional.createComplexProfile"
            },
            "snippet": {
                "sync_client": "import datetime\n\nfrom seed import SeedNullableOptional\nfrom seed.nullable_optional import (\n    Address,\n    NotificationMethod_Email,\n    SearchResult_User,\n)\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.create_complex_profile(\n    id=\"id\",\n    nullable_role=\"ADMIN\",\n    optional_role=\"ADMIN\",\n    optional_nullable_role=\"ADMIN\",\n    nullable_status=\"active\",\n    optional_status=\"active\",\n    optional_nullable_status=\"active\",\n    nullable_notification=NotificationMethod_Email(\n        email_address=\"emailAddress\",\n        subject=\"subject\",\n        html_content=\"htmlContent\",\n    ),\n    optional_notification=NotificationMethod_Email(\n        email_address=\"emailAddress\",\n        subject=\"subject\",\n        html_content=\"htmlContent\",\n    ),\n    optional_nullable_notification=NotificationMethod_Email(\n        email_address=\"emailAddress\",\n        subject=\"subject\",\n        html_content=\"htmlContent\",\n    ),\n    nullable_search_result=SearchResult_User(\n        id=\"id\",\n        username=\"username\",\n        email=\"email\",\n        phone=\"phone\",\n        created_at=datetime.datetime.fromisoformat(\n            \"2024-01-15 09:30:00+00:00\",\n        ),\n        updated_at=datetime.datetime.fromisoformat(\n            \"2024-01-15 09:30:00+00:00\",\n        ),\n        address=Address(\n            street=\"street\",\n            city=\"city\",\n            state=\"state\",\n            zip_code=\"zipCode\",\n            country=\"country\",\n            building_id=\"buildingId\",\n            tenant_id=\"tenantId\",\n        ),\n    ),\n    optional_search_result=SearchResult_User(\n        id=\"id\",\n        username=\"username\",\n        email=\"email\",\n        phone=\"phone\",\n        created_at=datetime.datetime.fromisoformat(\n            \"2024-01-15 09:30:00+00:00\",\n        ),\n        updated_at=datetime.datetime.fromisoformat(\n            \"2024-01-15 09:30:00+00:00\",\n        ),\n        address=Address(\n            street=\"street\",\n            city=\"city\",\n            state=\"state\",\n            zip_code=\"zipCode\",\n            country=\"country\",\n            building_id=\"buildingId\",\n            tenant_id=\"tenantId\",\n        ),\n    ),\n    nullable_array=[\"nullableArray\", \"nullableArray\"],\n    optional_array=[\"optionalArray\", \"optionalArray\"],\n    optional_nullable_array=[\"optionalNullableArray\", \"optionalNullableArray\"],\n    nullable_list_of_nullables=[\n        \"nullableListOfNullables\",\n        \"nullableListOfNullables\",\n    ],\n    nullable_map_of_nullables={\n        \"nullableMapOfNullables\": Address(\n            street=\"street\",\n            city=\"city\",\n            state=\"state\",\n            zip_code=\"zipCode\",\n            country=\"country\",\n            building_id=\"buildingId\",\n            tenant_id=\"tenantId\",\n        )\n    },\n    nullable_list_of_unions=[\n        NotificationMethod_Email(\n            email_address=\"emailAddress\",\n            subject=\"subject\",\n            html_content=\"htmlContent\",\n        ),\n        NotificationMethod_Email(\n            email_address=\"emailAddress\",\n            subject=\"subject\",\n            html_content=\"htmlContent\",\n        ),\n    ],\n    optional_map_of_enums={\"optionalMapOfEnums\": \"ADMIN\"},\n)\n",
                "async_client": "import asyncio\nimport datetime\n\nfrom seed import AsyncSeedNullableOptional\nfrom seed.nullable_optional import (\n    Address,\n    NotificationMethod_Email,\n    SearchResult_User,\n)\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.create_complex_profile(\n        id=\"id\",\n        nullable_role=\"ADMIN\",\n        optional_role=\"ADMIN\",\n        optional_nullable_role=\"ADMIN\",\n        nullable_status=\"active\",\n        optional_status=\"active\",\n        optional_nullable_status=\"active\",\n        nullable_notification=NotificationMethod_Email(\n            email_address=\"emailAddress\",\n            subject=\"subject\",\n            html_content=\"htmlContent\",\n        ),\n        optional_notification=NotificationMethod_Email(\n            email_address=\"emailAddress\",\n            subject=\"subject\",\n            html_content=\"htmlContent\",\n        ),\n        optional_nullable_notification=NotificationMethod_Email(\n            email_address=\"emailAddress\",\n            subject=\"subject\",\n            html_content=\"htmlContent\",\n        ),\n        nullable_search_result=SearchResult_User(\n            id=\"id\",\n            username=\"username\",\n            email=\"email\",\n            phone=\"phone\",\n            created_at=datetime.datetime.fromisoformat(\n                \"2024-01-15 09:30:00+00:00\",\n            ),\n            updated_at=datetime.datetime.fromisoformat(\n                \"2024-01-15 09:30:00+00:00\",\n            ),\n            address=Address(\n                street=\"street\",\n                city=\"city\",\n                state=\"state\",\n                zip_code=\"zipCode\",\n                country=\"country\",\n                building_id=\"buildingId\",\n                tenant_id=\"tenantId\",\n            ),\n        ),\n        optional_search_result=SearchResult_User(\n            id=\"id\",\n            username=\"username\",\n            email=\"email\",\n            phone=\"phone\",\n            created_at=datetime.datetime.fromisoformat(\n                \"2024-01-15 09:30:00+00:00\",\n            ),\n            updated_at=datetime.datetime.fromisoformat(\n                \"2024-01-15 09:30:00+00:00\",\n            ),\n            address=Address(\n                street=\"street\",\n                city=\"city\",\n                state=\"state\",\n                zip_code=\"zipCode\",\n                country=\"country\",\n                building_id=\"buildingId\",\n                tenant_id=\"tenantId\",\n            ),\n        ),\n        nullable_array=[\"nullableArray\", \"nullableArray\"],\n        optional_array=[\"optionalArray\", \"optionalArray\"],\n        optional_nullable_array=[\n            \"optionalNullableArray\",\n            \"optionalNullableArray\",\n        ],\n        nullable_list_of_nullables=[\n            \"nullableListOfNullables\",\n            \"nullableListOfNullables\",\n        ],\n        nullable_map_of_nullables={\n            \"nullableMapOfNullables\": Address(\n                street=\"street\",\n                city=\"city\",\n                state=\"state\",\n                zip_code=\"zipCode\",\n                country=\"country\",\n                building_id=\"buildingId\",\n                tenant_id=\"tenantId\",\n            )\n        },\n        nullable_list_of_unions=[\n            NotificationMethod_Email(\n                email_address=\"emailAddress\",\n                subject=\"subject\",\n                html_content=\"htmlContent\",\n            ),\n            NotificationMethod_Email(\n                email_address=\"emailAddress\",\n                subject=\"subject\",\n                html_content=\"htmlContent\",\n            ),\n        ],\n        optional_map_of_enums={\"optionalMapOfEnums\": \"ADMIN\"},\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/profiles/complex/{profileId}",
                "method": "GET",
                "identifier_override": "endpoint_nullable-optional.getComplexProfile"
            },
            "snippet": {
                "sync_client": "from seed import SeedNullableOptional\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.get_complex_profile(\n    profile_id=\"profileId\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedNullableOptional\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.get_complex_profile(\n        profile_id=\"profileId\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/profiles/complex/{profileId}",
                "method": "PATCH",
                "identifier_override": "endpoint_nullable-optional.updateComplexProfile"
            },
            "snippet": {
                "sync_client": "import datetime\n\nfrom seed import SeedNullableOptional\nfrom seed.nullable_optional import (\n    Address,\n    NotificationMethod_Email,\n    SearchResult_User,\n)\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.update_complex_profile(\n    profile_id=\"profileId\",\n    nullable_role=\"ADMIN\",\n    nullable_status=\"active\",\n    nullable_notification=NotificationMethod_Email(\n        email_address=\"emailAddress\",\n        subject=\"subject\",\n        html_content=\"htmlContent\",\n    ),\n    nullable_search_result=SearchResult_User(\n        id=\"id\",\n        username=\"username\",\n        email=\"email\",\n        phone=\"phone\",\n        created_at=datetime.datetime.fromisoformat(\n            \"2024-01-15 09:30:00+00:00\",\n        ),\n        updated_at=datetime.datetime.fromisoformat(\n            \"2024-01-15 09:30:00+00:00\",\n        ),\n        address=Address(\n            street=\"street\",\n            city=\"city\",\n            state=\"state\",\n            zip_code=\"zipCode\",\n            country=\"country\",\n            building_id=\"buildingId\",\n            tenant_id=\"tenantId\",\n        ),\n    ),\n    nullable_array=[\"nullableArray\", \"nullableArray\"],\n)\n",
                "async_client": "import asyncio\nimport datetime\n\nfrom seed import AsyncSeedNullableOptional\nfrom seed.nullable_optional import (\n    Address,\n    NotificationMethod_Email,\n    SearchResult_User,\n)\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.update_complex_profile(\n        profile_id=\"profileId\",\n        nullable_role=\"ADMIN\",\n        nullable_status=\"active\",\n        nullable_notification=NotificationMethod_Email(\n            email_address=\"emailAddress\",\n            subject=\"subject\",\n            html_content=\"htmlContent\",\n        ),\n        nullable_search_result=SearchResult_User(\n            id=\"id\",\n            username=\"username\",\n            email=\"email\",\n            phone=\"phone\",\n            created_at=datetime.datetime.fromisoformat(\n                \"2024-01-15 09:30:00+00:00\",\n            ),\n            updated_at=datetime.datetime.fromisoformat(\n                \"2024-01-15 09:30:00+00:00\",\n            ),\n            address=Address(\n                street=\"street\",\n                city=\"city\",\n                state=\"state\",\n                zip_code=\"zipCode\",\n                country=\"country\",\n                building_id=\"buildingId\",\n                tenant_id=\"tenantId\",\n            ),\n        ),\n        nullable_array=[\"nullableArray\", \"nullableArray\"],\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/test/deserialization",
                "method": "POST",
                "identifier_override": "endpoint_nullable-optional.testDeserialization"
            },
            "snippet": {
                "sync_client": "import datetime\n\nfrom seed import SeedNullableOptional\nfrom seed.nullable_optional import (\n    Address,\n    NotificationMethod_Email,\n    Organization,\n    SearchResult_User,\n)\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.test_deserialization(\n    required_string=\"requiredString\",\n    nullable_string=\"nullableString\",\n    optional_string=\"optionalString\",\n    optional_nullable_string=\"optionalNullableString\",\n    nullable_enum=\"ADMIN\",\n    optional_enum=\"active\",\n    nullable_union=NotificationMethod_Email(\n        email_address=\"emailAddress\",\n        subject=\"subject\",\n        html_content=\"htmlContent\",\n    ),\n    optional_union=SearchResult_User(\n        id=\"id\",\n        username=\"username\",\n        email=\"email\",\n        phone=\"phone\",\n        created_at=datetime.datetime.fromisoformat(\n            \"2024-01-15 09:30:00+00:00\",\n        ),\n        updated_at=datetime.datetime.fromisoformat(\n            \"2024-01-15 09:30:00+00:00\",\n        ),\n        address=Address(\n            street=\"street\",\n            city=\"city\",\n            state=\"state\",\n            zip_code=\"zipCode\",\n            country=\"country\",\n            building_id=\"buildingId\",\n            tenant_id=\"tenantId\",\n        ),\n    ),\n    nullable_list=[\"nullableList\", \"nullableList\"],\n    nullable_map={\"nullableMap\": 1},\n    nullable_object=Address(\n        street=\"street\",\n        city=\"city\",\n        state=\"state\",\n        zip_code=\"zipCode\",\n        country=\"country\",\n        building_id=\"buildingId\",\n        tenant_id=\"tenantId\",\n    ),\n    optional_object=Organization(\n        id=\"id\",\n        name=\"name\",\n        domain=\"domain\",\n        employee_count=1,\n    ),\n)\n",
                "async_client": "import asyncio\nimport datetime\n\nfrom seed import AsyncSeedNullableOptional\nfrom seed.nullable_optional import (\n    Address,\n    NotificationMethod_Email,\n    Organization,\n    SearchResult_User,\n)\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.test_deserialization(\n        required_string=\"requiredString\",\n        nullable_string=\"nullableString\",\n        optional_string=\"optionalString\",\n        optional_nullable_string=\"optionalNullableString\",\n        nullable_enum=\"ADMIN\",\n        optional_enum=\"active\",\n        nullable_union=NotificationMethod_Email(\n            email_address=\"emailAddress\",\n            subject=\"subject\",\n            html_content=\"htmlContent\",\n        ),\n        optional_union=SearchResult_User(\n            id=\"id\",\n            username=\"username\",\n            email=\"email\",\n            phone=\"phone\",\n            created_at=datetime.datetime.fromisoformat(\n                \"2024-01-15 09:30:00+00:00\",\n            ),\n            updated_at=datetime.datetime.fromisoformat(\n                \"2024-01-15 09:30:00+00:00\",\n            ),\n            address=Address(\n                street=\"street\",\n                city=\"city\",\n                state=\"state\",\n                zip_code=\"zipCode\",\n                country=\"country\",\n                building_id=\"buildingId\",\n                tenant_id=\"tenantId\",\n            ),\n        ),\n        nullable_list=[\"nullableList\", \"nullableList\"],\n        nullable_map={\"nullableMap\": 1},\n        nullable_object=Address(\n            street=\"street\",\n            city=\"city\",\n            state=\"state\",\n            zip_code=\"zipCode\",\n            country=\"country\",\n            building_id=\"buildingId\",\n            tenant_id=\"tenantId\",\n        ),\n        optional_object=Organization(\n            id=\"id\",\n            name=\"name\",\n            domain=\"domain\",\n            employee_count=1,\n        ),\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users/filter",
                "method": "GET",
                "identifier_override": "endpoint_nullable-optional.filterByRole"
            },
            "snippet": {
                "sync_client": "from seed import SeedNullableOptional\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.filter_by_role(\n    role=\"ADMIN\",\n    status=\"active\",\n    secondary_role=\"ADMIN\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedNullableOptional\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.filter_by_role(\n        role=\"ADMIN\",\n        status=\"active\",\n        secondary_role=\"ADMIN\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users/{userId}/notifications",
                "method": "GET",
                "identifier_override": "endpoint_nullable-optional.getNotificationSettings"
            },
            "snippet": {
                "sync_client": "from seed import SeedNullableOptional\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.get_notification_settings(\n    user_id=\"userId\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedNullableOptional\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.get_notification_settings(\n        user_id=\"userId\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users/{userId}/tags",
                "method": "PUT",
                "identifier_override": "endpoint_nullable-optional.updateTags"
            },
            "snippet": {
                "sync_client": "from seed import SeedNullableOptional\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.update_tags(\n    user_id=\"userId\",\n    tags=[\"tags\", \"tags\"],\n    categories=[\"categories\", \"categories\"],\n    labels=[\"labels\", \"labels\"],\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedNullableOptional\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.update_tags(\n        user_id=\"userId\",\n        tags=[\"tags\", \"tags\"],\n        categories=[\"categories\", \"categories\"],\n        labels=[\"labels\", \"labels\"],\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/search",
                "method": "POST",
                "identifier_override": "endpoint_nullable-optional.getSearchResults"
            },
            "snippet": {
                "sync_client": "from seed import SeedNullableOptional\n\nclient = SeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.nullable_optional.get_search_results(\n    query=\"query\",\n    filters={\"filters\": \"filters\"},\n    include_types=[\"includeTypes\", \"includeTypes\"],\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedNullableOptional\n\nclient = AsyncSeedNullableOptional(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.nullable_optional.get_search_results(\n        query=\"query\",\n        filters={\"filters\": \"filters\"},\n        include_types=[\"includeTypes\", \"includeTypes\"],\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        }
    ]
}