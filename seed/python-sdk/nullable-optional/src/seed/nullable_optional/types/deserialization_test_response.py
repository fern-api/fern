# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .deserialization_test_request import DeserializationTestRequest


class DeserializationTestResponse(UniversalBaseModel):
    """
    Response for deserialization test
    """

    echo: DeserializationTestRequest
    processed_at: typing_extensions.Annotated[dt.datetime, FieldMetadata(alias="processedAt")]
    null_count: typing_extensions.Annotated[int, FieldMetadata(alias="nullCount")]
    present_fields_count: typing_extensions.Annotated[int, FieldMetadata(alias="presentFieldsCount")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
