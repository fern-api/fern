# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from . import nullable_optional
    from .client import AsyncSeedNullableOptional, SeedNullableOptional
    from .nullable_optional import (
        Address,
        ComplexProfile,
        CreateUserRequest,
        DeserializationTestRequest,
        DeserializationTestResponse,
        Document,
        EmailNotification,
        NotificationMethod,
        NotificationMethod_Email,
        NotificationMethod_Push,
        NotificationMethod_Sms,
        NullableUserId,
        OptionalUserId,
        Organization,
        PushNotification,
        SearchResult,
        SearchResult_Document,
        SearchResult_Organization,
        SearchResult_User,
        SmsNotification,
        UpdateUserRequest,
        UserProfile,
        UserResponse,
        UserRole,
        UserStatus,
    )
    from .version import __version__
_dynamic_imports: typing.Dict[str, str] = {
    "Address": ".nullable_optional",
    "AsyncSeedNullableOptional": ".client",
    "ComplexProfile": ".nullable_optional",
    "CreateUserRequest": ".nullable_optional",
    "DeserializationTestRequest": ".nullable_optional",
    "DeserializationTestResponse": ".nullable_optional",
    "Document": ".nullable_optional",
    "EmailNotification": ".nullable_optional",
    "NotificationMethod": ".nullable_optional",
    "NotificationMethod_Email": ".nullable_optional",
    "NotificationMethod_Push": ".nullable_optional",
    "NotificationMethod_Sms": ".nullable_optional",
    "NullableUserId": ".nullable_optional",
    "OptionalUserId": ".nullable_optional",
    "Organization": ".nullable_optional",
    "PushNotification": ".nullable_optional",
    "SearchResult": ".nullable_optional",
    "SearchResult_Document": ".nullable_optional",
    "SearchResult_Organization": ".nullable_optional",
    "SearchResult_User": ".nullable_optional",
    "SeedNullableOptional": ".client",
    "SmsNotification": ".nullable_optional",
    "UpdateUserRequest": ".nullable_optional",
    "UserProfile": ".nullable_optional",
    "UserResponse": ".nullable_optional",
    "UserRole": ".nullable_optional",
    "UserStatus": ".nullable_optional",
    "__version__": ".version",
    "nullable_optional": ".",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "Address",
    "AsyncSeedNullableOptional",
    "ComplexProfile",
    "CreateUserRequest",
    "DeserializationTestRequest",
    "DeserializationTestResponse",
    "Document",
    "EmailNotification",
    "NotificationMethod",
    "NotificationMethod_Email",
    "NotificationMethod_Push",
    "NotificationMethod_Sms",
    "NullableUserId",
    "OptionalUserId",
    "Organization",
    "PushNotification",
    "SearchResult",
    "SearchResult_Document",
    "SearchResult_Organization",
    "SearchResult_User",
    "SeedNullableOptional",
    "SmsNotification",
    "UpdateUserRequest",
    "UserProfile",
    "UserResponse",
    "UserRole",
    "UserStatus",
    "__version__",
    "nullable_optional",
]
