# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata


class Address(UniversalBaseModel):
    line_1: typing_extensions.Annotated[str, FieldMetadata(alias="line1")]
    line_2: typing_extensions.Annotated[typing.Optional[str], FieldMetadata(alias="line2")] = None
    city: str
    state: str
    zip: str
    country: typing.Literal["USA"] = "USA"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
