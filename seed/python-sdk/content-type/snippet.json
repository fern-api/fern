{
    "types": {},
    "endpoints": [
        {
            "example_identifier": "default",
            "id": {
                "path": "/",
                "method": "PATCH",
                "identifier_override": "endpoint_service.patch"
            },
            "snippet": {
                "sync_client": "from seed import SeedContentTypes\n\nclient = SeedContentTypes(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.patch(\n    application=\"application\",\n    require_auth=True,\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedContentTypes\n\nclient = AsyncSeedContentTypes(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.patch(\n        application=\"application\",\n        require_auth=True,\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/complex/{id}",
                "method": "PATCH",
                "identifier_override": "endpoint_service.patchComplex"
            },
            "snippet": {
                "sync_client": "from seed import SeedContentTypes\n\nclient = SeedContentTypes(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.patch_complex(\n    id=\"id\",\n    name=\"name\",\n    age=1,\n    active=True,\n    metadata={\"metadata\": {\"key\": \"value\"}},\n    tags=[\"tags\", \"tags\"],\n    email=\"email\",\n    nickname=\"nickname\",\n    bio=\"bio\",\n    profile_image_url=\"profileImageUrl\",\n    settings={\"settings\": {\"key\": \"value\"}},\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedContentTypes\n\nclient = AsyncSeedContentTypes(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.patch_complex(\n        id=\"id\",\n        name=\"name\",\n        age=1,\n        active=True,\n        metadata={\"metadata\": {\"key\": \"value\"}},\n        tags=[\"tags\", \"tags\"],\n        email=\"email\",\n        nickname=\"nickname\",\n        bio=\"bio\",\n        profile_image_url=\"profileImageUrl\",\n        settings={\"settings\": {\"key\": \"value\"}},\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/named-mixed/{id}",
                "method": "PATCH",
                "identifier_override": "endpoint_service.namedPatchWithMixed"
            },
            "snippet": {
                "sync_client": "from seed import SeedContentTypes\n\nclient = SeedContentTypes(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.named_patch_with_mixed(\n    id=\"id\",\n    app_id=\"appId\",\n    instructions=\"instructions\",\n    active=True,\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedContentTypes\n\nclient = AsyncSeedContentTypes(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.named_patch_with_mixed(\n        id=\"id\",\n        app_id=\"appId\",\n        instructions=\"instructions\",\n        active=True,\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/optional-merge-patch-test",
                "method": "PATCH",
                "identifier_override": "endpoint_service.optionalMergePatchTest"
            },
            "snippet": {
                "sync_client": "from seed import SeedContentTypes\n\nclient = SeedContentTypes(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.optional_merge_patch_test(\n    required_field=\"requiredField\",\n    optional_string=\"optionalString\",\n    optional_integer=1,\n    optional_boolean=True,\n    nullable_string=\"nullableString\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedContentTypes\n\nclient = AsyncSeedContentTypes(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.optional_merge_patch_test(\n        required_field=\"requiredField\",\n        optional_string=\"optionalString\",\n        optional_integer=1,\n        optional_boolean=True,\n        nullable_string=\"nullableString\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/regular/{id}",
                "method": "PATCH",
                "identifier_override": "endpoint_service.regularPatch"
            },
            "snippet": {
                "sync_client": "from seed import SeedContentTypes\n\nclient = SeedContentTypes(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.regular_patch(\n    id=\"id\",\n    field_1=\"field1\",\n    field_2=1,\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedContentTypes\n\nclient = AsyncSeedContentTypes(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.regular_patch(\n        id=\"id\",\n        field_1=\"field1\",\n        field_2=1,\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        }
    ]
}