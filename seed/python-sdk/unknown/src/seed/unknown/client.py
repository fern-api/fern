# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from .raw_client import AsyncRawUnknownClient, RawUnknownClient

# this is used as the default value for optional parameters
OMIT = typing.cast(typing.Any, ...)


class UnknownClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawUnknownClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawUnknownClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawUnknownClient
        """
        return self._raw_client

    def post(
        self, *, request: typing.Optional[typing.Any] = None, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.List[typing.Optional[typing.Any]]:
        """
        Parameters
        ----------
        request : typing.Optional[typing.Any]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.List[typing.Optional[typing.Any]]

        Examples
        --------
        from seed import SeedUnknownAsAny
        client = SeedUnknownAsAny(base_url="https://yourhost.com/path/to/api", )
        client.unknown.post(request={'key': 'value'}
        , )
        """
        response = self._raw_client.post(request=request, request_options=request_options)
        return response.data

    def post_object(
        self, *, unknown: typing.Optional[typing.Any] = OMIT, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.List[typing.Optional[typing.Any]]:
        """
        Parameters
        ----------
        unknown : typing.Optional[typing.Any]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.List[typing.Optional[typing.Any]]

        Examples
        --------
        from seed import SeedUnknownAsAny
        client = SeedUnknownAsAny(base_url="https://yourhost.com/path/to/api", )
        client.unknown.post_object(unknown={'key': 'value'}
        , )
        """
        response = self._raw_client.post_object(unknown=unknown, request_options=request_options)
        return response.data


class AsyncUnknownClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawUnknownClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawUnknownClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawUnknownClient
        """
        return self._raw_client

    async def post(
        self, *, request: typing.Optional[typing.Any] = None, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.List[typing.Optional[typing.Any]]:
        """
        Parameters
        ----------
        request : typing.Optional[typing.Any]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.List[typing.Optional[typing.Any]]

        Examples
        --------
        from seed import AsyncSeedUnknownAsAny
        import asyncio
        client = AsyncSeedUnknownAsAny(base_url="https://yourhost.com/path/to/api", )
        async def main() -> None:
            await client.unknown.post(request={'key': 'value'}
            , )
        asyncio.run(main())
        """
        response = await self._raw_client.post(request=request, request_options=request_options)
        return response.data

    async def post_object(
        self, *, unknown: typing.Optional[typing.Any] = OMIT, request_options: typing.Optional[RequestOptions] = None
    ) -> typing.List[typing.Optional[typing.Any]]:
        """
        Parameters
        ----------
        unknown : typing.Optional[typing.Any]

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        typing.List[typing.Optional[typing.Any]]

        Examples
        --------
        from seed import AsyncSeedUnknownAsAny
        import asyncio
        client = AsyncSeedUnknownAsAny(base_url="https://yourhost.com/path/to/api", )
        async def main() -> None:
            await client.unknown.post_object(unknown={'key': 'value'}
            , )
        asyncio.run(main())
        """
        response = await self._raw_client.post_object(unknown=unknown, request_options=request_options)
        return response.data
