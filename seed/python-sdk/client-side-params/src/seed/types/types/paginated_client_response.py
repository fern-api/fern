# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .client import Client


class PaginatedClientResponse(UniversalBaseModel):
    """
    Paginated response for clients listing
    """

    start: int = pydantic.Field()
    """
    Starting index (zero-based)
    """

    limit: int = pydantic.Field()
    """
    Number of items requested
    """

    length: int = pydantic.Field()
    """
    Number of items returned
    """

    total: typing.Optional[int] = pydantic.Field(default=None)
    """
    Total number of items (when include_totals=true)
    """

    clients: typing.List[Client] = pydantic.Field()
    """
    List of clients
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
