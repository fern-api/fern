# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from .identity import Identity


class User(UniversalBaseModel):
    """
    User object similar to Auth0 users
    """

    user_id: str
    email: str
    email_verified: bool
    username: typing.Optional[str] = None
    phone_number: typing.Optional[str] = None
    phone_verified: typing.Optional[bool] = None
    created_at: dt.datetime
    updated_at: dt.datetime
    identities: typing.Optional[typing.List[Identity]] = None
    app_metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    user_metadata: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None
    picture: typing.Optional[str] = None
    name: typing.Optional[str] = None
    nickname: typing.Optional[str] = None
    multifactor: typing.Optional[typing.List[str]] = None
    last_ip: typing.Optional[str] = None
    last_login: typing.Optional[dt.datetime] = None
    logins_count: typing.Optional[int] = None
    blocked: typing.Optional[bool] = None
    given_name: typing.Optional[str] = None
    family_name: typing.Optional[str] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
