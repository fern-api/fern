{
    "types": {},
    "endpoints": [
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/resources",
                "method": "GET",
                "identifier_override": "endpoint_service.listResources"
            },
            "snippet": {
                "sync_client": "from seed import SeedClientSideParams\n\nclient = SeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.list_resources(\n    page=1,\n    per_page=1,\n    sort=\"created_at\",\n    order=\"desc\",\n    include_totals=True,\n    fields=\"fields\",\n    search=\"search\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedClientSideParams\n\nclient = AsyncSeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.list_resources(\n        page=1,\n        per_page=1,\n        sort=\"created_at\",\n        order=\"desc\",\n        include_totals=True,\n        fields=\"fields\",\n        search=\"search\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/resources/{resourceId}",
                "method": "GET",
                "identifier_override": "endpoint_service.getResource"
            },
            "snippet": {
                "sync_client": "from seed import SeedClientSideParams\n\nclient = SeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.get_resource(\n    resource_id=\"resourceId\",\n    include_metadata=True,\n    format=\"json\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedClientSideParams\n\nclient = AsyncSeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.get_resource(\n        resource_id=\"resourceId\",\n        include_metadata=True,\n        format=\"json\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/resources/search",
                "method": "POST",
                "identifier_override": "endpoint_service.searchResources"
            },
            "snippet": {
                "sync_client": "from seed import SeedClientSideParams\n\nclient = SeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.search_resources(\n    limit=1,\n    offset=1,\n    query=\"query\",\n    filters={\"filters\": {\"key\": \"value\"}},\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedClientSideParams\n\nclient = AsyncSeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.search_resources(\n        limit=1,\n        offset=1,\n        query=\"query\",\n        filters={\"filters\": {\"key\": \"value\"}},\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users",
                "method": "GET",
                "identifier_override": "endpoint_service.listUsers"
            },
            "snippet": {
                "sync_client": "from seed import SeedClientSideParams\n\nclient = SeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.list_users(\n    page=1,\n    per_page=1,\n    include_totals=True,\n    sort=\"sort\",\n    connection=\"connection\",\n    q=\"q\",\n    search_engine=\"search_engine\",\n    fields=\"fields\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedClientSideParams\n\nclient = AsyncSeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.list_users(\n        page=1,\n        per_page=1,\n        include_totals=True,\n        sort=\"sort\",\n        connection=\"connection\",\n        q=\"q\",\n        search_engine=\"search_engine\",\n        fields=\"fields\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users/{userId}",
                "method": "GET",
                "identifier_override": "endpoint_service.getUserById"
            },
            "snippet": {
                "sync_client": "from seed import SeedClientSideParams\n\nclient = SeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.get_user_by_id(\n    user_id=\"userId\",\n    fields=\"fields\",\n    include_fields=True,\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedClientSideParams\n\nclient = AsyncSeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.get_user_by_id(\n        user_id=\"userId\",\n        fields=\"fields\",\n        include_fields=True,\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users",
                "method": "POST",
                "identifier_override": "endpoint_service.createUser"
            },
            "snippet": {
                "sync_client": "from seed import SeedClientSideParams\n\nclient = SeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.create_user(\n    email=\"email\",\n    email_verified=True,\n    username=\"username\",\n    password=\"password\",\n    phone_number=\"phone_number\",\n    phone_verified=True,\n    user_metadata={\"user_metadata\": {\"key\": \"value\"}},\n    app_metadata={\"app_metadata\": {\"key\": \"value\"}},\n    connection=\"connection\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedClientSideParams\n\nclient = AsyncSeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.create_user(\n        email=\"email\",\n        email_verified=True,\n        username=\"username\",\n        password=\"password\",\n        phone_number=\"phone_number\",\n        phone_verified=True,\n        user_metadata={\"user_metadata\": {\"key\": \"value\"}},\n        app_metadata={\"app_metadata\": {\"key\": \"value\"}},\n        connection=\"connection\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users/{userId}",
                "method": "PATCH",
                "identifier_override": "endpoint_service.updateUser"
            },
            "snippet": {
                "sync_client": "from seed import SeedClientSideParams\n\nclient = SeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.update_user(\n    user_id=\"userId\",\n    email=\"email\",\n    email_verified=True,\n    username=\"username\",\n    phone_number=\"phone_number\",\n    phone_verified=True,\n    user_metadata={\"user_metadata\": {\"key\": \"value\"}},\n    app_metadata={\"app_metadata\": {\"key\": \"value\"}},\n    password=\"password\",\n    blocked=True,\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedClientSideParams\n\nclient = AsyncSeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.update_user(\n        user_id=\"userId\",\n        email=\"email\",\n        email_verified=True,\n        username=\"username\",\n        phone_number=\"phone_number\",\n        phone_verified=True,\n        user_metadata={\"user_metadata\": {\"key\": \"value\"}},\n        app_metadata={\"app_metadata\": {\"key\": \"value\"}},\n        password=\"password\",\n        blocked=True,\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/users/{userId}",
                "method": "DELETE",
                "identifier_override": "endpoint_service.deleteUser"
            },
            "snippet": {
                "sync_client": "from seed import SeedClientSideParams\n\nclient = SeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.delete_user(\n    user_id=\"userId\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedClientSideParams\n\nclient = AsyncSeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.delete_user(\n        user_id=\"userId\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/connections",
                "method": "GET",
                "identifier_override": "endpoint_service.listConnections"
            },
            "snippet": {
                "sync_client": "from seed import SeedClientSideParams\n\nclient = SeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.list_connections(\n    strategy=\"strategy\",\n    name=\"name\",\n    fields=\"fields\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedClientSideParams\n\nclient = AsyncSeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.list_connections(\n        strategy=\"strategy\",\n        name=\"name\",\n        fields=\"fields\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/connections/{connectionId}",
                "method": "GET",
                "identifier_override": "endpoint_service.getConnection"
            },
            "snippet": {
                "sync_client": "from seed import SeedClientSideParams\n\nclient = SeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.get_connection(\n    connection_id=\"connectionId\",\n    fields=\"fields\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedClientSideParams\n\nclient = AsyncSeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.get_connection(\n        connection_id=\"connectionId\",\n        fields=\"fields\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/clients",
                "method": "GET",
                "identifier_override": "endpoint_service.listClients"
            },
            "snippet": {
                "sync_client": "from seed import SeedClientSideParams\n\nclient = SeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.list_clients(\n    fields=\"fields\",\n    include_fields=True,\n    page=1,\n    per_page=1,\n    include_totals=True,\n    is_global=True,\n    is_first_party=True,\n    app_type=[\"app_type\", \"app_type\"],\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedClientSideParams\n\nclient = AsyncSeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.list_clients(\n        fields=\"fields\",\n        include_fields=True,\n        page=1,\n        per_page=1,\n        include_totals=True,\n        is_global=True,\n        is_first_party=True,\n        app_type=[\"app_type\", \"app_type\"],\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/api/clients/{clientId}",
                "method": "GET",
                "identifier_override": "endpoint_service.getClient"
            },
            "snippet": {
                "sync_client": "from seed import SeedClientSideParams\n\nclient = SeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.service.get_client(\n    client_id=\"clientId\",\n    fields=\"fields\",\n    include_fields=True,\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedClientSideParams\n\nclient = AsyncSeedClientSideParams(\n    token=\"YOUR_TOKEN\",\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.service.get_client(\n        client_id=\"clientId\",\n        fields=\"fields\",\n        include_fields=True,\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        }
    ]
}