# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from . import inline_users
    from .inline_users import (
        ListUsersExtendedOptionalListResponse,
        ListUsersExtendedResponse,
        ListUsersMixedTypePaginationResponse,
        ListUsersPaginationResponse,
        NextPage,
        Order,
        Page,
        User,
        UserListContainer,
        UserOptionalListContainer,
        UserOptionalListPage,
        UserPage,
        UsernameContainer,
        Users,
        WithCursor,
        WithPage,
    )
_dynamic_imports: typing.Dict[str, str] = {
    "ListUsersExtendedOptionalListResponse": ".inline_users",
    "ListUsersExtendedResponse": ".inline_users",
    "ListUsersMixedTypePaginationResponse": ".inline_users",
    "ListUsersPaginationResponse": ".inline_users",
    "NextPage": ".inline_users",
    "Order": ".inline_users",
    "Page": ".inline_users",
    "User": ".inline_users",
    "UserListContainer": ".inline_users",
    "UserOptionalListContainer": ".inline_users",
    "UserOptionalListPage": ".inline_users",
    "UserPage": ".inline_users",
    "UsernameContainer": ".inline_users",
    "Users": ".inline_users",
    "WithCursor": ".inline_users",
    "WithPage": ".inline_users",
    "inline_users": ".inline_users",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        if module_name == f".{attr_name}":
            return module
        else:
            return getattr(module, attr_name)
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "ListUsersExtendedOptionalListResponse",
    "ListUsersExtendedResponse",
    "ListUsersMixedTypePaginationResponse",
    "ListUsersPaginationResponse",
    "NextPage",
    "Order",
    "Page",
    "User",
    "UserListContainer",
    "UserOptionalListContainer",
    "UserOptionalListPage",
    "UserPage",
    "UsernameContainer",
    "Users",
    "WithCursor",
    "WithPage",
    "inline_users",
]
