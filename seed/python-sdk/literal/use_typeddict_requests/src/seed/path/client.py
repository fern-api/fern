# This file was auto-generated by Fern from our API Definition.

import typing

from ..core.client_wrapper import AsyncClientWrapper, SyncClientWrapper
from ..core.request_options import RequestOptions
from ..types.send_response import SendResponse
from .raw_client import AsyncRawPathClient, RawPathClient


class PathClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawPathClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawPathClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawPathClient
        """
        return self._raw_client

    def send(self, *, request_options: typing.Optional[RequestOptions] = None) -> SendResponse:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        SendResponse

        Examples
        --------
        from seed import SeedLiteral
        client = SeedLiteral(base_url="https://yourhost.com/path/to/api", )
        client.path.send()
        """
        response = self._raw_client.send(request_options=request_options)
        return response.data


class AsyncPathClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawPathClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawPathClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawPathClient
        """
        return self._raw_client

    async def send(self, *, request_options: typing.Optional[RequestOptions] = None) -> SendResponse:
        """
        Parameters
        ----------
        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        SendResponse

        Examples
        --------
        from seed import AsyncSeedLiteral
        import asyncio
        client = AsyncSeedLiteral(base_url="https://yourhost.com/path/to/api", )
        async def main() -> None:
            await client.path.send()
        asyncio.run(main())
        """
        response = await self._raw_client.send(request_options=request_options)
        return response.data
