# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
from .user_id import UserId
import typing
from .metadata import Metadata
from .email import Email
import typing_extensions
from .weird_number import WeirdNumber
from ...core.serialization import FieldMetadata
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class User(UniversalBaseModel):
    name: str
    id: UserId
    tags: typing.Optional[typing.List[str]] = None
    metadata: typing.Optional[Metadata] = None
    email: Email
    favorite_number: typing_extensions.Annotated[WeirdNumber, FieldMetadata(alias="favorite-number")]
    numbers: typing.Optional[typing.List[int]] = None
    strings: typing.Optional[typing.Dict[str, typing.Optional[typing.Any]]] = None

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
