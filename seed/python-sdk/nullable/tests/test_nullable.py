# This file was auto-generated by Fern from our API Definition.

from seed import SeedNullable
from seed import AsyncSeedNullable
import typing
from .utilities import validate_response
from seed.nullable import Metadata
import datetime


async def test_get_users(client: SeedNullable, async_client: AsyncSeedNullable) -> None:
    expected_response: typing.Any = [
        {
            "name": "name",
            "tags": ["tags", "tags"],
            "metadata": {
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "avatar": "avatar",
                "activated": True,
            },
        },
        {
            "name": "name",
            "tags": ["tags", "tags"],
            "metadata": {
                "createdAt": "2024-01-15T09:30:00Z",
                "updatedAt": "2024-01-15T09:30:00Z",
                "avatar": "avatar",
                "activated": True,
            },
        },
    ]
    expected_types: typing.Tuple[typing.Any, typing.Any] = (
        "list",
        {
            0: {
                "name": None,
                "tags": ("list", {0: None, 1: None}),
                "metadata": {"createdAt": "datetime", "updatedAt": "datetime", "avatar": None, "activated": None},
            },
            1: {
                "name": None,
                "tags": ("list", {0: None, 1: None}),
                "metadata": {"createdAt": "datetime", "updatedAt": "datetime", "avatar": None, "activated": None},
            },
        },
    )
    response = client.nullable.get_users(usernames="usernames", avatar="avatar", activated=True)
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.nullable.get_users(usernames="usernames", avatar="avatar", activated=True)
    validate_response(async_response, expected_response, expected_types)


async def test_create_user(client: SeedNullable, async_client: AsyncSeedNullable) -> None:
    expected_response: typing.Any = {
        "name": "name",
        "tags": ["tags", "tags"],
        "metadata": {
            "createdAt": "2024-01-15T09:30:00Z",
            "updatedAt": "2024-01-15T09:30:00Z",
            "avatar": "avatar",
            "activated": True,
        },
    }
    expected_types: typing.Any = {
        "name": None,
        "tags": ("list", {0: None, 1: None}),
        "metadata": {"createdAt": "datetime", "updatedAt": "datetime", "avatar": None, "activated": None},
    }
    response = client.nullable.create_user(
        username="username",
        tags=["tags", "tags"],
        metadata=Metadata(
            created_at=datetime.datetime.fromisoformat("2024-01-15 09:30:00+00:00"),
            updated_at=datetime.datetime.fromisoformat("2024-01-15 09:30:00+00:00"),
            avatar="avatar",
            activated=True,
        ),
        avatar="avatar",
    )
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.nullable.create_user(
        username="username",
        tags=["tags", "tags"],
        metadata=Metadata(
            created_at=datetime.datetime.fromisoformat("2024-01-15 09:30:00+00:00"),
            updated_at=datetime.datetime.fromisoformat("2024-01-15 09:30:00+00:00"),
            avatar="avatar",
            activated=True,
        ),
        avatar="avatar",
    )
    validate_response(async_response, expected_response, expected_types)


async def test_delete_user(client: SeedNullable, async_client: AsyncSeedNullable) -> None:
    expected_response: typing.Any = True
    expected_types: typing.Any = None
    response = client.nullable.delete_user(username="xy")
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.nullable.delete_user(username="xy")
    validate_response(async_response, expected_response, expected_types)
