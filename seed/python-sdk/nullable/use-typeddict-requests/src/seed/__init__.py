# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from . import nullable
    from .client import AsyncSeedNullable, SeedNullable
    from .nullable import (
        Email,
        Metadata,
        MetadataParams,
        Status,
        StatusParams,
        Status_Active,
        Status_ActiveParams,
        Status_Archived,
        Status_ArchivedParams,
        Status_SoftDeleted,
        Status_SoftDeletedParams,
        User,
        UserId,
        UserParams,
        WeirdNumber,
        WeirdNumberParams,
    )
    from .version import __version__
_dynamic_imports: typing.Dict[str, str] = {
    "AsyncSeedNullable": ".client",
    "Email": ".nullable",
    "Metadata": ".nullable",
    "MetadataParams": ".nullable",
    "SeedNullable": ".client",
    "Status": ".nullable",
    "StatusParams": ".nullable",
    "Status_Active": ".nullable",
    "Status_ActiveParams": ".nullable",
    "Status_Archived": ".nullable",
    "Status_ArchivedParams": ".nullable",
    "Status_SoftDeleted": ".nullable",
    "Status_SoftDeletedParams": ".nullable",
    "User": ".nullable",
    "UserId": ".nullable",
    "UserParams": ".nullable",
    "WeirdNumber": ".nullable",
    "WeirdNumberParams": ".nullable",
    "__version__": ".version",
    "nullable": ".",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "AsyncSeedNullable",
    "Email",
    "Metadata",
    "MetadataParams",
    "SeedNullable",
    "Status",
    "StatusParams",
    "Status_Active",
    "Status_ActiveParams",
    "Status_Archived",
    "Status_ArchivedParams",
    "Status_SoftDeleted",
    "Status_SoftDeletedParams",
    "User",
    "UserId",
    "UserParams",
    "WeirdNumber",
    "WeirdNumberParams",
    "__version__",
    "nullable",
]
