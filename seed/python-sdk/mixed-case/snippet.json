{
    "types": {
        "type_service:Organization": "from seed.service import Organization\nOrganization(name='orgName', )",
        "type_service:User": "from seed.service import User\nUser(user_name='username', metadata_tags=['tag1', 'tag2'], extra_properties={'foo': 'bar', 'baz': 'qux'}, )",
        "type_service:NestedUser": "from seed.service import NestedUser\nfrom seed.service import User\nNestedUser(name='username', nested_user=User(user_name='nestedUsername', metadata_tags=['tag1', 'tag2'], extra_properties={'foo': 'bar', 'baz': 'qux'}, ), )",
        "type_service:Resource": "from seed.service import Resource_User\nResource_User(user_name='username', metadata_tags=['tag1', 'tag2'], extra_properties={'foo': 'bar', 'baz': 'qux'}, )"
    },
    "endpoints": [
        {
            "example_identifier": "default",
            "id": {
                "path": "/resource/{ResourceID}",
                "method": "GET",
                "identifier_override": "endpoint_service.getResource"
            },
            "snippet": {
                "sync_client": "from seed import SeedMixedCase\nclient = SeedMixedCase(base_url=\"https://yourhost.com/path/to/api\", )\nclient.service.get_resource(resource_id='rsc-xyz', )\n",
                "async_client": "from seed import AsyncSeedMixedCase\nimport asyncio\nclient = AsyncSeedMixedCase(base_url=\"https://yourhost.com/path/to/api\", )\nasync def main() -> None:\n    await client.service.get_resource(resource_id='rsc-xyz', )\nasyncio.run(main())",
                "type": "python"
            }
        },
        {
            "example_identifier": "One",
            "id": {
                "path": "/resource",
                "method": "GET",
                "identifier_override": "endpoint_service.listResources"
            },
            "snippet": {
                "sync_client": "from seed import SeedMixedCase\nimport datetime\nclient = SeedMixedCase(base_url=\"https://yourhost.com/path/to/api\", )\nclient.service.list_resources(page_limit=10, before_date=datetime.date.fromisoformat(\"2023-01-01\", ), )\n",
                "async_client": "from seed import AsyncSeedMixedCase\nimport datetime\nimport asyncio\nclient = AsyncSeedMixedCase(base_url=\"https://yourhost.com/path/to/api\", )\nasync def main() -> None:\n    await client.service.list_resources(page_limit=10, before_date=datetime.date.fromisoformat(\"2023-01-01\", ), )\nasyncio.run(main())",
                "type": "python"
            }
        }
    ]
}