# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
import typing
import datetime as dt
from ...core.serialization import FieldMetadata
from ...commons.types.language import Language
from .submission_type_state import SubmissionTypeState
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class GetSubmissionStateResponse(UniversalBaseModel):
    time_submitted: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="timeSubmitted")] = (
        None
    )
    submission: str
    language: Language
    submission_type_state: typing_extensions.Annotated[SubmissionTypeState, FieldMetadata(alias="submissionTypeState")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
