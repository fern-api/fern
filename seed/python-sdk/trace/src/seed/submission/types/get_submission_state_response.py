# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import datetime as dt
import typing

import pydantic
import typing_extensions
from ...commons.types.language import Language
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from ...core.serialization import FieldMetadata
from .submission_type_state import SubmissionTypeState


class GetSubmissionStateResponse(UniversalBaseModel):
    time_submitted: typing_extensions.Annotated[typing.Optional[dt.datetime], FieldMetadata(alias="timeSubmitted")] = (
        None
    )
    submission: str
    language: Language
    submission_type_state: typing_extensions.Annotated[SubmissionTypeState, FieldMetadata(alias="submissionTypeState")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from ...commons.types.key_value_pair import KeyValuePair  # noqa: E402, F401, I001
from ...commons.types.map_value import MapValue  # noqa: E402, F401, I001

update_forward_refs(GetSubmissionStateResponse)
