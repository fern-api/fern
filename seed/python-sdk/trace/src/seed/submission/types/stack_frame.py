# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from ...core.serialization import FieldMetadata
from .scope import Scope


class StackFrame(UniversalBaseModel):
    method_name: typing_extensions.Annotated[str, FieldMetadata(alias="methodName")]
    line_number: typing_extensions.Annotated[int, FieldMetadata(alias="lineNumber")]
    scopes: typing.List[Scope]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from ...commons.types.debug_key_value_pairs import DebugKeyValuePairs  # noqa: E402, F401, I001
from ...commons.types.debug_map_value import DebugMapValue  # noqa: E402, F401, I001

update_forward_refs(StackFrame)
