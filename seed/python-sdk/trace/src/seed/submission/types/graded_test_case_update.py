# This file was auto-generated by Fern from our API Definition.

from ...core.pydantic_utilities import UniversalBaseModel
import typing_extensions
from ...v_2.problem.types.test_case_id import TestCaseId
from ...core.serialization import FieldMetadata
from .test_case_grade import TestCaseGrade
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class GradedTestCaseUpdate(UniversalBaseModel):
    test_case_id: typing_extensions.Annotated[TestCaseId, FieldMetadata(alias="testCaseId")]
    grade: TestCaseGrade

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
