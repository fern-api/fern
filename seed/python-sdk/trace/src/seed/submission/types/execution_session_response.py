# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ...commons.types.language import Language
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ...core.serialization import FieldMetadata
from .execution_session_status import ExecutionSessionStatus


class ExecutionSessionResponse(UniversalBaseModel):
    session_id: typing_extensions.Annotated[str, FieldMetadata(alias="sessionId")]
    execution_session_url: typing_extensions.Annotated[
        typing.Optional[str], FieldMetadata(alias="executionSessionUrl")
    ] = None
    language: Language
    status: ExecutionSessionStatus

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
