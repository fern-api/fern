# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ...core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from ...core.serialization import FieldMetadata
from .exception_v_2 import ExceptionV2


class TestCaseGrade_Hidden(UniversalBaseModel):
    type: typing.Literal["hidden"] = "hidden"
    passed: bool

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class TestCaseGrade_NonHidden(UniversalBaseModel):
    type: typing.Literal["nonHidden"] = "nonHidden"
    passed: bool
    actual_result: typing_extensions.Annotated[
        typing.Optional["VariableValue"], FieldMetadata(alias="actualResult")
    ] = None
    exception: typing.Optional[ExceptionV2] = None
    stdout: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from ...commons.types.key_value_pair import KeyValuePair  # noqa: E402, F401, I001
from ...commons.types.map_value import MapValue  # noqa: E402, F401, I001
from ...commons.types.variable_value import VariableValue  # noqa: E402, F401, I001

TestCaseGrade = typing.Union[TestCaseGrade_Hidden, TestCaseGrade_NonHidden]
update_forward_refs(TestCaseGrade_NonHidden)
