# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations

import typing

import pydantic
import typing_extensions
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel, update_forward_refs
from ....core.serialization import FieldMetadata
from .function_signature import FunctionSignature


class GetFunctionSignatureRequest(UniversalBaseModel):
    function_signature: typing_extensions.Annotated[FunctionSignature, FieldMetadata(alias="functionSignature")]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


from ....commons.types.list_type import ListType  # noqa: E402, F401, I001
from ....commons.types.map_type import MapType  # noqa: E402, F401, I001

update_forward_refs(GetFunctionSignatureRequest)
