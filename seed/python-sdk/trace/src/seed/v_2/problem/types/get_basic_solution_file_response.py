# This file was auto-generated by Fern from our API Definition.

import typing

import pydantic
import typing_extensions
from ....commons.types.language import Language
from ....core.pydantic_utilities import IS_PYDANTIC_V2, UniversalBaseModel
from ....core.serialization import FieldMetadata
from .file_info_v_2 import FileInfoV2


class GetBasicSolutionFileResponse(UniversalBaseModel):
    solution_file_by_language: typing_extensions.Annotated[
        typing.Dict[Language, FileInfoV2], FieldMetadata(alias="solutionFileByLanguage")
    ]

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
