# This file was auto-generated by Fern from our API Definition.

from seed import SeedTrace
from seed import AsyncSeedTrace
import typing
from ...utilities import validate_response


async def test_get_lightweight_problems(client: SeedTrace, async_client: AsyncSeedTrace) -> None:
    expected_response: typing.Any = [
        {
            "problemId": "problemId",
            "problemName": "problemName",
            "problemVersion": 1,
            "variableTypes": [{"type": "integerType"}],
        },
        {
            "problemId": "problemId",
            "problemName": "problemName",
            "problemVersion": 1,
            "variableTypes": [{"type": "integerType"}],
        },
    ]
    expected_types: typing.Tuple[typing.Any, typing.Any] = (
        "list",
        {
            0: {
                "problemId": None,
                "problemName": None,
                "problemVersion": "integer",
                "variableTypes": ("set", {0: "no_validate"}),
            },
            1: {
                "problemId": None,
                "problemName": None,
                "problemVersion": "integer",
                "variableTypes": ("set", {0: "no_validate"}),
            },
        },
    )
    response = client.v_2.v_3.problem.get_lightweight_problems()
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.v_2.v_3.problem.get_lightweight_problems()
    validate_response(async_response, expected_response, expected_types)


async def test_get_problems(client: SeedTrace, async_client: AsyncSeedTrace) -> None:
    expected_response: typing.Any = [
        {
            "problemId": "problemId",
            "problemDescription": {
                "boards": [
                    {"type": "html", "value": "boards"},
                    {"type": "html", "value": "boards"},
                ]
            },
            "problemName": "problemName",
            "problemVersion": 1,
            "supportedLanguages": ["JAVA"],
            "customFiles": {
                "type": "basic",
                "methodName": "methodName",
                "signature": {
                    "parameters": [
                        {
                            "parameterId": "parameterId",
                            "name": "name",
                            "variableType": {"type": "integerType"},
                        },
                        {
                            "parameterId": "parameterId",
                            "name": "name",
                            "variableType": {"type": "integerType"},
                        },
                    ],
                    "returnType": {"type": "integerType"},
                },
                "additionalFiles": {
                    "JAVA": {
                        "files": [
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                        ]
                    }
                },
                "basicTestCaseTemplate": {
                    "templateId": "templateId",
                    "name": "name",
                    "description": {
                        "boards": [
                            {"type": "html", "value": "boards"},
                            {"type": "html", "value": "boards"},
                        ]
                    },
                    "expectedValueParameterId": "expectedValueParameterId",
                },
            },
            "generatedFiles": {
                "generatedTestCaseFiles": {
                    "JAVA": {
                        "files": [
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                        ]
                    }
                },
                "generatedTemplateFiles": {
                    "JAVA": {
                        "files": [
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                        ]
                    }
                },
                "other": {
                    "JAVA": {
                        "files": [
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                        ]
                    }
                },
            },
            "customTestCaseTemplates": [
                {
                    "templateId": "templateId",
                    "name": "name",
                    "implementation": {
                        "description": {
                            "boards": [
                                {"type": "html", "value": "boards"},
                                {"type": "html", "value": "boards"},
                            ]
                        },
                        "function": {
                            "type": "withActualResult",
                            "getActualResult": {
                                "signature": {
                                    "parameters": [
                                        {
                                            "parameterId": "parameterId",
                                            "name": "name",
                                            "variableType": {"type": "integerType"},
                                        },
                                        {
                                            "parameterId": "parameterId",
                                            "name": "name",
                                            "variableType": {"type": "integerType"},
                                        },
                                    ],
                                    "returnType": {"type": "integerType"},
                                },
                                "code": {"codeByLanguage": {"JAVA": {"impl": "impl"}}},
                            },
                            "assertCorrectnessCheck": {
                                "type": "deepEquality",
                                "expectedValueParameterId": "expectedValueParameterId",
                            },
                        },
                    },
                },
                {
                    "templateId": "templateId",
                    "name": "name",
                    "implementation": {
                        "description": {
                            "boards": [
                                {"type": "html", "value": "boards"},
                                {"type": "html", "value": "boards"},
                            ]
                        },
                        "function": {
                            "type": "withActualResult",
                            "getActualResult": {
                                "signature": {
                                    "parameters": [
                                        {
                                            "parameterId": "parameterId",
                                            "name": "name",
                                            "variableType": {"type": "integerType"},
                                        },
                                        {
                                            "parameterId": "parameterId",
                                            "name": "name",
                                            "variableType": {"type": "integerType"},
                                        },
                                    ],
                                    "returnType": {"type": "integerType"},
                                },
                                "code": {"codeByLanguage": {"JAVA": {"impl": "impl"}}},
                            },
                            "assertCorrectnessCheck": {
                                "type": "deepEquality",
                                "expectedValueParameterId": "expectedValueParameterId",
                            },
                        },
                    },
                },
            ],
            "testcases": [
                {
                    "metadata": {"id": "id", "name": "name", "hidden": True},
                    "implementation": {"type": "templateId", "value": "implementation"},
                    "arguments": {"arguments": {"type": "integerValue", "value": 1}},
                    "expects": {"expectedStdout": "expectedStdout"},
                },
                {
                    "metadata": {"id": "id", "name": "name", "hidden": True},
                    "implementation": {"type": "templateId", "value": "implementation"},
                    "arguments": {"arguments": {"type": "integerValue", "value": 1}},
                    "expects": {"expectedStdout": "expectedStdout"},
                },
            ],
            "isPublic": True,
        },
        {
            "problemId": "problemId",
            "problemDescription": {
                "boards": [
                    {"type": "html", "value": "boards"},
                    {"type": "html", "value": "boards"},
                ]
            },
            "problemName": "problemName",
            "problemVersion": 1,
            "supportedLanguages": ["JAVA"],
            "customFiles": {
                "type": "basic",
                "methodName": "methodName",
                "signature": {
                    "parameters": [
                        {
                            "parameterId": "parameterId",
                            "name": "name",
                            "variableType": {"type": "integerType"},
                        },
                        {
                            "parameterId": "parameterId",
                            "name": "name",
                            "variableType": {"type": "integerType"},
                        },
                    ],
                    "returnType": {"type": "integerType"},
                },
                "additionalFiles": {
                    "JAVA": {
                        "files": [
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                        ]
                    }
                },
                "basicTestCaseTemplate": {
                    "templateId": "templateId",
                    "name": "name",
                    "description": {
                        "boards": [
                            {"type": "html", "value": "boards"},
                            {"type": "html", "value": "boards"},
                        ]
                    },
                    "expectedValueParameterId": "expectedValueParameterId",
                },
            },
            "generatedFiles": {
                "generatedTestCaseFiles": {
                    "JAVA": {
                        "files": [
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                        ]
                    }
                },
                "generatedTemplateFiles": {
                    "JAVA": {
                        "files": [
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                        ]
                    }
                },
                "other": {
                    "JAVA": {
                        "files": [
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                            {
                                "filename": "filename",
                                "directory": "directory",
                                "contents": "contents",
                                "editable": True,
                            },
                        ]
                    }
                },
            },
            "customTestCaseTemplates": [
                {
                    "templateId": "templateId",
                    "name": "name",
                    "implementation": {
                        "description": {
                            "boards": [
                                {"type": "html", "value": "boards"},
                                {"type": "html", "value": "boards"},
                            ]
                        },
                        "function": {
                            "type": "withActualResult",
                            "getActualResult": {
                                "signature": {
                                    "parameters": [
                                        {
                                            "parameterId": "parameterId",
                                            "name": "name",
                                            "variableType": {"type": "integerType"},
                                        },
                                        {
                                            "parameterId": "parameterId",
                                            "name": "name",
                                            "variableType": {"type": "integerType"},
                                        },
                                    ],
                                    "returnType": {"type": "integerType"},
                                },
                                "code": {"codeByLanguage": {"JAVA": {"impl": "impl"}}},
                            },
                            "assertCorrectnessCheck": {
                                "type": "deepEquality",
                                "expectedValueParameterId": "expectedValueParameterId",
                            },
                        },
                    },
                },
                {
                    "templateId": "templateId",
                    "name": "name",
                    "implementation": {
                        "description": {
                            "boards": [
                                {"type": "html", "value": "boards"},
                                {"type": "html", "value": "boards"},
                            ]
                        },
                        "function": {
                            "type": "withActualResult",
                            "getActualResult": {
                                "signature": {
                                    "parameters": [
                                        {
                                            "parameterId": "parameterId",
                                            "name": "name",
                                            "variableType": {"type": "integerType"},
                                        },
                                        {
                                            "parameterId": "parameterId",
                                            "name": "name",
                                            "variableType": {"type": "integerType"},
                                        },
                                    ],
                                    "returnType": {"type": "integerType"},
                                },
                                "code": {"codeByLanguage": {"JAVA": {"impl": "impl"}}},
                            },
                            "assertCorrectnessCheck": {
                                "type": "deepEquality",
                                "expectedValueParameterId": "expectedValueParameterId",
                            },
                        },
                    },
                },
            ],
            "testcases": [
                {
                    "metadata": {"id": "id", "name": "name", "hidden": True},
                    "implementation": {"type": "templateId", "value": "implementation"},
                    "arguments": {"arguments": {"type": "integerValue", "value": 1}},
                    "expects": {"expectedStdout": "expectedStdout"},
                },
                {
                    "metadata": {"id": "id", "name": "name", "hidden": True},
                    "implementation": {"type": "templateId", "value": "implementation"},
                    "arguments": {"arguments": {"type": "integerValue", "value": 1}},
                    "expects": {"expectedStdout": "expectedStdout"},
                },
            ],
            "isPublic": True,
        },
    ]
    expected_types: typing.Tuple[typing.Any, typing.Any] = (
        "list",
        {
            0: {
                "problemId": None,
                "problemDescription": {"boards": ("list", {0: "no_validate", 1: "no_validate"})},
                "problemName": None,
                "problemVersion": "integer",
                "supportedLanguages": ("set", {0: None}),
                "customFiles": "no_validate",
                "generatedFiles": {
                    "generatedTestCaseFiles": (
                        "dict",
                        {
                            0: (
                                None,
                                {
                                    "files": (
                                        "list",
                                        {
                                            0: {
                                                "filename": None,
                                                "directory": None,
                                                "contents": None,
                                                "editable": None,
                                            },
                                            1: {
                                                "filename": None,
                                                "directory": None,
                                                "contents": None,
                                                "editable": None,
                                            },
                                        },
                                    )
                                },
                            )
                        },
                    ),
                    "generatedTemplateFiles": (
                        "dict",
                        {
                            0: (
                                None,
                                {
                                    "files": (
                                        "list",
                                        {
                                            0: {
                                                "filename": None,
                                                "directory": None,
                                                "contents": None,
                                                "editable": None,
                                            },
                                            1: {
                                                "filename": None,
                                                "directory": None,
                                                "contents": None,
                                                "editable": None,
                                            },
                                        },
                                    )
                                },
                            )
                        },
                    ),
                    "other": (
                        "dict",
                        {
                            0: (
                                None,
                                {
                                    "files": (
                                        "list",
                                        {
                                            0: {
                                                "filename": None,
                                                "directory": None,
                                                "contents": None,
                                                "editable": None,
                                            },
                                            1: {
                                                "filename": None,
                                                "directory": None,
                                                "contents": None,
                                                "editable": None,
                                            },
                                        },
                                    )
                                },
                            )
                        },
                    ),
                },
                "customTestCaseTemplates": (
                    "list",
                    {
                        0: {
                            "templateId": None,
                            "name": None,
                            "implementation": {
                                "description": {
                                    "boards": (
                                        "list",
                                        {0: "no_validate", 1: "no_validate"},
                                    )
                                },
                                "function": "no_validate",
                            },
                        },
                        1: {
                            "templateId": None,
                            "name": None,
                            "implementation": {
                                "description": {
                                    "boards": (
                                        "list",
                                        {0: "no_validate", 1: "no_validate"},
                                    )
                                },
                                "function": "no_validate",
                            },
                        },
                    },
                ),
                "testcases": (
                    "list",
                    {
                        0: {
                            "metadata": {"id": None, "name": None, "hidden": None},
                            "implementation": "no_validate",
                            "arguments": ("dict", {0: (None, "no_validate")}),
                            "expects": {"expectedStdout": None},
                        },
                        1: {
                            "metadata": {"id": None, "name": None, "hidden": None},
                            "implementation": "no_validate",
                            "arguments": ("dict", {0: (None, "no_validate")}),
                            "expects": {"expectedStdout": None},
                        },
                    },
                ),
                "isPublic": None,
            },
            1: {
                "problemId": None,
                "problemDescription": {"boards": ("list", {0: "no_validate", 1: "no_validate"})},
                "problemName": None,
                "problemVersion": "integer",
                "supportedLanguages": ("set", {0: None}),
                "customFiles": "no_validate",
                "generatedFiles": {
                    "generatedTestCaseFiles": (
                        "dict",
                        {
                            0: (
                                None,
                                {
                                    "files": (
                                        "list",
                                        {
                                            0: {
                                                "filename": None,
                                                "directory": None,
                                                "contents": None,
                                                "editable": None,
                                            },
                                            1: {
                                                "filename": None,
                                                "directory": None,
                                                "contents": None,
                                                "editable": None,
                                            },
                                        },
                                    )
                                },
                            )
                        },
                    ),
                    "generatedTemplateFiles": (
                        "dict",
                        {
                            0: (
                                None,
                                {
                                    "files": (
                                        "list",
                                        {
                                            0: {
                                                "filename": None,
                                                "directory": None,
                                                "contents": None,
                                                "editable": None,
                                            },
                                            1: {
                                                "filename": None,
                                                "directory": None,
                                                "contents": None,
                                                "editable": None,
                                            },
                                        },
                                    )
                                },
                            )
                        },
                    ),
                    "other": (
                        "dict",
                        {
                            0: (
                                None,
                                {
                                    "files": (
                                        "list",
                                        {
                                            0: {
                                                "filename": None,
                                                "directory": None,
                                                "contents": None,
                                                "editable": None,
                                            },
                                            1: {
                                                "filename": None,
                                                "directory": None,
                                                "contents": None,
                                                "editable": None,
                                            },
                                        },
                                    )
                                },
                            )
                        },
                    ),
                },
                "customTestCaseTemplates": (
                    "list",
                    {
                        0: {
                            "templateId": None,
                            "name": None,
                            "implementation": {
                                "description": {
                                    "boards": (
                                        "list",
                                        {0: "no_validate", 1: "no_validate"},
                                    )
                                },
                                "function": "no_validate",
                            },
                        },
                        1: {
                            "templateId": None,
                            "name": None,
                            "implementation": {
                                "description": {
                                    "boards": (
                                        "list",
                                        {0: "no_validate", 1: "no_validate"},
                                    )
                                },
                                "function": "no_validate",
                            },
                        },
                    },
                ),
                "testcases": (
                    "list",
                    {
                        0: {
                            "metadata": {"id": None, "name": None, "hidden": None},
                            "implementation": "no_validate",
                            "arguments": ("dict", {0: (None, "no_validate")}),
                            "expects": {"expectedStdout": None},
                        },
                        1: {
                            "metadata": {"id": None, "name": None, "hidden": None},
                            "implementation": "no_validate",
                            "arguments": ("dict", {0: (None, "no_validate")}),
                            "expects": {"expectedStdout": None},
                        },
                    },
                ),
                "isPublic": None,
            },
        },
    )
    response = client.v_2.v_3.problem.get_problems()
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.v_2.v_3.problem.get_problems()
    validate_response(async_response, expected_response, expected_types)


async def test_get_latest_problem(client: SeedTrace, async_client: AsyncSeedTrace) -> None:
    expected_response: typing.Any = {
        "problemId": "problemId",
        "problemDescription": {
            "boards": [
                {"type": "html", "value": "boards"},
                {"type": "html", "value": "boards"},
            ]
        },
        "problemName": "problemName",
        "problemVersion": 1,
        "supportedLanguages": ["JAVA"],
        "customFiles": {
            "type": "basic",
            "methodName": "methodName",
            "signature": {
                "parameters": [
                    {
                        "parameterId": "parameterId",
                        "name": "name",
                        "variableType": {"type": "integerType"},
                    },
                    {
                        "parameterId": "parameterId",
                        "name": "name",
                        "variableType": {"type": "integerType"},
                    },
                ],
                "returnType": {"type": "integerType"},
            },
            "additionalFiles": {
                "JAVA": {
                    "files": [
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                    ]
                }
            },
            "basicTestCaseTemplate": {
                "templateId": "templateId",
                "name": "name",
                "description": {
                    "boards": [
                        {"type": "html", "value": "boards"},
                        {"type": "html", "value": "boards"},
                    ]
                },
                "expectedValueParameterId": "expectedValueParameterId",
            },
        },
        "generatedFiles": {
            "generatedTestCaseFiles": {
                "JAVA": {
                    "files": [
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                    ]
                }
            },
            "generatedTemplateFiles": {
                "JAVA": {
                    "files": [
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                    ]
                }
            },
            "other": {
                "JAVA": {
                    "files": [
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                    ]
                }
            },
        },
        "customTestCaseTemplates": [
            {
                "templateId": "templateId",
                "name": "name",
                "implementation": {
                    "description": {
                        "boards": [
                            {"type": "html", "value": "boards"},
                            {"type": "html", "value": "boards"},
                        ]
                    },
                    "function": {
                        "type": "withActualResult",
                        "getActualResult": {
                            "signature": {
                                "parameters": [
                                    {
                                        "parameterId": "parameterId",
                                        "name": "name",
                                        "variableType": {"type": "integerType"},
                                    },
                                    {
                                        "parameterId": "parameterId",
                                        "name": "name",
                                        "variableType": {"type": "integerType"},
                                    },
                                ],
                                "returnType": {"type": "integerType"},
                            },
                            "code": {"codeByLanguage": {"JAVA": {"impl": "impl", "imports": "imports"}}},
                        },
                        "assertCorrectnessCheck": {
                            "type": "deepEquality",
                            "expectedValueParameterId": "expectedValueParameterId",
                        },
                    },
                },
            },
            {
                "templateId": "templateId",
                "name": "name",
                "implementation": {
                    "description": {
                        "boards": [
                            {"type": "html", "value": "boards"},
                            {"type": "html", "value": "boards"},
                        ]
                    },
                    "function": {
                        "type": "withActualResult",
                        "getActualResult": {
                            "signature": {
                                "parameters": [
                                    {
                                        "parameterId": "parameterId",
                                        "name": "name",
                                        "variableType": {"type": "integerType"},
                                    },
                                    {
                                        "parameterId": "parameterId",
                                        "name": "name",
                                        "variableType": {"type": "integerType"},
                                    },
                                ],
                                "returnType": {"type": "integerType"},
                            },
                            "code": {"codeByLanguage": {"JAVA": {"impl": "impl", "imports": "imports"}}},
                        },
                        "assertCorrectnessCheck": {
                            "type": "deepEquality",
                            "expectedValueParameterId": "expectedValueParameterId",
                        },
                    },
                },
            },
        ],
        "testcases": [
            {
                "metadata": {"id": "id", "name": "name", "hidden": True},
                "implementation": {"type": "templateId", "value": "implementation"},
                "arguments": {"arguments": {"type": "integerValue", "value": 1}},
                "expects": {"expectedStdout": "expectedStdout"},
            },
            {
                "metadata": {"id": "id", "name": "name", "hidden": True},
                "implementation": {"type": "templateId", "value": "implementation"},
                "arguments": {"arguments": {"type": "integerValue", "value": 1}},
                "expects": {"expectedStdout": "expectedStdout"},
            },
        ],
        "isPublic": True,
    }
    expected_types: typing.Any = {
        "problemId": None,
        "problemDescription": {"boards": ("list", {0: "no_validate", 1: "no_validate"})},
        "problemName": None,
        "problemVersion": "integer",
        "supportedLanguages": ("set", {0: None}),
        "customFiles": "no_validate",
        "generatedFiles": {
            "generatedTestCaseFiles": (
                "dict",
                {
                    0: (
                        None,
                        {
                            "files": (
                                "list",
                                {
                                    0: {
                                        "filename": None,
                                        "directory": None,
                                        "contents": None,
                                        "editable": None,
                                    },
                                    1: {
                                        "filename": None,
                                        "directory": None,
                                        "contents": None,
                                        "editable": None,
                                    },
                                },
                            )
                        },
                    )
                },
            ),
            "generatedTemplateFiles": (
                "dict",
                {
                    0: (
                        None,
                        {
                            "files": (
                                "list",
                                {
                                    0: {
                                        "filename": None,
                                        "directory": None,
                                        "contents": None,
                                        "editable": None,
                                    },
                                    1: {
                                        "filename": None,
                                        "directory": None,
                                        "contents": None,
                                        "editable": None,
                                    },
                                },
                            )
                        },
                    )
                },
            ),
            "other": (
                "dict",
                {
                    0: (
                        None,
                        {
                            "files": (
                                "list",
                                {
                                    0: {
                                        "filename": None,
                                        "directory": None,
                                        "contents": None,
                                        "editable": None,
                                    },
                                    1: {
                                        "filename": None,
                                        "directory": None,
                                        "contents": None,
                                        "editable": None,
                                    },
                                },
                            )
                        },
                    )
                },
            ),
        },
        "customTestCaseTemplates": (
            "list",
            {
                0: {
                    "templateId": None,
                    "name": None,
                    "implementation": {
                        "description": {"boards": ("list", {0: "no_validate", 1: "no_validate"})},
                        "function": "no_validate",
                    },
                },
                1: {
                    "templateId": None,
                    "name": None,
                    "implementation": {
                        "description": {"boards": ("list", {0: "no_validate", 1: "no_validate"})},
                        "function": "no_validate",
                    },
                },
            },
        ),
        "testcases": (
            "list",
            {
                0: {
                    "metadata": {"id": None, "name": None, "hidden": None},
                    "implementation": "no_validate",
                    "arguments": ("dict", {0: (None, "no_validate")}),
                    "expects": {"expectedStdout": None},
                },
                1: {
                    "metadata": {"id": None, "name": None, "hidden": None},
                    "implementation": "no_validate",
                    "arguments": ("dict", {0: (None, "no_validate")}),
                    "expects": {"expectedStdout": None},
                },
            },
        ),
        "isPublic": None,
    }
    response = client.v_2.v_3.problem.get_latest_problem(problem_id="problemId")
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.v_2.v_3.problem.get_latest_problem(problem_id="problemId")
    validate_response(async_response, expected_response, expected_types)


async def test_get_problem_version(client: SeedTrace, async_client: AsyncSeedTrace) -> None:
    expected_response: typing.Any = {
        "problemId": "problemId",
        "problemDescription": {
            "boards": [
                {"type": "html", "value": "boards"},
                {"type": "html", "value": "boards"},
            ]
        },
        "problemName": "problemName",
        "problemVersion": 1,
        "supportedLanguages": ["JAVA"],
        "customFiles": {
            "type": "basic",
            "methodName": "methodName",
            "signature": {
                "parameters": [
                    {
                        "parameterId": "parameterId",
                        "name": "name",
                        "variableType": {"type": "integerType"},
                    },
                    {
                        "parameterId": "parameterId",
                        "name": "name",
                        "variableType": {"type": "integerType"},
                    },
                ],
                "returnType": {"type": "integerType"},
            },
            "additionalFiles": {
                "JAVA": {
                    "files": [
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                    ]
                }
            },
            "basicTestCaseTemplate": {
                "templateId": "templateId",
                "name": "name",
                "description": {
                    "boards": [
                        {"type": "html", "value": "boards"},
                        {"type": "html", "value": "boards"},
                    ]
                },
                "expectedValueParameterId": "expectedValueParameterId",
            },
        },
        "generatedFiles": {
            "generatedTestCaseFiles": {
                "JAVA": {
                    "files": [
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                    ]
                }
            },
            "generatedTemplateFiles": {
                "JAVA": {
                    "files": [
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                    ]
                }
            },
            "other": {
                "JAVA": {
                    "files": [
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                        {
                            "filename": "filename",
                            "directory": "directory",
                            "contents": "contents",
                            "editable": True,
                        },
                    ]
                }
            },
        },
        "customTestCaseTemplates": [
            {
                "templateId": "templateId",
                "name": "name",
                "implementation": {
                    "description": {
                        "boards": [
                            {"type": "html", "value": "boards"},
                            {"type": "html", "value": "boards"},
                        ]
                    },
                    "function": {
                        "type": "withActualResult",
                        "getActualResult": {
                            "signature": {
                                "parameters": [
                                    {
                                        "parameterId": "parameterId",
                                        "name": "name",
                                        "variableType": {"type": "integerType"},
                                    },
                                    {
                                        "parameterId": "parameterId",
                                        "name": "name",
                                        "variableType": {"type": "integerType"},
                                    },
                                ],
                                "returnType": {"type": "integerType"},
                            },
                            "code": {"codeByLanguage": {"JAVA": {"impl": "impl", "imports": "imports"}}},
                        },
                        "assertCorrectnessCheck": {
                            "type": "deepEquality",
                            "expectedValueParameterId": "expectedValueParameterId",
                        },
                    },
                },
            },
            {
                "templateId": "templateId",
                "name": "name",
                "implementation": {
                    "description": {
                        "boards": [
                            {"type": "html", "value": "boards"},
                            {"type": "html", "value": "boards"},
                        ]
                    },
                    "function": {
                        "type": "withActualResult",
                        "getActualResult": {
                            "signature": {
                                "parameters": [
                                    {
                                        "parameterId": "parameterId",
                                        "name": "name",
                                        "variableType": {"type": "integerType"},
                                    },
                                    {
                                        "parameterId": "parameterId",
                                        "name": "name",
                                        "variableType": {"type": "integerType"},
                                    },
                                ],
                                "returnType": {"type": "integerType"},
                            },
                            "code": {"codeByLanguage": {"JAVA": {"impl": "impl", "imports": "imports"}}},
                        },
                        "assertCorrectnessCheck": {
                            "type": "deepEquality",
                            "expectedValueParameterId": "expectedValueParameterId",
                        },
                    },
                },
            },
        ],
        "testcases": [
            {
                "metadata": {"id": "id", "name": "name", "hidden": True},
                "implementation": {"type": "templateId", "value": "implementation"},
                "arguments": {"arguments": {"type": "integerValue", "value": 1}},
                "expects": {"expectedStdout": "expectedStdout"},
            },
            {
                "metadata": {"id": "id", "name": "name", "hidden": True},
                "implementation": {"type": "templateId", "value": "implementation"},
                "arguments": {"arguments": {"type": "integerValue", "value": 1}},
                "expects": {"expectedStdout": "expectedStdout"},
            },
        ],
        "isPublic": True,
    }
    expected_types: typing.Any = {
        "problemId": None,
        "problemDescription": {"boards": ("list", {0: "no_validate", 1: "no_validate"})},
        "problemName": None,
        "problemVersion": "integer",
        "supportedLanguages": ("set", {0: None}),
        "customFiles": "no_validate",
        "generatedFiles": {
            "generatedTestCaseFiles": (
                "dict",
                {
                    0: (
                        None,
                        {
                            "files": (
                                "list",
                                {
                                    0: {
                                        "filename": None,
                                        "directory": None,
                                        "contents": None,
                                        "editable": None,
                                    },
                                    1: {
                                        "filename": None,
                                        "directory": None,
                                        "contents": None,
                                        "editable": None,
                                    },
                                },
                            )
                        },
                    )
                },
            ),
            "generatedTemplateFiles": (
                "dict",
                {
                    0: (
                        None,
                        {
                            "files": (
                                "list",
                                {
                                    0: {
                                        "filename": None,
                                        "directory": None,
                                        "contents": None,
                                        "editable": None,
                                    },
                                    1: {
                                        "filename": None,
                                        "directory": None,
                                        "contents": None,
                                        "editable": None,
                                    },
                                },
                            )
                        },
                    )
                },
            ),
            "other": (
                "dict",
                {
                    0: (
                        None,
                        {
                            "files": (
                                "list",
                                {
                                    0: {
                                        "filename": None,
                                        "directory": None,
                                        "contents": None,
                                        "editable": None,
                                    },
                                    1: {
                                        "filename": None,
                                        "directory": None,
                                        "contents": None,
                                        "editable": None,
                                    },
                                },
                            )
                        },
                    )
                },
            ),
        },
        "customTestCaseTemplates": (
            "list",
            {
                0: {
                    "templateId": None,
                    "name": None,
                    "implementation": {
                        "description": {"boards": ("list", {0: "no_validate", 1: "no_validate"})},
                        "function": "no_validate",
                    },
                },
                1: {
                    "templateId": None,
                    "name": None,
                    "implementation": {
                        "description": {"boards": ("list", {0: "no_validate", 1: "no_validate"})},
                        "function": "no_validate",
                    },
                },
            },
        ),
        "testcases": (
            "list",
            {
                0: {
                    "metadata": {"id": None, "name": None, "hidden": None},
                    "implementation": "no_validate",
                    "arguments": ("dict", {0: (None, "no_validate")}),
                    "expects": {"expectedStdout": None},
                },
                1: {
                    "metadata": {"id": None, "name": None, "hidden": None},
                    "implementation": "no_validate",
                    "arguments": ("dict", {0: (None, "no_validate")}),
                    "expects": {"expectedStdout": None},
                },
            },
        ),
        "isPublic": None,
    }
    response = client.v_2.v_3.problem.get_problem_version(problem_id="problemId", problem_version=1)
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.v_2.v_3.problem.get_problem_version(problem_id="problemId", problem_version=1)
    validate_response(async_response, expected_response, expected_types)
