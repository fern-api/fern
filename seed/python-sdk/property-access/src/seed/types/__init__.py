# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .admin import Admin
    from .foo import Foo
    from .user import User
    from .user_or_admin import UserOrAdmin
    from .user_or_admin_discriminated import (
        UserOrAdminDiscriminated,
        UserOrAdminDiscriminated_Admin,
        UserOrAdminDiscriminated_Empty,
        UserOrAdminDiscriminated_User,
    )
    from .user_profile import UserProfile
    from .user_profile_verification import UserProfileVerification
_dynamic_imports: typing.Dict[str, str] = {
    "Admin": ".admin",
    "Foo": ".foo",
    "User": ".user",
    "UserOrAdmin": ".user_or_admin",
    "UserOrAdminDiscriminated": ".user_or_admin_discriminated",
    "UserOrAdminDiscriminated_Admin": ".user_or_admin_discriminated",
    "UserOrAdminDiscriminated_Empty": ".user_or_admin_discriminated",
    "UserOrAdminDiscriminated_User": ".user_or_admin_discriminated",
    "UserProfile": ".user_profile",
    "UserProfileVerification": ".user_profile_verification",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "Admin",
    "Foo",
    "User",
    "UserOrAdmin",
    "UserOrAdminDiscriminated",
    "UserOrAdminDiscriminated_Admin",
    "UserOrAdminDiscriminated_Empty",
    "UserOrAdminDiscriminated_User",
    "UserProfile",
    "UserProfileVerification",
]
