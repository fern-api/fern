{
    "types": {},
    "endpoints": [
        {
            "example_identifier": "default",
            "id": {
                "path": "/",
                "method": "GET",
                "identifier_override": "endpoint_folder-a/service.getDirectThread"
            },
            "snippet": {
                "sync_client": "from seed import SeedAudiences\nfrom seed.environment import SeedAudiencesEnvironment\nclient = SeedAudiences(environment=SeedAudiencesEnvironment.ENVIRONMENT_A, )\nclient.folder_a.service.get_direct_thread()\n",
                "async_client": "from seed import AsyncSeedAudiences\nfrom seed.environment import SeedAudiencesEnvironment\nimport asyncio\nclient = AsyncSeedAudiences(environment=SeedAudiencesEnvironment.ENVIRONMENT_A, )\nasync def main() -> None:\n    await client.folder_a.service.get_direct_thread()\nasyncio.run(main())",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/partner-path",
                "method": "GET",
                "identifier_override": "endpoint_folder-d/service.getDirectThread"
            },
            "snippet": {
                "sync_client": "from seed import SeedAudiences\nfrom seed.environment import SeedAudiencesEnvironment\nclient = SeedAudiences(environment=SeedAudiencesEnvironment.ENVIRONMENT_A, )\nclient.folder_d.service.get_direct_thread()\n",
                "async_client": "from seed import AsyncSeedAudiences\nfrom seed.environment import SeedAudiencesEnvironment\nimport asyncio\nclient = AsyncSeedAudiences(environment=SeedAudiencesEnvironment.ENVIRONMENT_A, )\nasync def main() -> None:\n    await client.folder_d.service.get_direct_thread()\nasyncio.run(main())",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/",
                "method": "POST",
                "identifier_override": "endpoint_foo.find"
            },
            "snippet": {
                "sync_client": "from seed import SeedAudiences\nfrom seed.environment import SeedAudiencesEnvironment\nclient = SeedAudiences(environment=SeedAudiencesEnvironment.ENVIRONMENT_A, )\nclient.foo.find(optional_string='optionalString', public_property='publicProperty', private_property=1, )\n",
                "async_client": "from seed import AsyncSeedAudiences\nfrom seed.environment import SeedAudiencesEnvironment\nimport asyncio\nclient = AsyncSeedAudiences(environment=SeedAudiencesEnvironment.ENVIRONMENT_A, )\nasync def main() -> None:\n    await client.foo.find(optional_string='optionalString', public_property='publicProperty', private_property=1, )\nasyncio.run(main())",
                "type": "python"
            }
        }
    ]
}