{
    "types": {},
    "endpoints": [
        {
            "example_identifier": "default",
            "id": {
                "path": "/{id}",
                "method": "GET",
                "identifier_override": "endpoint_bigunion.get"
            },
            "snippet": {
                "sync_client": "from seed import SeedUnions\n\nclient = SeedUnions(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.bigunion.get(\n    id=\"id\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedUnions\n\nclient = AsyncSeedUnions(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.bigunion.get(\n        id=\"id\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/",
                "method": "PATCH",
                "identifier_override": "endpoint_bigunion.update"
            },
            "snippet": {
                "sync_client": "from seed import SeedUnions\nfrom seed.bigunion import BigUnion_NormalSweet\n\nclient = SeedUnions(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.bigunion.update(\n    request=BigUnion_NormalSweet(\n        value=\"value\",\n    ),\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedUnions\nfrom seed.bigunion import BigUnion_NormalSweet\n\nclient = AsyncSeedUnions(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.bigunion.update(\n        request=BigUnion_NormalSweet(\n            value=\"value\",\n        ),\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/many",
                "method": "PATCH",
                "identifier_override": "endpoint_bigunion.update-many"
            },
            "snippet": {
                "sync_client": "from seed import SeedUnions\nfrom seed.bigunion import BigUnion_NormalSweet\n\nclient = SeedUnions(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.bigunion.update_many(\n    request=[\n        BigUnion_NormalSweet(\n            value=\"value\",\n        ),\n        BigUnion_NormalSweet(\n            value=\"value\",\n        ),\n    ],\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedUnions\nfrom seed.bigunion import BigUnion_NormalSweet\n\nclient = AsyncSeedUnions(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.bigunion.update_many(\n        request=[\n            BigUnion_NormalSweet(\n                value=\"value\",\n            ),\n            BigUnion_NormalSweet(\n                value=\"value\",\n            ),\n        ],\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/{id}",
                "method": "GET",
                "identifier_override": "endpoint_union.get"
            },
            "snippet": {
                "sync_client": "from seed import SeedUnions\n\nclient = SeedUnions(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.union.get(\n    id=\"id\",\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedUnions\n\nclient = AsyncSeedUnions(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.union.get(\n        id=\"id\",\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        },
        {
            "example_identifier": "default",
            "id": {
                "path": "/",
                "method": "PATCH",
                "identifier_override": "endpoint_union.update"
            },
            "snippet": {
                "sync_client": "from seed import SeedUnions\nfrom seed.union import Shape_Circle\n\nclient = SeedUnions(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\nclient.union.update(\n    request=Shape_Circle(\n        radius=1.1,\n    ),\n)\n",
                "async_client": "import asyncio\n\nfrom seed import AsyncSeedUnions\nfrom seed.union import Shape_Circle\n\nclient = AsyncSeedUnions(\n    base_url=\"https://yourhost.com/path/to/api\",\n)\n\n\nasync def main() -> None:\n    await client.union.update(\n        request=Shape_Circle(\n            radius=1.1,\n        ),\n    )\n\n\nasyncio.run(main())\n",
                "type": "python"
            }
        }
    ]
}