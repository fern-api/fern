# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.pydantic_utilities import UniversalBaseModel
import typing
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import pydantic


class Base(UniversalBaseModel):
    """
    Examples
    --------
    from seed.types import UnionWithLiteral_Fern
    UnionWithLiteral_Fern()
    """

    base: typing.Literal["base"] = "base"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class UnionWithLiteral_Fern(Base):
    value: typing.Literal["fern"]
    type: typing.Literal["fern"] = "fern"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


"""
from seed.types import UnionWithLiteral_Fern
UnionWithLiteral_Fern()
"""
UnionWithLiteral = UnionWithLiteral_Fern
