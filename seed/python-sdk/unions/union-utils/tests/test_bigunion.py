# This file was auto-generated by Fern from our API Definition.

from seed import SeedUnions
from seed import AsyncSeedUnions
import typing
from .utilities import validate_response
from seed.bigunion import BigUnion_NormalSweet


async def test_get(client: SeedUnions, async_client: AsyncSeedUnions) -> None:
    expected_response: typing.Any = {
        "type": "normalSweet",
        "value": "value",
        "id": "id",
        "created-at": "2024-01-15T09:30:00Z",
        "archived-at": "2024-01-15T09:30:00Z",
    }
    expected_types: typing.Any = "no_validate"
    response = client.bigunion.get(id="id")
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.bigunion.get(id="id")
    validate_response(async_response, expected_response, expected_types)


async def test_update(client: SeedUnions, async_client: AsyncSeedUnions) -> None:
    expected_response: typing.Any = True
    expected_types: typing.Any = None
    response = client.bigunion.update(request=BigUnion_NormalSweet(value="value"))
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.bigunion.update(request=BigUnion_NormalSweet(value="value"))
    validate_response(async_response, expected_response, expected_types)


async def test_update_many(client: SeedUnions, async_client: AsyncSeedUnions) -> None:
    expected_response: typing.Any = {"string": True}
    expected_types: typing.Tuple[typing.Any, typing.Any] = ("dict", {0: (None, None)})
    response = client.bigunion.update_many(
        request=[BigUnion_NormalSweet(value="value"), BigUnion_NormalSweet(value="value")]
    )
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.bigunion.update_many(
        request=[BigUnion_NormalSweet(value="value"), BigUnion_NormalSweet(value="value")]
    )
    validate_response(async_response, expected_response, expected_types)
