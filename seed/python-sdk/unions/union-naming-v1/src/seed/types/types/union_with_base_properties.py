# This file was auto-generated by Fern from our API Definition.

from __future__ import annotations
from ...core.pydantic_utilities import UniversalBaseModel
from ...core.pydantic_utilities import IS_PYDANTIC_V2
import typing
import pydantic


class Base(UniversalBaseModel):
    """
    Examples
    --------
    from seed.types import IntegerUnionWithBaseProperties
    IntegerUnionWithBaseProperties(value=5)
    """

    id: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


class IntegerUnionWithBaseProperties(Base):
    value: int
    type: typing.Literal["integer"] = "integer"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


class StringUnionWithBaseProperties(Base):
    value: str
    type: typing.Literal["string"] = "string"

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True


class FooUnionWithBaseProperties(Base):
    """
    Examples
    --------
    from seed.types import IntegerUnionWithBaseProperties
    IntegerUnionWithBaseProperties(value=5)
    """

    type: typing.Literal["foo"] = "foo"
    name: str

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow


"""
from seed.types import IntegerUnionWithBaseProperties
IntegerUnionWithBaseProperties(value=5)
"""
UnionWithBaseProperties = typing.Union[
    IntegerUnionWithBaseProperties, StringUnionWithBaseProperties, FooUnionWithBaseProperties
]
