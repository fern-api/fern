# This file was auto-generated by Fern from our API Definition.

from seed import SeedUnions
from seed import AsyncSeedUnions
import typing
from .utilities import validate_response
from seed.union import CircleShape


async def test_get(client: SeedUnions, async_client: AsyncSeedUnions) -> None:
    expected_response: typing.Any = {"type": "circle", "radius": 1.1, "id": "id"}
    expected_types: typing.Any = "no_validate"
    response = client.union.get(id="id")
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.union.get(id="id")
    validate_response(async_response, expected_response, expected_types)


async def test_update(client: SeedUnions, async_client: AsyncSeedUnions) -> None:
    expected_response: typing.Any = True
    expected_types: typing.Any = None
    response = client.union.update(request=CircleShape(radius=1.1))
    validate_response(response, expected_response, expected_types)

    async_response = await async_client.union.update(request=CircleShape(radius=1.1))
    validate_response(async_response, expected_response, expected_types)
