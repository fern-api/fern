# This file was auto-generated by Fern from our API Definition.

from ...core.client_wrapper import SyncClientWrapper
from .raw_client import RawServiceClient
import typing
from ...core.request_options import RequestOptions
from ...types.types.file import File
from ...core.client_wrapper import AsyncClientWrapper
from .raw_client import AsyncRawServiceClient


class ServiceClient:
    def __init__(self, *, client_wrapper: SyncClientWrapper):
        self._raw_client = RawServiceClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> RawServiceClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        RawServiceClient
        """
        return self._raw_client

    def get_file(
        self, filename: str, *, x_file_api_version: str, request_options: typing.Optional[RequestOptions] = None
    ) -> File:
        """
        This endpoint returns a file by its name.

        Parameters
        ----------
        filename : str
            This is a filename

        x_file_api_version : str

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        File

        Examples
        --------
        from seed import SeedExamples
        from seed.environment import SeedExamplesEnvironment

        client = SeedExamples(
            token="YOUR_TOKEN",
            environment=SeedExamplesEnvironment.PRODUCTION,
        )
        client.file.service.get_file(
            filename="file.txt",
            x_file_api_version="0.0.2",
        )
        """
        response = self._raw_client.get_file(
            filename, x_file_api_version=x_file_api_version, request_options=request_options
        )
        return response.data


class AsyncServiceClient:
    def __init__(self, *, client_wrapper: AsyncClientWrapper):
        self._raw_client = AsyncRawServiceClient(client_wrapper=client_wrapper)

    @property
    def with_raw_response(self) -> AsyncRawServiceClient:
        """
        Retrieves a raw implementation of this client that returns raw responses.

        Returns
        -------
        AsyncRawServiceClient
        """
        return self._raw_client

    async def get_file(
        self, filename: str, *, x_file_api_version: str, request_options: typing.Optional[RequestOptions] = None
    ) -> File:
        """
        This endpoint returns a file by its name.

        Parameters
        ----------
        filename : str
            This is a filename

        x_file_api_version : str

        request_options : typing.Optional[RequestOptions]
            Request-specific configuration.

        Returns
        -------
        File

        Examples
        --------
        import asyncio

        from seed import AsyncSeedExamples
        from seed.environment import SeedExamplesEnvironment

        client = AsyncSeedExamples(
            token="YOUR_TOKEN",
            environment=SeedExamplesEnvironment.PRODUCTION,
        )


        async def main() -> None:
            await client.file.service.get_file(
                filename="file.txt",
                x_file_api_version="0.0.2",
            )


        asyncio.run(main())
        """
        response = await self._raw_client.get_file(
            filename, x_file_api_version=x_file_api_version, request_options=request_options
        )
        return response.data
