{
    "types": {},
    "endpoints": [
        {
            "example_identifier": "default",
            "id": {
                "path": "/user",
                "method": "GET",
                "identifier_override": "endpoint_user.getUsername"
            },
            "snippet": {
                "sync_client": "from seed import SeedQueryParameters\nimport uuid\nimport datetime\nfrom seed.user import User\nfrom seed.user import NestedUser\nclient = SeedQueryParameters(base_url=\"https://yourhost.com/path/to/api\", )\nclient.user.get_username(limit=1, id=uuid.UUID(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", ), date=datetime.date.fromisoformat(\"2023-01-15\", ), deadline=datetime.datetime.fromisoformat(\"2024-01-15 09:30:00+00:00\", ), bytes='SGVsbG8gd29ybGQh', user=User(name='name', tags=['tags', 'tags'], ), user_list=[User(name='name', tags=['tags', 'tags'], ), User(name='name', tags=['tags', 'tags'], )], optional_deadline=datetime.datetime.fromisoformat(\"2024-01-15 09:30:00+00:00\", ), key_value={'keyValue': 'keyValue'}, optional_string='optionalString', nested_user=NestedUser(name='name', user=User(name='name', tags=['tags', 'tags'], ), ), optional_user=User(name='name', tags=['tags', 'tags'], ), exclude_user=User(name='name', tags=['tags', 'tags'], ), filter='filter', )\n",
                "async_client": "from seed import AsyncSeedQueryParameters\nimport uuid\nimport datetime\nfrom seed.user import User\nfrom seed.user import NestedUser\nimport asyncio\nclient = AsyncSeedQueryParameters(base_url=\"https://yourhost.com/path/to/api\", )\nasync def main() -> None:\n    await client.user.get_username(limit=1, id=uuid.UUID(\"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", ), date=datetime.date.fromisoformat(\"2023-01-15\", ), deadline=datetime.datetime.fromisoformat(\"2024-01-15 09:30:00+00:00\", ), bytes='SGVsbG8gd29ybGQh', user=User(name='name', tags=['tags', 'tags'], ), user_list=[User(name='name', tags=['tags', 'tags'], ), User(name='name', tags=['tags', 'tags'], )], optional_deadline=datetime.datetime.fromisoformat(\"2024-01-15 09:30:00+00:00\", ), key_value={'keyValue': 'keyValue'}, optional_string='optionalString', nested_user=NestedUser(name='name', user=User(name='name', tags=['tags', 'tags'], ), ), optional_user=User(name='name', tags=['tags', 'tags'], ), exclude_user=User(name='name', tags=['tags', 'tags'], ), filter='filter', )\nasyncio.run(main())",
                "type": "python"
            }
        }
    ]
}