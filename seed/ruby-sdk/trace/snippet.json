{
    "endpoints": [
        {
            "id": {
                "path": "/",
                "method": "GET",
                "identifierOverride": "endpoint_v2.test"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.test",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/",
                "method": "GET",
                "identifierOverride": "endpoint_v2.test"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.test",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-test-submission-status/{submissionId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.updateTestSubmissionStatus"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.update_test_submission_status(submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-test-submission-status-v2/{submissionId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.sendTestSubmissionUpdate"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.send_test_submission_update(submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", request: { update_time: DateTime.parse(\"2024-01-15T09:30:00.000Z\") })",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-workspace-submission-status/{submissionId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.updateWorkspaceSubmissionStatus"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.update_workspace_submission_status(submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-workspace-submission-status-v2/{submissionId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.sendWorkspaceSubmissionUpdate"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.send_workspace_submission_update(submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", request: { update_time: DateTime.parse(\"2024-01-15T09:30:00.000Z\") })",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-test-trace/submission/{submissionId}/testCase/{testCaseId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.storeTracedTestCase"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.store_traced_test_case(\n  submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n  test_case_id: \"testCaseId\",\n  result: { result: { passed: true }, stdout: \"stdout\" },\n  trace_responses: [{ submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }, { submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }]\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-test-trace-v2/submission/{submissionId}/testCase/{testCaseId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.storeTracedTestCaseV2"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.store_traced_test_case_v_2(\n  submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n  test_case_id: \"testCaseId\",\n  request: [{ submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, file: { filename: \"filename\", directory: \"directory\" }, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }, { submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, file: { filename: \"filename\", directory: \"directory\" }, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }]\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-workspace-trace/submission/{submissionId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.storeTracedWorkspace"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.store_traced_workspace(\n  submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n  workspace_run_details: { exception: { exception_type: \"exceptionType\", exception_message: \"exceptionMessage\", exception_stacktrace: \"exceptionStacktrace\" }, stdout: \"stdout\" },\n  trace_responses: [{ submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }, { submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }]\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-workspace-trace-v2/submission/{submissionId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.storeTracedWorkspaceV2"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.store_traced_workspace_v_2(submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", request: [{ submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, file: { filename: \"filename\", directory: \"directory\" }, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }, { submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, file: { filename: \"filename\", directory: \"directory\" }, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }])",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-test-submission-status/{submissionId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.updateTestSubmissionStatus"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.update_test_submission_status(submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-test-submission-status-v2/{submissionId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.sendTestSubmissionUpdate"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.send_test_submission_update(submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", request: { update_time: DateTime.parse(\"2024-01-15T09:30:00.000Z\") })",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-workspace-submission-status/{submissionId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.updateWorkspaceSubmissionStatus"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.update_workspace_submission_status(submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-workspace-submission-status-v2/{submissionId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.sendWorkspaceSubmissionUpdate"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.send_workspace_submission_update(submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", request: { update_time: DateTime.parse(\"2024-01-15T09:30:00.000Z\") })",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-test-trace/submission/{submissionId}/testCase/{testCaseId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.storeTracedTestCase"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.store_traced_test_case(\n  submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n  test_case_id: \"testCaseId\",\n  result: { result: { passed: true }, stdout: \"stdout\" },\n  trace_responses: [{ submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }, { submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }]\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-test-trace-v2/submission/{submissionId}/testCase/{testCaseId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.storeTracedTestCaseV2"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.store_traced_test_case_v_2(\n  submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n  test_case_id: \"testCaseId\",\n  request: [{ submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, file: { filename: \"filename\", directory: \"directory\" }, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }, { submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, file: { filename: \"filename\", directory: \"directory\" }, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }]\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-workspace-trace/submission/{submissionId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.storeTracedWorkspace"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.store_traced_workspace(\n  submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\",\n  workspace_run_details: { exception: { exception_type: \"exceptionType\", exception_message: \"exceptionMessage\", exception_stacktrace: \"exceptionStacktrace\" }, stdout: \"stdout\" },\n  trace_responses: [{ submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }, { submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }]\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/admin/store-workspace-trace-v2/submission/{submissionId}",
                "method": "POST",
                "identifierOverride": "endpoint_admin.storeTracedWorkspaceV2"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.admin.store_traced_workspace_v_2(submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", request: [{ submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, file: { filename: \"filename\", directory: \"directory\" }, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }, { submission_id: \"d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32\", line_number: 1, file: { filename: \"filename\", directory: \"directory\" }, expression_location: { start: 1, offset: 1 }, stack: { num_stack_frames: 1, top_stack_frame: { method_name: \"methodName\", line_number: 1, scopes: [{ variables: { \"variables\": undefined } }, { variables: { \"variables\": undefined } }] } }, stdout: \"stdout\" }])",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/homepage-problems",
                "method": "GET",
                "identifierOverride": "endpoint_homepage.getHomepageProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.homepage.get_homepage_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/homepage-problems",
                "method": "POST",
                "identifierOverride": "endpoint_homepage.setHomepageProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.homepage.set_homepage_problems(request: [\"string\", \"string\"])",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/homepage-problems",
                "method": "GET",
                "identifierOverride": "endpoint_homepage.getHomepageProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.homepage.get_homepage_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/homepage-problems",
                "method": "POST",
                "identifierOverride": "endpoint_homepage.setHomepageProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.homepage.set_homepage_problems(request: [\"string\", \"string\"])",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/migration-info/all",
                "method": "GET",
                "identifierOverride": "endpoint_migration.getAttemptedMigrations"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.migration.get_attempted_migrations(admin_key_header: \"admin-key-header\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/migration-info/all",
                "method": "GET",
                "identifierOverride": "endpoint_migration.getAttemptedMigrations"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.migration.get_attempted_migrations(admin_key_header: \"admin-key-header\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/create",
                "method": "POST",
                "identifierOverride": "endpoint_playlist.createPlaylist"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.playlist.create_playlist(\n  service_param: 1,\n  datetime: DateTime.parse(\"2024-01-15T09:30:00.000Z\"),\n  optional_datetime: DateTime.parse(\"2024-01-15T09:30:00.000Z\"),\n  request: { name: \"name\", problems: [\"problems\", \"problems\"] }\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/all",
                "method": "GET",
                "identifierOverride": "endpoint_playlist.getPlaylists"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.playlist.get_playlists(\n  service_param: 1,\n  limit: 1,\n  other_field: \"otherField\",\n  multi_line_docs: \"multiLineDocs\",\n  optional_multiple_field: \"optionalMultipleField\",\n  multiple_field: \"multipleField\"\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/{playlistId}",
                "method": "GET",
                "identifierOverride": "endpoint_playlist.getPlaylist"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.playlist.get_playlist(service_param: 1, playlist_id: \"playlistId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/{playlistId}",
                "method": "PUT",
                "identifierOverride": "endpoint_playlist.updatePlaylist"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.playlist.update_playlist(\n  service_param: 1,\n  playlist_id: \"playlistId\",\n  request: { name: \"name\", problems: [\"problems\", \"problems\"] }\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/{playlist_id}",
                "method": "DELETE",
                "identifierOverride": "endpoint_playlist.deletePlaylist"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.playlist.delete_playlist(service_param: 1, playlist_id: \"playlist_id\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/create",
                "method": "POST",
                "identifierOverride": "endpoint_playlist.createPlaylist"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.playlist.create_playlist(\n  service_param: 1,\n  datetime: DateTime.parse(\"2024-01-15T09:30:00.000Z\"),\n  optional_datetime: DateTime.parse(\"2024-01-15T09:30:00.000Z\"),\n  request: { name: \"name\", problems: [\"problems\", \"problems\"] }\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/all",
                "method": "GET",
                "identifierOverride": "endpoint_playlist.getPlaylists"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.playlist.get_playlists(\n  service_param: 1,\n  limit: 1,\n  other_field: \"otherField\",\n  multi_line_docs: \"multiLineDocs\",\n  optional_multiple_field: \"optionalMultipleField\",\n  multiple_field: \"multipleField\"\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/{playlistId}",
                "method": "GET",
                "identifierOverride": "endpoint_playlist.getPlaylist"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.playlist.get_playlist(service_param: 1, playlist_id: \"playlistId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/{playlistId}",
                "method": "PUT",
                "identifierOverride": "endpoint_playlist.updatePlaylist"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.playlist.update_playlist(\n  service_param: 1,\n  playlist_id: \"playlistId\",\n  request: { name: \"name\", problems: [\"problems\", \"problems\"] }\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/v2/playlist/{serviceParam}/{playlist_id}",
                "method": "DELETE",
                "identifierOverride": "endpoint_playlist.deletePlaylist"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.playlist.delete_playlist(service_param: 1, playlist_id: \"playlist_id\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problem-crud/create",
                "method": "POST",
                "identifierOverride": "endpoint_problem.createProblem"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.problem.create_problem(request: { problem_name: \"problemName\", problem_description: { boards:  }, files: { JAVA: { solution_file: { filename: \"filename\", contents: \"contents\" }, read_only_files: [{ filename: \"filename\", contents: \"contents\" }, { filename: \"filename\", contents: \"contents\" }] } }, input_params: [{ name: \"name\" }, { name: \"name\" }], testcases: [{ test_case: { id: \"id\", params:  } }, { test_case: { id: \"id\", params:  } }], method_name: \"methodName\" })",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problem-crud/update/{problemId}",
                "method": "POST",
                "identifierOverride": "endpoint_problem.updateProblem"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.problem.update_problem(problem_id: \"problemId\", request: { problem_name: \"problemName\", problem_description: { boards:  }, files: { JAVA: { solution_file: { filename: \"filename\", contents: \"contents\" }, read_only_files: [{ filename: \"filename\", contents: \"contents\" }, { filename: \"filename\", contents: \"contents\" }] } }, input_params: [{ name: \"name\" }, { name: \"name\" }], testcases: [{ test_case: { id: \"id\", params:  } }, { test_case: { id: \"id\", params:  } }], method_name: \"methodName\" })",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problem-crud/delete/{problemId}",
                "method": "DELETE",
                "identifierOverride": "endpoint_problem.deleteProblem"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.problem.delete_problem(problem_id: \"problemId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problem-crud/default-starter-files",
                "method": "POST",
                "identifierOverride": "endpoint_problem.getDefaultStarterFiles"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.problem.get_default_starter_files(input_params: [{ name: \"name\" }, { name: \"name\" }], method_name: \"methodName\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problem-crud/create",
                "method": "POST",
                "identifierOverride": "endpoint_problem.createProblem"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.problem.create_problem(request: { problem_name: \"problemName\", problem_description: { boards:  }, files: { JAVA: { solution_file: { filename: \"filename\", contents: \"contents\" }, read_only_files: [{ filename: \"filename\", contents: \"contents\" }, { filename: \"filename\", contents: \"contents\" }] } }, input_params: [{ name: \"name\" }, { name: \"name\" }], testcases: [{ test_case: { id: \"id\", params:  } }, { test_case: { id: \"id\", params:  } }], method_name: \"methodName\" })",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problem-crud/update/{problemId}",
                "method": "POST",
                "identifierOverride": "endpoint_problem.updateProblem"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.problem.update_problem(problem_id: \"problemId\", request: { problem_name: \"problemName\", problem_description: { boards:  }, files: { JAVA: { solution_file: { filename: \"filename\", contents: \"contents\" }, read_only_files: [{ filename: \"filename\", contents: \"contents\" }, { filename: \"filename\", contents: \"contents\" }] } }, input_params: [{ name: \"name\" }, { name: \"name\" }], testcases: [{ test_case: { id: \"id\", params:  } }, { test_case: { id: \"id\", params:  } }], method_name: \"methodName\" })",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problem-crud/delete/{problemId}",
                "method": "DELETE",
                "identifierOverride": "endpoint_problem.deleteProblem"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.problem.delete_problem(problem_id: \"problemId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problem-crud/default-starter-files",
                "method": "POST",
                "identifierOverride": "endpoint_problem.getDefaultStarterFiles"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.problem.get_default_starter_files(input_params: [{ name: \"name\" }, { name: \"name\" }], method_name: \"methodName\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/sessions/create-session/{language}",
                "method": "POST",
                "identifierOverride": "endpoint_submission.createExecutionSession"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.submission.create_execution_session(language: JAVA)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/sessions/{sessionId}",
                "method": "GET",
                "identifierOverride": "endpoint_submission.getExecutionSession"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.submission.get_execution_session(session_id: \"sessionId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/sessions/stop/{sessionId}",
                "method": "DELETE",
                "identifierOverride": "endpoint_submission.stopExecutionSession"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.submission.stop_execution_session(session_id: \"sessionId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/sessions/execution-sessions-state",
                "method": "GET",
                "identifierOverride": "endpoint_submission.getExecutionSessionsState"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.submission.get_execution_sessions_state",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/sessions/create-session/{language}",
                "method": "POST",
                "identifierOverride": "endpoint_submission.createExecutionSession"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.submission.create_execution_session(language: JAVA)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/sessions/{sessionId}",
                "method": "GET",
                "identifierOverride": "endpoint_submission.getExecutionSession"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.submission.get_execution_session(session_id: \"sessionId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/sessions/stop/{sessionId}",
                "method": "DELETE",
                "identifierOverride": "endpoint_submission.stopExecutionSession"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.submission.stop_execution_session(session_id: \"sessionId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/sessions/execution-sessions-state",
                "method": "GET",
                "identifierOverride": "endpoint_submission.getExecutionSessionsState"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.submission.get_execution_sessions_state",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/sysprop/num-warm-instances/{language}/{numWarmInstances}",
                "method": "PUT",
                "identifierOverride": "endpoint_sysprop.setNumWarmInstances"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.sysprop.set_num_warm_instances(language: JAVA, num_warm_instances: 1)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/sysprop/num-warm-instances",
                "method": "GET",
                "identifierOverride": "endpoint_sysprop.getNumWarmInstances"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.sysprop.get_num_warm_instances",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/sysprop/num-warm-instances/{language}/{numWarmInstances}",
                "method": "PUT",
                "identifierOverride": "endpoint_sysprop.setNumWarmInstances"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.sysprop.set_num_warm_instances(language: JAVA, num_warm_instances: 1)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/sysprop/num-warm-instances",
                "method": "GET",
                "identifierOverride": "endpoint_sysprop.getNumWarmInstances"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.sysprop.get_num_warm_instances",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/lightweight-problem-info",
                "method": "GET",
                "identifierOverride": "endpoint_v2/problem.getLightweightProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.problem.get_lightweight_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info",
                "method": "GET",
                "identifierOverride": "endpoint_v2/problem.getProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.problem.get_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}",
                "method": "GET",
                "identifierOverride": "endpoint_v2/problem.getLatestProblem"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.problem.get_latest_problem(problem_id: \"problemId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}/version/{problemVersion}",
                "method": "GET",
                "identifierOverride": "endpoint_v2/problem.getProblemVersion"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.problem.get_problem_version(problem_id: \"problemId\", problem_version: 1)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/lightweight-problem-info",
                "method": "GET",
                "identifierOverride": "endpoint_v2/problem.getLightweightProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.problem.get_lightweight_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info",
                "method": "GET",
                "identifierOverride": "endpoint_v2/problem.getProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.problem.get_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}",
                "method": "GET",
                "identifierOverride": "endpoint_v2/problem.getLatestProblem"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.problem.get_latest_problem(problem_id: \"problemId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}/version/{problemVersion}",
                "method": "GET",
                "identifierOverride": "endpoint_v2/problem.getProblemVersion"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.problem.get_problem_version(problem_id: \"problemId\", problem_version: 1)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/lightweight-problem-info",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getLightweightProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_lightweight_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getLatestProblem"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_latest_problem(problem_id: \"problemId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}/version/{problemVersion}",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getProblemVersion"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_problem_version(problem_id: \"problemId\", problem_version: 1)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/lightweight-problem-info",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getLightweightProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_lightweight_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getLatestProblem"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_latest_problem(problem_id: \"problemId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}/version/{problemVersion}",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getProblemVersion"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_problem_version(problem_id: \"problemId\", problem_version: 1)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/lightweight-problem-info",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getLightweightProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_lightweight_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getLatestProblem"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_latest_problem(problem_id: \"problemId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}/version/{problemVersion}",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getProblemVersion"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_problem_version(problem_id: \"problemId\", problem_version: 1)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/lightweight-problem-info",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getLightweightProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_lightweight_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getProblems"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_problems",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getLatestProblem"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_latest_problem(problem_id: \"problemId\")",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/problems-v2/problem-info/{problemId}/version/{problemVersion}",
                "method": "GET",
                "identifierOverride": "endpoint_v2/v3/problem.getProblemVersion"
            },
            "snippet": {
                "client": "require \"fern_trace\"\n\ntrace = SeedTraceClient::Client.new(\n  base_url: \"https://api.example.com\",\n  environment: SeedTraceClient::Environment::PROD,\n  token: \"YOUR_AUTH_TOKEN\"\n)\ntrace.v_2.v_3.problem.get_problem_version(problem_id: \"problemId\", problem_version: 1)",
                "type": "ruby"
            }
        }
    ],
    "types": {}
}