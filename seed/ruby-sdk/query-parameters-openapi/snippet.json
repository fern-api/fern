{
    "endpoints": [
        {
            "id": {
                "path": "/user/getUsername",
                "method": "GET",
                "identifierOverride": "endpoint_.search"
            },
            "snippet": {
                "client": "require \"fern_query_parameters_openapi\"\n\napi = SeedApiClient::Client.new(base_url: \"https://api.example.com\")\napi.search(\n  limit: 1,\n  id: \"id\",\n  date: \"date\",\n  deadline: DateTime.parse(\"2024-01-15T09:30:00.000Z\"),\n  bytes: \"bytes\",\n  user: { name: \"name\", tags: [\"tags\", \"tags\"] },\n  user_list: { name: \"name\", tags: [\"tags\", \"tags\"] },\n  optional_deadline: DateTime.parse(\"2024-01-15T09:30:00.000Z\"),\n  key_value: { \"keyValue\": \"keyValue\" },\n  optional_string: \"optionalString\",\n  nested_user: { name: \"name\", user: { name: \"name\", tags: [\"tags\", \"tags\"] } },\n  optional_user: { name: \"name\", tags: [\"tags\", \"tags\"] },\n  exclude_user: { name: \"name\", tags: [\"tags\", \"tags\"] },\n  filter: \"filter\",\n  neighbor: { name: \"name\", tags: [\"tags\", \"tags\"] },\n  neighbor_required: { name: \"name\", tags: [\"tags\", \"tags\"] }\n)",
                "type": "ruby"
            }
        },
        {
            "id": {
                "path": "/user/getUsername",
                "method": "GET",
                "identifierOverride": "endpoint_.search"
            },
            "snippet": {
                "client": "require \"fern_query_parameters_openapi\"\n\napi = SeedApiClient::Client.new(base_url: \"https://api.example.com\")\napi.search(\n  limit: 1,\n  id: \"id\",\n  date: \"date\",\n  deadline: DateTime.parse(\"2024-01-15T09:30:00.000Z\"),\n  bytes: \"bytes\",\n  user: { name: \"name\", tags: [\"tags\", \"tags\"] },\n  user_list: { name: \"name\", tags: [\"tags\", \"tags\"] },\n  optional_deadline: DateTime.parse(\"2024-01-15T09:30:00.000Z\"),\n  key_value: { \"keyValue\": \"keyValue\" },\n  optional_string: \"optionalString\",\n  nested_user: { name: \"name\", user: { name: \"name\", tags: [\"tags\", \"tags\"] } },\n  optional_user: { name: \"name\", tags: [\"tags\", \"tags\"] },\n  exclude_user: { name: \"name\", tags: [\"tags\", \"tags\"] },\n  filter: \"filter\",\n  neighbor: { name: \"name\", tags: [\"tags\", \"tags\"] },\n  neighbor_required: { name: \"name\", tags: [\"tags\", \"tags\"] }\n)",
                "type": "ruby"
            }
        }
    ],
    "types": {}
}