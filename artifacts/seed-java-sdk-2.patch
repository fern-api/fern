diff --git a/seed/java-sdk/error-property/README.md b/seed/java-sdk/error-property/README.md
index 6caacb511..4f10f67a7 100644
--- a/seed/java-sdk/error-property/README.md
+++ b/seed/java-sdk/error-property/README.md
@@ -73,9 +73,9 @@ When the API returns a non-success status code (4xx or 5xx response), an API exc
 ```java
 import com.seed.errorProperty.core.SeedErrorPropertyApiException;
 
-try {
+try{
     client.propertyBasedError().throwError(...);
-} catch (SeedErrorPropertyApiException e) {
+} catch (SeedErrorPropertyApiException e){
     // Do something with the API exception...
 }
 ```
diff --git a/seed/java-sdk/error-property/snippet.json b/seed/java-sdk/error-property/snippet.json
index 34707ba02..7a5554cc6 100644
--- a/seed/java-sdk/error-property/snippet.json
+++ b/seed/java-sdk/error-property/snippet.json
@@ -14,7 +14,7 @@
             }
         },
         {
-            "example_identifier": "3382c84f",
+            "example_identifier": "4da252e4",
             "id": {
                 "method": "GET",
                 "path": "/property-based-error",
diff --git a/seed/java-sdk/errors/README.md b/seed/java-sdk/errors/README.md
index 448c534b9..514a421fc 100644
--- a/seed/java-sdk/errors/README.md
+++ b/seed/java-sdk/errors/README.md
@@ -79,9 +79,9 @@ When the API returns a non-success status code (4xx or 5xx response), an API exc
 ```java
 import com.seed.errors.core.SeedErrorsApiException;
 
-try {
+try{
     client.simple().fooWithoutEndpointError(...);
-} catch (SeedErrorsApiException e) {
+} catch (SeedErrorsApiException e){
     // Do something with the API exception...
 }
 ```
diff --git a/seed/java-sdk/errors/snippet.json b/seed/java-sdk/errors/snippet.json
index 4f06e1825..0937a20da 100644
--- a/seed/java-sdk/errors/snippet.json
+++ b/seed/java-sdk/errors/snippet.json
@@ -1,7 +1,7 @@
 {
     "endpoints": [
         {
-            "example_identifier": "38e631f7",
+            "example_identifier": "617b9d45",
             "id": {
                 "method": "POST",
                 "path": "/foo1",
@@ -14,7 +14,7 @@
             }
         },
         {
-            "example_identifier": "894c9afe",
+            "example_identifier": "4e75de6",
             "id": {
                 "method": "POST",
                 "path": "/foo1",
@@ -27,7 +27,7 @@
             }
         },
         {
-            "example_identifier": "22cbdac",
+            "example_identifier": "8b9daef4",
             "id": {
                 "method": "POST",
                 "path": "/foo1",
@@ -40,7 +40,7 @@
             }
         },
         {
-            "example_identifier": "f542a668",
+            "example_identifier": "504f8710",
             "id": {
                 "method": "POST",
                 "path": "/foo1",
@@ -53,7 +53,7 @@
             }
         },
         {
-            "example_identifier": "38e631f7",
+            "example_identifier": "617b9d45",
             "id": {
                 "method": "POST",
                 "path": "/foo2",
@@ -66,7 +66,7 @@
             }
         },
         {
-            "example_identifier": "c3630df8",
+            "example_identifier": "83c44330",
             "id": {
                 "method": "POST",
                 "path": "/foo2",
@@ -79,7 +79,7 @@
             }
         },
         {
-            "example_identifier": "34253fa0",
+            "example_identifier": "b5ba6158",
             "id": {
                 "method": "POST",
                 "path": "/foo2",
@@ -92,7 +92,7 @@
             }
         },
         {
-            "example_identifier": "894c9afe",
+            "example_identifier": "4e75de6",
             "id": {
                 "method": "POST",
                 "path": "/foo2",
@@ -105,7 +105,7 @@
             }
         },
         {
-            "example_identifier": "22cbdac",
+            "example_identifier": "8b9daef4",
             "id": {
                 "method": "POST",
                 "path": "/foo2",
@@ -118,7 +118,7 @@
             }
         },
         {
-            "example_identifier": "f542a668",
+            "example_identifier": "504f8710",
             "id": {
                 "method": "POST",
                 "path": "/foo2",
@@ -170,7 +170,7 @@
             }
         },
         {
-            "example_identifier": "38e631f7",
+            "example_identifier": "617b9d45",
             "id": {
                 "method": "POST",
                 "path": "/foo3",
@@ -183,7 +183,7 @@
             }
         },
         {
-            "example_identifier": "c3630df8",
+            "example_identifier": "83c44330",
             "id": {
                 "method": "POST",
                 "path": "/foo3",
@@ -196,7 +196,7 @@
             }
         },
         {
-            "example_identifier": "34253fa0",
+            "example_identifier": "b5ba6158",
             "id": {
                 "method": "POST",
                 "path": "/foo3",
@@ -209,7 +209,7 @@
             }
         },
         {
-            "example_identifier": "894c9afe",
+            "example_identifier": "4e75de6",
             "id": {
                 "method": "POST",
                 "path": "/foo3",
@@ -222,7 +222,7 @@
             }
         },
         {
-            "example_identifier": "22cbdac",
+            "example_identifier": "8b9daef4",
             "id": {
                 "method": "POST",
                 "path": "/foo3",
@@ -235,7 +235,7 @@
             }
         },
         {
-            "example_identifier": "f542a668",
+            "example_identifier": "504f8710",
             "id": {
                 "method": "POST",
                 "path": "/foo3",
diff --git a/seed/java-sdk/examples/default/README.md b/seed/java-sdk/examples/default/README.md
index ce0056d91..7d7e5ffa9 100644
--- a/seed/java-sdk/examples/default/README.md
+++ b/seed/java-sdk/examples/default/README.md
@@ -88,9 +88,9 @@ When the API returns a non-success status code (4xx or 5xx response), an API exc
 ```java
 import com.seed.examples.core.SeedExamplesApiException;
 
-try {
+try{
     client.echo(...);
-} catch (SeedExamplesApiException e) {
+} catch (SeedExamplesApiException e){
     // Do something with the API exception...
 }
 ```
diff --git a/seed/java-sdk/examples/default/snippet.json b/seed/java-sdk/examples/default/snippet.json
index 688910e5f..065220b29 100644
--- a/seed/java-sdk/examples/default/snippet.json
+++ b/seed/java-sdk/examples/default/snippet.json
@@ -27,7 +27,7 @@
             }
         },
         {
-            "example_identifier": "6ad26e4d",
+            "example_identifier": "34eb2884",
             "id": {
                 "method": "POST",
                 "path": "/",
@@ -53,7 +53,7 @@
             }
         },
         {
-            "example_identifier": "a6f9156a",
+            "example_identifier": "3a0e3bcb",
             "id": {
                 "method": "GET",
                 "path": "/file/notification/{notificationId}",
@@ -79,7 +79,7 @@
             }
         },
         {
-            "example_identifier": "8cc83a71",
+            "example_identifier": "f19836f4",
             "id": {
                 "method": "GET",
                 "path": "/file/{filename}",
@@ -183,7 +183,7 @@
             }
         },
         {
-            "example_identifier": "5934a200",
+            "example_identifier": "6735a0bf",
             "id": {
                 "method": "GET",
                 "path": "/movie/{movieId}",
@@ -209,7 +209,7 @@
             }
         },
         {
-            "example_identifier": "eaefd913",
+            "example_identifier": "52bf3674",
             "id": {
                 "method": "POST",
                 "path": "/movie",
@@ -248,7 +248,7 @@
             }
         },
         {
-            "example_identifier": "a78166c3",
+            "example_identifier": "656da7",
             "id": {
                 "method": "POST",
                 "path": "/big-entity",
@@ -287,7 +287,7 @@
             }
         },
         {
-            "example_identifier": "a888c024",
+            "example_identifier": "ad99865",
             "id": {
                 "method": "POST",
                 "path": "/refresh-token",
diff --git a/seed/java-sdk/examples/inline-file-properties/README.md b/seed/java-sdk/examples/inline-file-properties/README.md
index ce0056d91..7d7e5ffa9 100644
--- a/seed/java-sdk/examples/inline-file-properties/README.md
+++ b/seed/java-sdk/examples/inline-file-properties/README.md
@@ -88,9 +88,9 @@ When the API returns a non-success status code (4xx or 5xx response), an API exc
 ```java
 import com.seed.examples.core.SeedExamplesApiException;
 
-try {
+try{
     client.echo(...);
-} catch (SeedExamplesApiException e) {
+} catch (SeedExamplesApiException e){
     // Do something with the API exception...
 }
 ```
diff --git a/seed/java-sdk/examples/inline-file-properties/snippet.json b/seed/java-sdk/examples/inline-file-properties/snippet.json
index 688910e5f..065220b29 100644
--- a/seed/java-sdk/examples/inline-file-properties/snippet.json
+++ b/seed/java-sdk/examples/inline-file-properties/snippet.json
@@ -27,7 +27,7 @@
             }
         },
         {
-            "example_identifier": "6ad26e4d",
+            "example_identifier": "34eb2884",
             "id": {
                 "method": "POST",
                 "path": "/",
@@ -53,7 +53,7 @@
             }
         },
         {
-            "example_identifier": "a6f9156a",
+            "example_identifier": "3a0e3bcb",
             "id": {
                 "method": "GET",
                 "path": "/file/notification/{notificationId}",
@@ -79,7 +79,7 @@
             }
         },
         {
-            "example_identifier": "8cc83a71",
+            "example_identifier": "f19836f4",
             "id": {
                 "method": "GET",
                 "path": "/file/{filename}",
@@ -183,7 +183,7 @@
             }
         },
         {
-            "example_identifier": "5934a200",
+            "example_identifier": "6735a0bf",
             "id": {
                 "method": "GET",
                 "path": "/movie/{movieId}",
@@ -209,7 +209,7 @@
             }
         },
         {
-            "example_identifier": "eaefd913",
+            "example_identifier": "52bf3674",
             "id": {
                 "method": "POST",
                 "path": "/movie",
@@ -248,7 +248,7 @@
             }
         },
         {
-            "example_identifier": "a78166c3",
+            "example_identifier": "656da7",
             "id": {
                 "method": "POST",
                 "path": "/big-entity",
@@ -287,7 +287,7 @@
             }
         },
         {
-            "example_identifier": "a888c024",
+            "example_identifier": "ad99865",
             "id": {
                 "method": "POST",
                 "path": "/refresh-token",
diff --git a/seed/java-sdk/examples/no-custom-config/README.md b/seed/java-sdk/examples/no-custom-config/README.md
index ce0056d91..7d7e5ffa9 100644
--- a/seed/java-sdk/examples/no-custom-config/README.md
+++ b/seed/java-sdk/examples/no-custom-config/README.md
@@ -88,9 +88,9 @@ When the API returns a non-success status code (4xx or 5xx response), an API exc
 ```java
 import com.seed.examples.core.SeedExamplesApiException;
 
-try {
+try{
     client.echo(...);
-} catch (SeedExamplesApiException e) {
+} catch (SeedExamplesApiException e){
     // Do something with the API exception...
 }
 ```
diff --git a/seed/java-sdk/examples/no-custom-config/snippet.json b/seed/java-sdk/examples/no-custom-config/snippet.json
index 688910e5f..065220b29 100644
--- a/seed/java-sdk/examples/no-custom-config/snippet.json
+++ b/seed/java-sdk/examples/no-custom-config/snippet.json
@@ -27,7 +27,7 @@
             }
         },
         {
-            "example_identifier": "6ad26e4d",
+            "example_identifier": "34eb2884",
             "id": {
                 "method": "POST",
                 "path": "/",
@@ -53,7 +53,7 @@
             }
         },
         {
-            "example_identifier": "a6f9156a",
+            "example_identifier": "3a0e3bcb",
             "id": {
                 "method": "GET",
                 "path": "/file/notification/{notificationId}",
@@ -79,7 +79,7 @@
             }
         },
         {
-            "example_identifier": "8cc83a71",
+            "example_identifier": "f19836f4",
             "id": {
                 "method": "GET",
                 "path": "/file/{filename}",
@@ -183,7 +183,7 @@
             }
         },
         {
-            "example_identifier": "5934a200",
+            "example_identifier": "6735a0bf",
             "id": {
                 "method": "GET",
                 "path": "/movie/{movieId}",
@@ -209,7 +209,7 @@
             }
         },
         {
-            "example_identifier": "eaefd913",
+            "example_identifier": "52bf3674",
             "id": {
                 "method": "POST",
                 "path": "/movie",
@@ -248,7 +248,7 @@
             }
         },
         {
-            "example_identifier": "a78166c3",
+            "example_identifier": "656da7",
             "id": {
                 "method": "POST",
                 "path": "/big-entity",
@@ -287,7 +287,7 @@
             }
         },
         {
-            "example_identifier": "a888c024",
+            "example_identifier": "ad99865",
             "id": {
                 "method": "POST",
                 "path": "/refresh-token",
diff --git a/seed/java-sdk/examples/readme-config/README.md b/seed/java-sdk/examples/readme-config/README.md
index 34a00006c..7dab22d94 100644
--- a/seed/java-sdk/examples/readme-config/README.md
+++ b/seed/java-sdk/examples/readme-config/README.md
@@ -133,9 +133,9 @@ When the API returns a non-success status code (4xx or 5xx response), an API exc
 ```java
 import com.seed.examples.core.SeedExamplesApiException;
 
-try {
+try{
     client.service().createMovie(...);
-} catch (SeedExamplesApiException e) {
+} catch (SeedExamplesApiException e){
     // Do something with the API exception...
 }
 ```
diff --git a/seed/java-sdk/examples/readme-config/snippet.json b/seed/java-sdk/examples/readme-config/snippet.json
index 688910e5f..065220b29 100644
--- a/seed/java-sdk/examples/readme-config/snippet.json
+++ b/seed/java-sdk/examples/readme-config/snippet.json
@@ -27,7 +27,7 @@
             }
         },
         {
-            "example_identifier": "6ad26e4d",
+            "example_identifier": "34eb2884",
             "id": {
                 "method": "POST",
                 "path": "/",
@@ -53,7 +53,7 @@
             }
         },
         {
-            "example_identifier": "a6f9156a",
+            "example_identifier": "3a0e3bcb",
             "id": {
                 "method": "GET",
                 "path": "/file/notification/{notificationId}",
@@ -79,7 +79,7 @@
             }
         },
         {
-            "example_identifier": "8cc83a71",
+            "example_identifier": "f19836f4",
             "id": {
                 "method": "GET",
                 "path": "/file/{filename}",
@@ -183,7 +183,7 @@
             }
         },
         {
-            "example_identifier": "5934a200",
+            "example_identifier": "6735a0bf",
             "id": {
                 "method": "GET",
                 "path": "/movie/{movieId}",
@@ -209,7 +209,7 @@
             }
         },
         {
-            "example_identifier": "eaefd913",
+            "example_identifier": "52bf3674",
             "id": {
                 "method": "POST",
                 "path": "/movie",
@@ -248,7 +248,7 @@
             }
         },
         {
-            "example_identifier": "a78166c3",
+            "example_identifier": "656da7",
             "id": {
                 "method": "POST",
                 "path": "/big-entity",
@@ -287,7 +287,7 @@
             }
         },
         {
-            "example_identifier": "a888c024",
+            "example_identifier": "ad99865",
             "id": {
                 "method": "POST",
                 "path": "/refresh-token",
diff --git a/seed/java-sdk/exhaustive/custom-dependency/README.md b/seed/java-sdk/exhaustive/custom-dependency/README.md
index e529f3c15..154a6763a 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/README.md
+++ b/seed/java-sdk/exhaustive/custom-dependency/README.md
@@ -77,9 +77,9 @@ When the API returns a non-success status code (4xx or 5xx response), an API exc
 ```java
 import com.seed.exhaustive.core.SeedExhaustiveApiException;
 
-try {
+try{
     client.endpoints().container().getAndReturnListOfPrimitives(...);
-} catch (SeedExhaustiveApiException e) {
+} catch (SeedExhaustiveApiException e){
     // Do something with the API exception...
 }
 ```
diff --git a/seed/java-sdk/exhaustive/custom-dependency/snippet.json b/seed/java-sdk/exhaustive/custom-dependency/snippet.json
index 3e176bcd5..be5729eff 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/snippet.json
+++ b/seed/java-sdk/exhaustive/custom-dependency/snippet.json
@@ -14,7 +14,7 @@
             }
         },
         {
-            "example_identifier": "c7ab231f",
+            "example_identifier": "adc277bf",
             "id": {
                 "method": "POST",
                 "path": "/container/list-of-objects",
@@ -40,7 +40,7 @@
             }
         },
         {
-            "example_identifier": "317bc7db",
+            "example_identifier": "c6fcb509",
             "id": {
                 "method": "POST",
                 "path": "/container/set-of-objects",
@@ -66,7 +66,7 @@
             }
         },
         {
-            "example_identifier": "65dd09b3",
+            "example_identifier": "55acfd1",
             "id": {
                 "method": "POST",
                 "path": "/container/map-prim-to-object",
@@ -79,7 +79,7 @@
             }
         },
         {
-            "example_identifier": "8e7f59d7",
+            "example_identifier": "6344cc63",
             "id": {
                 "method": "POST",
                 "path": "/container/opt-objects",
@@ -92,7 +92,7 @@
             }
         },
         {
-            "example_identifier": "26c4b3fc",
+            "example_identifier": "dab60b6f",
             "id": {
                 "method": "POST",
                 "path": "/foo/bar",
@@ -105,7 +105,7 @@
             }
         },
         {
-            "example_identifier": "26c4b3fc",
+            "example_identifier": "dab60b6f",
             "id": {
                 "method": "POST",
                 "path": "/foo/baz",
@@ -144,7 +144,7 @@
             }
         },
         {
-            "example_identifier": "7cff6b96",
+            "example_identifier": "bb5ed0ec",
             "id": {
                 "method": "POST",
                 "path": "/http-methods",
@@ -157,7 +157,7 @@
             }
         },
         {
-            "example_identifier": "4490d50d",
+            "example_identifier": "cd2a85b",
             "id": {
                 "method": "PUT",
                 "path": "/http-methods/{id}",
@@ -170,7 +170,7 @@
             }
         },
         {
-            "example_identifier": "f717d12e",
+            "example_identifier": "29f14718",
             "id": {
                 "method": "PATCH",
                 "path": "/http-methods/{id}",
@@ -196,7 +196,7 @@
             }
         },
         {
-            "example_identifier": "1c24712d",
+            "example_identifier": "a69fd89f",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-with-optional-field",
@@ -209,7 +209,7 @@
             }
         },
         {
-            "example_identifier": "e52b6f07",
+            "example_identifier": "db05d70d",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-with-required-field",
@@ -222,7 +222,7 @@
             }
         },
         {
-            "example_identifier": "a15fedf3",
+            "example_identifier": "f56a46bf",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-with-map-of-map",
@@ -235,7 +235,7 @@
             }
         },
         {
-            "example_identifier": "e346b73f",
+            "example_identifier": "45543f",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-nested-with-optional-field",
@@ -248,7 +248,7 @@
             }
         },
         {
-            "example_identifier": "83d00ee4",
+            "example_identifier": "a61a451c",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-nested-with-required-field/{string}",
@@ -261,7 +261,7 @@
             }
         },
         {
-            "example_identifier": "279f6202",
+            "example_identifier": "25673284",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-nested-with-required-field-list",
@@ -495,7 +495,7 @@
             }
         },
         {
-            "example_identifier": "3333808b",
+            "example_identifier": "889b814e",
             "id": {
                 "method": "PUT",
                 "path": "/{id}",
@@ -508,7 +508,7 @@
             }
         },
         {
-            "example_identifier": "9962a07b",
+            "example_identifier": "d3cd01af",
             "id": {
                 "method": "POST",
                 "path": "/union",
@@ -573,7 +573,7 @@
             }
         },
         {
-            "example_identifier": "a939925e",
+            "example_identifier": "8afb875f",
             "id": {
                 "method": "POST",
                 "path": "/req-bodies/object",
@@ -586,7 +586,7 @@
             }
         },
         {
-            "example_identifier": "74fa564b",
+            "example_identifier": "24e4c794",
             "id": {
                 "method": "POST",
                 "path": "/req-bodies/object",
@@ -612,7 +612,7 @@
             }
         },
         {
-            "example_identifier": "4ca6cb0d",
+            "example_identifier": "fd23fcee",
             "id": {
                 "method": "POST",
                 "path": "/no-auth",
@@ -625,7 +625,7 @@
             }
         },
         {
-            "example_identifier": "f825134f",
+            "example_identifier": "9e112462",
             "id": {
                 "method": "GET",
                 "path": "/no-req-body",
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example0.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example0.java
index 5ba38de7a..83f3e6605 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example0.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example0.java
@@ -5,14 +5,11 @@ import java.util.Arrays;
 
 public class Example0 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnListOfPrimitives(
-            Arrays.asList("string", "string")
-        );
+        client.endpoints().container().getAndReturnListOfPrimitives(Arrays.asList("string", "string"));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example1.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example1.java
index f42ce337e..3b6a3a7db 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example1.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example1.java
@@ -6,23 +6,15 @@ import java.util.Arrays;
 
 public class Example1 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnListOfObjects(
-            Arrays.asList(
-                ObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .build(),
-                ObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .build()
-            )
-        );
+        client.endpoints()
+                .container()
+                .getAndReturnListOfObjects(Arrays.asList(
+                        ObjectWithRequiredField.builder().string("string").build(),
+                        ObjectWithRequiredField.builder().string("string").build()));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example10.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example10.java
index 50f0858a6..c586f208d 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example10.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example10.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example10 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().httpMethods().testGet("id");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example11.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example11.java
index 328e3eb66..dae223a93 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example11.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example11.java
@@ -5,17 +5,13 @@ import com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;
 
 public class Example11 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().httpMethods().testPost(
-            ObjectWithRequiredField
-                .builder()
-                .string("string")
-                .build()
-        );
+        client.endpoints()
+                .httpMethods()
+                .testPost(ObjectWithRequiredField.builder().string("string").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example12.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example12.java
index a34a11839..9a0970b1f 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example12.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example12.java
@@ -5,18 +5,14 @@ import com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;
 
 public class Example12 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().httpMethods().testPut(
-            "id",
-            ObjectWithRequiredField
-                .builder()
-                .string("string")
-                .build()
-        );
+        client.endpoints()
+                .httpMethods()
+                .testPut(
+                        "id", ObjectWithRequiredField.builder().string("string").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example13.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example13.java
index f8ff03ad8..e06333892 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example13.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example13.java
@@ -12,42 +12,33 @@ import java.util.UUID;
 
 public class Example13 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().httpMethods().testPatch(
-            "id",
-            ObjectWithOptionalField
-                .builder()
-                .string("string")
-                .integer(1)
-                .long_(1000000L)
-                .double_(1.1)
-                .bool(true)
-                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                .date("2023-01-15")
-                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                .base64("SGVsbG8gd29ybGQh".getBytes())
-                .list(
-                    Optional.of(
-                        Arrays.asList("list", "list")
-                    )
-                )
-                .set(
-                    new HashSet<String>(
-                        Arrays.asList("set")
-                    )
-                )
-                .map(
-                    new HashMap<Integer, String>() {{
-                        put(1, "map");
-                    }}
-                )
-                .bigint(new BigInteger("1000000"))
-                .build()
-        );
+        client.endpoints()
+                .httpMethods()
+                .testPatch(
+                        "id",
+                        ObjectWithOptionalField.builder()
+                                .string("string")
+                                .integer(1)
+                                .long_(1000000L)
+                                .double_(1.1)
+                                .bool(true)
+                                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                .date("2023-01-15")
+                                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                .base64("SGVsbG8gd29ybGQh".getBytes())
+                                .list(Optional.of(Arrays.asList("list", "list")))
+                                .set(new HashSet<String>(Arrays.asList("set")))
+                                .map(new HashMap<Integer, String>() {
+                                    {
+                                        put(1, "map");
+                                    }
+                                })
+                                .bigint(new BigInteger("1000000"))
+                                .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example14.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example14.java
index 453917942..9818c6c8a 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example14.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example14.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example14 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().httpMethods().testDelete("id");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example15.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example15.java
index c86b187dc..d7c67adfa 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example15.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example15.java
@@ -12,41 +12,31 @@ import java.util.UUID;
 
 public class Example15 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnWithOptionalField(
-            ObjectWithOptionalField
-                .builder()
-                .string("string")
-                .integer(1)
-                .long_(1000000L)
-                .double_(1.1)
-                .bool(true)
-                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                .date("2023-01-15")
-                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                .base64("SGVsbG8gd29ybGQh".getBytes())
-                .list(
-                    Optional.of(
-                        Arrays.asList("list", "list")
-                    )
-                )
-                .set(
-                    new HashSet<String>(
-                        Arrays.asList("set")
-                    )
-                )
-                .map(
-                    new HashMap<Integer, String>() {{
-                        put(1, "map");
-                    }}
-                )
-                .bigint(new BigInteger("1000000"))
-                .build()
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnWithOptionalField(ObjectWithOptionalField.builder()
+                        .string("string")
+                        .integer(1)
+                        .long_(1000000L)
+                        .double_(1.1)
+                        .bool(true)
+                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                        .date("2023-01-15")
+                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                        .list(Optional.of(Arrays.asList("list", "list")))
+                        .set(new HashSet<String>(Arrays.asList("set")))
+                        .map(new HashMap<Integer, String>() {
+                            {
+                                put(1, "map");
+                            }
+                        })
+                        .bigint(new BigInteger("1000000"))
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example16.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example16.java
index dc2c12169..1ada40ac5 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example16.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example16.java
@@ -5,17 +5,14 @@ import com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;
 
 public class Example16 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnWithRequiredField(
-            ObjectWithRequiredField
-                .builder()
-                .string("string")
-                .build()
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnWithRequiredField(
+                        ObjectWithRequiredField.builder().string("string").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example17.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example17.java
index 83c86d54b..eafec3277 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example17.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example17.java
@@ -7,23 +7,23 @@ import java.util.Map;
 
 public class Example17 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnWithMapOfMap(
-            ObjectWithMapOfMap
-                .builder()
-                .map(
-                    new HashMap<String, Map<String, String>>() {{
-                        put("map", new HashMap<String, String>() {{
-                            put("map", "map");
-                        }});
-                    }}
-                )
-                .build()
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnWithMapOfMap(ObjectWithMapOfMap.builder()
+                        .map(new HashMap<String, Map<String, String>>() {
+                            {
+                                put("map", new HashMap<String, String>() {
+                                    {
+                                        put("map", "map");
+                                    }
+                                });
+                            }
+                        })
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example18.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example18.java
index 682bf220e..d8e58fada 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example18.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example18.java
@@ -13,47 +13,34 @@ import java.util.UUID;
 
 public class Example18 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnNestedWithOptionalField(
-            NestedObjectWithOptionalField
-                .builder()
-                .string("string")
-                .nestedObject(
-                    ObjectWithOptionalField
-                        .builder()
+        client.endpoints()
+                .object()
+                .getAndReturnNestedWithOptionalField(NestedObjectWithOptionalField.builder()
                         .string("string")
-                        .integer(1)
-                        .long_(1000000L)
-                        .double_(1.1)
-                        .bool(true)
-                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                        .date("2023-01-15")
-                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                        .base64("SGVsbG8gd29ybGQh".getBytes())
-                        .list(
-                            Optional.of(
-                                Arrays.asList("list", "list")
-                            )
-                        )
-                        .set(
-                            new HashSet<String>(
-                                Arrays.asList("set")
-                            )
-                        )
-                        .map(
-                            new HashMap<Integer, String>() {{
-                                put(1, "map");
-                            }}
-                        )
-                        .bigint(new BigInteger("1000000"))
-                        .build()
-                )
-                .build()
-        );
+                        .nestedObject(ObjectWithOptionalField.builder()
+                                .string("string")
+                                .integer(1)
+                                .long_(1000000L)
+                                .double_(1.1)
+                                .bool(true)
+                                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                .date("2023-01-15")
+                                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                .base64("SGVsbG8gd29ybGQh".getBytes())
+                                .list(Optional.of(Arrays.asList("list", "list")))
+                                .set(new HashSet<String>(Arrays.asList("set")))
+                                .map(new HashMap<Integer, String>() {
+                                    {
+                                        put(1, "map");
+                                    }
+                                })
+                                .bigint(new BigInteger("1000000"))
+                                .build())
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example19.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example19.java
index 7f9814ee8..bafbb6852 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example19.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example19.java
@@ -13,48 +13,36 @@ import java.util.UUID;
 
 public class Example19 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnNestedWithRequiredField(
-            "string",
-            NestedObjectWithRequiredField
-                .builder()
-                .string("string")
-                .nestedObject(
-                    ObjectWithOptionalField
-                        .builder()
-                        .string("string")
-                        .integer(1)
-                        .long_(1000000L)
-                        .double_(1.1)
-                        .bool(true)
-                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                        .date("2023-01-15")
-                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                        .base64("SGVsbG8gd29ybGQh".getBytes())
-                        .list(
-                            Optional.of(
-                                Arrays.asList("list", "list")
-                            )
-                        )
-                        .set(
-                            new HashSet<String>(
-                                Arrays.asList("set")
-                            )
-                        )
-                        .map(
-                            new HashMap<Integer, String>() {{
-                                put(1, "map");
-                            }}
-                        )
-                        .bigint(new BigInteger("1000000"))
-                        .build()
-                )
-                .build()
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnNestedWithRequiredField(
+                        "string",
+                        NestedObjectWithRequiredField.builder()
+                                .string("string")
+                                .nestedObject(ObjectWithOptionalField.builder()
+                                        .string("string")
+                                        .integer(1)
+                                        .long_(1000000L)
+                                        .double_(1.1)
+                                        .bool(true)
+                                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                        .date("2023-01-15")
+                                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                                        .list(Optional.of(Arrays.asList("list", "list")))
+                                        .set(new HashSet<String>(Arrays.asList("set")))
+                                        .map(new HashMap<Integer, String>() {
+                                            {
+                                                put(1, "map");
+                                            }
+                                        })
+                                        .bigint(new BigInteger("1000000"))
+                                        .build())
+                                .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example2.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example2.java
index 3f0f7c326..f94a69e21 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example2.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example2.java
@@ -6,16 +6,11 @@ import java.util.HashSet;
 
 public class Example2 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnSetOfPrimitives(
-            new HashSet<String>(
-                Arrays.asList("string")
-            )
-        );
+        client.endpoints().container().getAndReturnSetOfPrimitives(new HashSet<String>(Arrays.asList("string")));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example20.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example20.java
index 916e5a63f..fca4925c9 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example20.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example20.java
@@ -13,83 +13,57 @@ import java.util.UUID;
 
 public class Example20 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnNestedWithRequiredFieldAsList(
-            Arrays.asList(
-                NestedObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .nestedObject(
-                        ObjectWithOptionalField
-                            .builder()
-                            .string("string")
-                            .integer(1)
-                            .long_(1000000L)
-                            .double_(1.1)
-                            .bool(true)
-                            .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                            .date("2023-01-15")
-                            .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                            .base64("SGVsbG8gd29ybGQh".getBytes())
-                            .list(
-                                Optional.of(
-                                    Arrays.asList("list", "list")
-                                )
-                            )
-                            .set(
-                                new HashSet<String>(
-                                    Arrays.asList("set")
-                                )
-                            )
-                            .map(
-                                new HashMap<Integer, String>() {{
-                                    put(1, "map");
-                                }}
-                            )
-                            .bigint(new BigInteger("1000000"))
-                            .build()
-                    )
-                    .build(),
-                NestedObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .nestedObject(
-                        ObjectWithOptionalField
-                            .builder()
-                            .string("string")
-                            .integer(1)
-                            .long_(1000000L)
-                            .double_(1.1)
-                            .bool(true)
-                            .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                            .date("2023-01-15")
-                            .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                            .base64("SGVsbG8gd29ybGQh".getBytes())
-                            .list(
-                                Optional.of(
-                                    Arrays.asList("list", "list")
-                                )
-                            )
-                            .set(
-                                new HashSet<String>(
-                                    Arrays.asList("set")
-                                )
-                            )
-                            .map(
-                                new HashMap<Integer, String>() {{
-                                    put(1, "map");
-                                }}
-                            )
-                            .bigint(new BigInteger("1000000"))
-                            .build()
-                    )
-                    .build()
-            )
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnNestedWithRequiredFieldAsList(Arrays.asList(
+                        NestedObjectWithRequiredField.builder()
+                                .string("string")
+                                .nestedObject(ObjectWithOptionalField.builder()
+                                        .string("string")
+                                        .integer(1)
+                                        .long_(1000000L)
+                                        .double_(1.1)
+                                        .bool(true)
+                                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                        .date("2023-01-15")
+                                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                                        .list(Optional.of(Arrays.asList("list", "list")))
+                                        .set(new HashSet<String>(Arrays.asList("set")))
+                                        .map(new HashMap<Integer, String>() {
+                                            {
+                                                put(1, "map");
+                                            }
+                                        })
+                                        .bigint(new BigInteger("1000000"))
+                                        .build())
+                                .build(),
+                        NestedObjectWithRequiredField.builder()
+                                .string("string")
+                                .nestedObject(ObjectWithOptionalField.builder()
+                                        .string("string")
+                                        .integer(1)
+                                        .long_(1000000L)
+                                        .double_(1.1)
+                                        .bool(true)
+                                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                        .date("2023-01-15")
+                                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                                        .list(Optional.of(Arrays.asList("list", "list")))
+                                        .set(new HashSet<String>(Arrays.asList("set")))
+                                        .map(new HashMap<Integer, String>() {
+                                            {
+                                                put(1, "map");
+                                            }
+                                        })
+                                        .bigint(new BigInteger("1000000"))
+                                        .build())
+                                .build()));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example21.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example21.java
index 40d13c1d3..488c2d0e5 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example21.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example21.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example21 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().params().getWithPath("param");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example22.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example22.java
index a26bffd38..38f73d142 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example22.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example22.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example22 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().params().getWithPath("param");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example23.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example23.java
index 3e5d8f112..692ccb94f 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example23.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example23.java
@@ -5,18 +5,13 @@ import com.seed.exhaustive.resources.endpoints.params.requests.GetWithQuery;
 
 public class Example23 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().params().getWithQuery(
-            GetWithQuery
-                .builder()
-                .query("query")
-                .number(1)
-                .build()
-        );
+        client.endpoints()
+                .params()
+                .getWithQuery(GetWithQuery.builder().query("query").number(1).build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example24.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example24.java
index 49bd57e46..80f952ad9 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example24.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example24.java
@@ -5,18 +5,13 @@ import com.seed.exhaustive.resources.endpoints.params.requests.GetWithQuery;
 
 public class Example24 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().params().getWithQuery(
-            GetWithQuery
-                .builder()
-                .query("query")
-                .number(1)
-                .build()
-        );
+        client.endpoints()
+                .params()
+                .getWithQuery(GetWithQuery.builder().query("query").number(1).build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example25.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example25.java
index f97d4d477..a2965acfa 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example25.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example25.java
@@ -5,18 +5,14 @@ import com.seed.exhaustive.resources.endpoints.params.requests.GetWithPathAndQue
 
 public class Example25 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().params().getWithPathAndQuery(
-            "param",
-            GetWithPathAndQuery
-                .builder()
-                .query("query")
-                .build()
-        );
+        client.endpoints()
+                .params()
+                .getWithPathAndQuery(
+                        "param", GetWithPathAndQuery.builder().query("query").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example26.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example26.java
index d7379bbd3..a9bd63e4c 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example26.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example26.java
@@ -5,18 +5,14 @@ import com.seed.exhaustive.resources.endpoints.params.requests.GetWithPathAndQue
 
 public class Example26 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().params().getWithPathAndQuery(
-            "param",
-            GetWithPathAndQuery
-                .builder()
-                .query("query")
-                .build()
-        );
+        client.endpoints()
+                .params()
+                .getWithPathAndQuery(
+                        "param", GetWithPathAndQuery.builder().query("query").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example27.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example27.java
index b5a6138c3..489ca693a 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example27.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example27.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example27 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().params().modifyWithPath("param", "string");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example28.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example28.java
index cd62bb44b..c24788921 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example28.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example28.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example28 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().params().modifyWithPath("param", "string");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example29.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example29.java
index d1f89066c..56034ac43 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example29.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example29.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example29 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnString("string");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example3.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example3.java
index d3337bad4..4b45d2e3b 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example3.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example3.java
@@ -7,21 +7,14 @@ import java.util.HashSet;
 
 public class Example3 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnSetOfObjects(
-            new HashSet<ObjectWithRequiredField>(
-                Arrays.asList(
-                    ObjectWithRequiredField
-                        .builder()
-                        .string("string")
-                        .build()
-                )
-            )
-        );
+        client.endpoints()
+                .container()
+                .getAndReturnSetOfObjects(new HashSet<ObjectWithRequiredField>(Arrays.asList(
+                        ObjectWithRequiredField.builder().string("string").build())));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example30.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example30.java
index 48576c9eb..0940d379f 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example30.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example30.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example30 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnInt(1);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example31.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example31.java
index f425626bd..af14c7d42 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example31.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example31.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example31 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnLong(1000000L);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example32.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example32.java
index 5b310e6f6..fcccad7ba 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example32.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example32.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example32 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnDouble(1.1);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example33.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example33.java
index f0faab861..3b12dc229 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example33.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example33.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example33 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnBool(true);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example34.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example34.java
index 184f6d802..7bb19c117 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example34.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example34.java
@@ -5,12 +5,11 @@ import java.time.OffsetDateTime;
 
 public class Example34 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnDatetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example35.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example35.java
index b0918ebfb..a4aa2892d 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example35.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example35.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example35 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnDate("2023-01-15");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example36.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example36.java
index 2c1f63e36..8be3d6e88 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example36.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example36.java
@@ -5,12 +5,11 @@ import java.util.UUID;
 
 public class Example36 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnUuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example37.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example37.java
index ec6232ec0..2324c032c 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example37.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example37.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example37 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnBase64("SGVsbG8gd29ybGQh".getBytes());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example38.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example38.java
index 60e7edda6..62f1f1d1d 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example38.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example38.java
@@ -5,17 +5,11 @@ import com.seed.exhaustive.resources.endpoints.put.requests.PutRequest;
 
 public class Example38 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().put().add(
-            PutRequest
-                .builder()
-                .id("id")
-                .build()
-        );
+        client.endpoints().put().add(PutRequest.builder().id("id").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example39.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example39.java
index abaa9fc2d..e7e5a2777 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example39.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example39.java
@@ -6,20 +6,14 @@ import com.seed.exhaustive.resources.types.union.types.Dog;
 
 public class Example39 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().union().getAndReturnUnion(
-            Animal.dog(
-                Dog
-                    .builder()
-                    .name("name")
-                    .likesToWoof(true)
-                    .build()
-            )
-        );
+        client.endpoints()
+                .union()
+                .getAndReturnUnion(
+                        Animal.dog(Dog.builder().name("name").likesToWoof(true).build()));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example4.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example4.java
index 4f92f6969..d42879d90 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example4.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example4.java
@@ -5,16 +5,15 @@ import java.util.HashMap;
 
 public class Example4 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnMapPrimToPrim(
-            new HashMap<String, String>() {{
+        client.endpoints().container().getAndReturnMapPrimToPrim(new HashMap<String, String>() {
+            {
                 put("string", "string");
-            }}
-        );
+            }
+        });
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example40.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example40.java
index 2fdd43ea4..1dbdaae0b 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example40.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example40.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example40 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().urls().withMixedCase();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example41.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example41.java
index fa9ef5a95..e2c88b490 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example41.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example41.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example41 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().urls().noEndingSlash();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example42.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example42.java
index a24834b9b..3aaa108e8 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example42.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example42.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example42 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().urls().withEndingSlash();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example43.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example43.java
index 08f823b86..660e47992 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example43.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example43.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example43 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().urls().withUnderscores();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example44.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example44.java
index 295d0ec6c..57d1626c3 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example44.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example44.java
@@ -13,48 +13,34 @@ import java.util.UUID;
 
 public class Example44 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.inlinedRequests().postWithObjectBodyandResponse(
-            PostWithObjectBody
-                .builder()
-                .string("string")
-                .integer(1)
-                .nestedObject(
-                    ObjectWithOptionalField
-                        .builder()
+        client.inlinedRequests()
+                .postWithObjectBodyandResponse(PostWithObjectBody.builder()
                         .string("string")
                         .integer(1)
-                        .long_(1000000L)
-                        .double_(1.1)
-                        .bool(true)
-                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                        .date("2023-01-15")
-                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                        .base64("SGVsbG8gd29ybGQh".getBytes())
-                        .list(
-                            Optional.of(
-                                Arrays.asList("list", "list")
-                            )
-                        )
-                        .set(
-                            new HashSet<String>(
-                                Arrays.asList("set")
-                            )
-                        )
-                        .map(
-                            new HashMap<Integer, String>() {{
-                                put(1, "map");
-                            }}
-                        )
-                        .bigint(new BigInteger("1000000"))
-                        .build()
-                )
-                .build()
-        );
+                        .nestedObject(ObjectWithOptionalField.builder()
+                                .string("string")
+                                .integer(1)
+                                .long_(1000000L)
+                                .double_(1.1)
+                                .bool(true)
+                                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                .date("2023-01-15")
+                                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                .base64("SGVsbG8gd29ybGQh".getBytes())
+                                .list(Optional.of(Arrays.asList("list", "list")))
+                                .set(new HashSet<String>(Arrays.asList("set")))
+                                .map(new HashMap<Integer, String>() {
+                                    {
+                                        put(1, "map");
+                                    }
+                                })
+                                .bigint(new BigInteger("1000000"))
+                                .build())
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example45.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example45.java
index db309e2ab..ad4681f4b 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example45.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example45.java
@@ -13,48 +13,34 @@ import java.util.UUID;
 
 public class Example45 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.inlinedRequests().postWithObjectBodyandResponse(
-            PostWithObjectBody
-                .builder()
-                .string("string")
-                .integer(1)
-                .nestedObject(
-                    ObjectWithOptionalField
-                        .builder()
+        client.inlinedRequests()
+                .postWithObjectBodyandResponse(PostWithObjectBody.builder()
                         .string("string")
                         .integer(1)
-                        .long_(1000000L)
-                        .double_(1.1)
-                        .bool(true)
-                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                        .date("2023-01-15")
-                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                        .base64("SGVsbG8gd29ybGQh".getBytes())
-                        .list(
-                            Optional.of(
-                                Arrays.asList("list", "list")
-                            )
-                        )
-                        .set(
-                            new HashSet<String>(
-                                Arrays.asList("set")
-                            )
-                        )
-                        .map(
-                            new HashMap<Integer, String>() {{
-                                put(1, "map");
-                            }}
-                        )
-                        .bigint(new BigInteger("1000000"))
-                        .build()
-                )
-                .build()
-        );
+                        .nestedObject(ObjectWithOptionalField.builder()
+                                .string("string")
+                                .integer(1)
+                                .long_(1000000L)
+                                .double_(1.1)
+                                .bool(true)
+                                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                .date("2023-01-15")
+                                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                .base64("SGVsbG8gd29ybGQh".getBytes())
+                                .list(Optional.of(Arrays.asList("list", "list")))
+                                .set(new HashSet<String>(Arrays.asList("set")))
+                                .map(new HashMap<Integer, String>() {
+                                    {
+                                        put(1, "map");
+                                    }
+                                })
+                                .bigint(new BigInteger("1000000"))
+                                .build())
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example46.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example46.java
index a0551f5a9..6962cc07f 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example46.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example46.java
@@ -5,14 +5,15 @@ import java.util.HashMap;
 
 public class Example46 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.noAuth().postWithNoAuth(new 
-        HashMap<String, Object>() {{put("key", "value");
-        }});
+        client.noAuth().postWithNoAuth(new HashMap<String, Object>() {
+            {
+                put("key", "value");
+            }
+        });
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example47.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example47.java
index c683ff279..00bdb9e88 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example47.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example47.java
@@ -5,14 +5,15 @@ import java.util.HashMap;
 
 public class Example47 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.noAuth().postWithNoAuth(new 
-        HashMap<String, Object>() {{put("key", "value");
-        }});
+        client.noAuth().postWithNoAuth(new HashMap<String, Object>() {
+            {
+                put("key", "value");
+            }
+        });
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example48.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example48.java
index 30e6d8646..a0eb19979 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example48.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example48.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example48 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.noReqBody().getWithNoRequestBody();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example49.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example49.java
index 71d4b2fd2..e3d5957f4 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example49.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example49.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example49 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.noReqBody().postWithNoRequestBody();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example5.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example5.java
index c12a34f09..9079b06ae 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example5.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example5.java
@@ -6,19 +6,15 @@ import java.util.HashMap;
 
 public class Example5 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnMapOfPrimToObject(
-            new HashMap<String, ObjectWithRequiredField>() {{
-                put("string", ObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .build());
-            }}
-        );
+        client.endpoints().container().getAndReturnMapOfPrimToObject(new HashMap<String, ObjectWithRequiredField>() {
+            {
+                put("string", ObjectWithRequiredField.builder().string("string").build());
+            }
+        });
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example50.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example50.java
index b24bb60cd..cf78aa61f 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example50.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example50.java
@@ -5,19 +5,16 @@ import com.seed.exhaustive.resources.reqwithheaders.requests.ReqWithHeaders;
 
 public class Example50 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.reqWithHeaders().getWithCustomHeader(
-            ReqWithHeaders
-                .builder()
-                .xTestServiceHeader("X-TEST-SERVICE-HEADER")
-                .xTestEndpointHeader("X-TEST-ENDPOINT-HEADER")
-                .body("string")
-                .build()
-        );
+        client.reqWithHeaders()
+                .getWithCustomHeader(ReqWithHeaders.builder()
+                        .xTestServiceHeader("X-TEST-SERVICE-HEADER")
+                        .xTestEndpointHeader("X-TEST-ENDPOINT-HEADER")
+                        .body("string")
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example6.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example6.java
index bd2b74555..2f68b62f6 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example6.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example6.java
@@ -6,19 +6,14 @@ import java.util.Optional;
 
 public class Example6 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnOptional(
-            Optional.of(
-                ObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .build()
-            )
-        );
+        client.endpoints()
+                .container()
+                .getAndReturnOptional(Optional.of(
+                        ObjectWithRequiredField.builder().string("string").build()));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example7.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example7.java
index 0291d9e98..cf7454bb9 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example7.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example7.java
@@ -12,41 +12,31 @@ import java.util.UUID;
 
 public class Example7 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().contentType().postJsonPatchContentType(
-            ObjectWithOptionalField
-                .builder()
-                .string("string")
-                .integer(1)
-                .long_(1000000L)
-                .double_(1.1)
-                .bool(true)
-                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                .date("2023-01-15")
-                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                .base64("SGVsbG8gd29ybGQh".getBytes())
-                .list(
-                    Optional.of(
-                        Arrays.asList("list", "list")
-                    )
-                )
-                .set(
-                    new HashSet<String>(
-                        Arrays.asList("set")
-                    )
-                )
-                .map(
-                    new HashMap<Integer, String>() {{
-                        put(1, "map");
-                    }}
-                )
-                .bigint(new BigInteger("1000000"))
-                .build()
-        );
+        client.endpoints()
+                .contentType()
+                .postJsonPatchContentType(ObjectWithOptionalField.builder()
+                        .string("string")
+                        .integer(1)
+                        .long_(1000000L)
+                        .double_(1.1)
+                        .bool(true)
+                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                        .date("2023-01-15")
+                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                        .list(Optional.of(Arrays.asList("list", "list")))
+                        .set(new HashSet<String>(Arrays.asList("set")))
+                        .map(new HashMap<Integer, String>() {
+                            {
+                                put(1, "map");
+                            }
+                        })
+                        .bigint(new BigInteger("1000000"))
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example8.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example8.java
index 90f2dd5af..f5d0bd432 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example8.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example8.java
@@ -12,41 +12,31 @@ import java.util.UUID;
 
 public class Example8 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().contentType().postJsonPatchContentWithCharsetType(
-            ObjectWithOptionalField
-                .builder()
-                .string("string")
-                .integer(1)
-                .long_(1000000L)
-                .double_(1.1)
-                .bool(true)
-                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                .date("2023-01-15")
-                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                .base64("SGVsbG8gd29ybGQh".getBytes())
-                .list(
-                    Optional.of(
-                        Arrays.asList("list", "list")
-                    )
-                )
-                .set(
-                    new HashSet<String>(
-                        Arrays.asList("set")
-                    )
-                )
-                .map(
-                    new HashMap<Integer, String>() {{
-                        put(1, "map");
-                    }}
-                )
-                .bigint(new BigInteger("1000000"))
-                .build()
-        );
+        client.endpoints()
+                .contentType()
+                .postJsonPatchContentWithCharsetType(ObjectWithOptionalField.builder()
+                        .string("string")
+                        .integer(1)
+                        .long_(1000000L)
+                        .double_(1.1)
+                        .bool(true)
+                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                        .date("2023-01-15")
+                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                        .list(Optional.of(Arrays.asList("list", "list")))
+                        .set(new HashSet<String>(Arrays.asList("set")))
+                        .map(new HashMap<Integer, String>() {
+                            {
+                                put(1, "map");
+                            }
+                        })
+                        .bigint(new BigInteger("1000000"))
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example9.java b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example9.java
index 3fe41ffff..aaa251989 100644
--- a/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example9.java
+++ b/seed/java-sdk/exhaustive/custom-dependency/src/main/java/com/snippets/Example9.java
@@ -5,12 +5,11 @@ import com.seed.exhaustive.resources.types.enum_.types.WeatherReport;
 
 public class Example9 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().enum_().getAndReturnEnum(WeatherReport.SUNNY);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/README.md b/seed/java-sdk/exhaustive/flat-package-layout/README.md
index e529f3c15..154a6763a 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/README.md
+++ b/seed/java-sdk/exhaustive/flat-package-layout/README.md
@@ -77,9 +77,9 @@ When the API returns a non-success status code (4xx or 5xx response), an API exc
 ```java
 import com.seed.exhaustive.core.SeedExhaustiveApiException;
 
-try {
+try{
     client.endpoints().container().getAndReturnListOfPrimitives(...);
-} catch (SeedExhaustiveApiException e) {
+} catch (SeedExhaustiveApiException e){
     // Do something with the API exception...
 }
 ```
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/snippet.json b/seed/java-sdk/exhaustive/flat-package-layout/snippet.json
index 36152f118..9b06f7fd2 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/snippet.json
+++ b/seed/java-sdk/exhaustive/flat-package-layout/snippet.json
@@ -14,7 +14,7 @@
             }
         },
         {
-            "example_identifier": "c7ab231f",
+            "example_identifier": "adc277bf",
             "id": {
                 "method": "POST",
                 "path": "/container/list-of-objects",
@@ -40,7 +40,7 @@
             }
         },
         {
-            "example_identifier": "317bc7db",
+            "example_identifier": "c6fcb509",
             "id": {
                 "method": "POST",
                 "path": "/container/set-of-objects",
@@ -66,7 +66,7 @@
             }
         },
         {
-            "example_identifier": "65dd09b3",
+            "example_identifier": "55acfd1",
             "id": {
                 "method": "POST",
                 "path": "/container/map-prim-to-object",
@@ -79,7 +79,7 @@
             }
         },
         {
-            "example_identifier": "8e7f59d7",
+            "example_identifier": "6344cc63",
             "id": {
                 "method": "POST",
                 "path": "/container/opt-objects",
@@ -92,7 +92,7 @@
             }
         },
         {
-            "example_identifier": "26c4b3fc",
+            "example_identifier": "dab60b6f",
             "id": {
                 "method": "POST",
                 "path": "/foo/bar",
@@ -105,7 +105,7 @@
             }
         },
         {
-            "example_identifier": "26c4b3fc",
+            "example_identifier": "dab60b6f",
             "id": {
                 "method": "POST",
                 "path": "/foo/baz",
@@ -144,7 +144,7 @@
             }
         },
         {
-            "example_identifier": "7cff6b96",
+            "example_identifier": "bb5ed0ec",
             "id": {
                 "method": "POST",
                 "path": "/http-methods",
@@ -157,7 +157,7 @@
             }
         },
         {
-            "example_identifier": "4490d50d",
+            "example_identifier": "cd2a85b",
             "id": {
                 "method": "PUT",
                 "path": "/http-methods/{id}",
@@ -170,7 +170,7 @@
             }
         },
         {
-            "example_identifier": "f717d12e",
+            "example_identifier": "29f14718",
             "id": {
                 "method": "PATCH",
                 "path": "/http-methods/{id}",
@@ -196,7 +196,7 @@
             }
         },
         {
-            "example_identifier": "1c24712d",
+            "example_identifier": "a69fd89f",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-with-optional-field",
@@ -209,7 +209,7 @@
             }
         },
         {
-            "example_identifier": "e52b6f07",
+            "example_identifier": "db05d70d",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-with-required-field",
@@ -222,7 +222,7 @@
             }
         },
         {
-            "example_identifier": "a15fedf3",
+            "example_identifier": "f56a46bf",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-with-map-of-map",
@@ -235,7 +235,7 @@
             }
         },
         {
-            "example_identifier": "e346b73f",
+            "example_identifier": "45543f",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-nested-with-optional-field",
@@ -248,7 +248,7 @@
             }
         },
         {
-            "example_identifier": "83d00ee4",
+            "example_identifier": "a61a451c",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-nested-with-required-field/{string}",
@@ -261,7 +261,7 @@
             }
         },
         {
-            "example_identifier": "279f6202",
+            "example_identifier": "25673284",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-nested-with-required-field-list",
@@ -495,7 +495,7 @@
             }
         },
         {
-            "example_identifier": "3333808b",
+            "example_identifier": "889b814e",
             "id": {
                 "method": "PUT",
                 "path": "/{id}",
@@ -508,7 +508,7 @@
             }
         },
         {
-            "example_identifier": "9962a07b",
+            "example_identifier": "d3cd01af",
             "id": {
                 "method": "POST",
                 "path": "/union",
@@ -573,7 +573,7 @@
             }
         },
         {
-            "example_identifier": "a939925e",
+            "example_identifier": "8afb875f",
             "id": {
                 "method": "POST",
                 "path": "/req-bodies/object",
@@ -586,7 +586,7 @@
             }
         },
         {
-            "example_identifier": "74fa564b",
+            "example_identifier": "24e4c794",
             "id": {
                 "method": "POST",
                 "path": "/req-bodies/object",
@@ -612,7 +612,7 @@
             }
         },
         {
-            "example_identifier": "4ca6cb0d",
+            "example_identifier": "fd23fcee",
             "id": {
                 "method": "POST",
                 "path": "/no-auth",
@@ -625,7 +625,7 @@
             }
         },
         {
-            "example_identifier": "f825134f",
+            "example_identifier": "9e112462",
             "id": {
                 "method": "GET",
                 "path": "/no-req-body",
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example0.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example0.java
index 5ba38de7a..83f3e6605 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example0.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example0.java
@@ -5,14 +5,11 @@ import java.util.Arrays;
 
 public class Example0 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnListOfPrimitives(
-            Arrays.asList("string", "string")
-        );
+        client.endpoints().container().getAndReturnListOfPrimitives(Arrays.asList("string", "string"));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example1.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example1.java
index 8e2c7286b..c66eda856 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example1.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example1.java
@@ -6,23 +6,15 @@ import java.util.Arrays;
 
 public class Example1 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnListOfObjects(
-            Arrays.asList(
-                ObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .build(),
-                ObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .build()
-            )
-        );
+        client.endpoints()
+                .container()
+                .getAndReturnListOfObjects(Arrays.asList(
+                        ObjectWithRequiredField.builder().string("string").build(),
+                        ObjectWithRequiredField.builder().string("string").build()));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example10.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example10.java
index 50f0858a6..c586f208d 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example10.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example10.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example10 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().httpMethods().testGet("id");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example11.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example11.java
index 6bdea5043..634e0eaa4 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example11.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example11.java
@@ -5,17 +5,13 @@ import com.seed.exhaustive.types.types.ObjectWithRequiredField;
 
 public class Example11 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().httpMethods().testPost(
-            ObjectWithRequiredField
-                .builder()
-                .string("string")
-                .build()
-        );
+        client.endpoints()
+                .httpMethods()
+                .testPost(ObjectWithRequiredField.builder().string("string").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example12.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example12.java
index dafc14464..1ed8b7977 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example12.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example12.java
@@ -5,18 +5,14 @@ import com.seed.exhaustive.types.types.ObjectWithRequiredField;
 
 public class Example12 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().httpMethods().testPut(
-            "id",
-            ObjectWithRequiredField
-                .builder()
-                .string("string")
-                .build()
-        );
+        client.endpoints()
+                .httpMethods()
+                .testPut(
+                        "id", ObjectWithRequiredField.builder().string("string").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example13.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example13.java
index 44a8eaae9..b48e4b3f1 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example13.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example13.java
@@ -12,42 +12,33 @@ import java.util.UUID;
 
 public class Example13 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().httpMethods().testPatch(
-            "id",
-            ObjectWithOptionalField
-                .builder()
-                .string("string")
-                .integer(1)
-                .long_(1000000L)
-                .double_(1.1)
-                .bool(true)
-                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                .date("2023-01-15")
-                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                .base64("SGVsbG8gd29ybGQh".getBytes())
-                .list(
-                    Optional.of(
-                        Arrays.asList("list", "list")
-                    )
-                )
-                .set(
-                    new HashSet<String>(
-                        Arrays.asList("set")
-                    )
-                )
-                .map(
-                    new HashMap<Integer, String>() {{
-                        put(1, "map");
-                    }}
-                )
-                .bigint(new BigInteger("1000000"))
-                .build()
-        );
+        client.endpoints()
+                .httpMethods()
+                .testPatch(
+                        "id",
+                        ObjectWithOptionalField.builder()
+                                .string("string")
+                                .integer(1)
+                                .long_(1000000L)
+                                .double_(1.1)
+                                .bool(true)
+                                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                .date("2023-01-15")
+                                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                .base64("SGVsbG8gd29ybGQh".getBytes())
+                                .list(Optional.of(Arrays.asList("list", "list")))
+                                .set(new HashSet<String>(Arrays.asList("set")))
+                                .map(new HashMap<Integer, String>() {
+                                    {
+                                        put(1, "map");
+                                    }
+                                })
+                                .bigint(new BigInteger("1000000"))
+                                .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example14.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example14.java
index 453917942..9818c6c8a 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example14.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example14.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example14 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().httpMethods().testDelete("id");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example15.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example15.java
index b2ae13701..9e0d4c964 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example15.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example15.java
@@ -12,41 +12,31 @@ import java.util.UUID;
 
 public class Example15 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnWithOptionalField(
-            ObjectWithOptionalField
-                .builder()
-                .string("string")
-                .integer(1)
-                .long_(1000000L)
-                .double_(1.1)
-                .bool(true)
-                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                .date("2023-01-15")
-                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                .base64("SGVsbG8gd29ybGQh".getBytes())
-                .list(
-                    Optional.of(
-                        Arrays.asList("list", "list")
-                    )
-                )
-                .set(
-                    new HashSet<String>(
-                        Arrays.asList("set")
-                    )
-                )
-                .map(
-                    new HashMap<Integer, String>() {{
-                        put(1, "map");
-                    }}
-                )
-                .bigint(new BigInteger("1000000"))
-                .build()
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnWithOptionalField(ObjectWithOptionalField.builder()
+                        .string("string")
+                        .integer(1)
+                        .long_(1000000L)
+                        .double_(1.1)
+                        .bool(true)
+                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                        .date("2023-01-15")
+                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                        .list(Optional.of(Arrays.asList("list", "list")))
+                        .set(new HashSet<String>(Arrays.asList("set")))
+                        .map(new HashMap<Integer, String>() {
+                            {
+                                put(1, "map");
+                            }
+                        })
+                        .bigint(new BigInteger("1000000"))
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example16.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example16.java
index 55e439ab1..1e7dd94ad 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example16.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example16.java
@@ -5,17 +5,14 @@ import com.seed.exhaustive.types.types.ObjectWithRequiredField;
 
 public class Example16 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnWithRequiredField(
-            ObjectWithRequiredField
-                .builder()
-                .string("string")
-                .build()
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnWithRequiredField(
+                        ObjectWithRequiredField.builder().string("string").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example17.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example17.java
index 8ded76183..56f6bd240 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example17.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example17.java
@@ -7,23 +7,23 @@ import java.util.Map;
 
 public class Example17 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnWithMapOfMap(
-            ObjectWithMapOfMap
-                .builder()
-                .map(
-                    new HashMap<String, Map<String, String>>() {{
-                        put("map", new HashMap<String, String>() {{
-                            put("map", "map");
-                        }});
-                    }}
-                )
-                .build()
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnWithMapOfMap(ObjectWithMapOfMap.builder()
+                        .map(new HashMap<String, Map<String, String>>() {
+                            {
+                                put("map", new HashMap<String, String>() {
+                                    {
+                                        put("map", "map");
+                                    }
+                                });
+                            }
+                        })
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example18.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example18.java
index b3bcf086b..6ed1a6f9d 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example18.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example18.java
@@ -13,47 +13,34 @@ import java.util.UUID;
 
 public class Example18 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnNestedWithOptionalField(
-            NestedObjectWithOptionalField
-                .builder()
-                .string("string")
-                .nestedObject(
-                    ObjectWithOptionalField
-                        .builder()
+        client.endpoints()
+                .object()
+                .getAndReturnNestedWithOptionalField(NestedObjectWithOptionalField.builder()
                         .string("string")
-                        .integer(1)
-                        .long_(1000000L)
-                        .double_(1.1)
-                        .bool(true)
-                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                        .date("2023-01-15")
-                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                        .base64("SGVsbG8gd29ybGQh".getBytes())
-                        .list(
-                            Optional.of(
-                                Arrays.asList("list", "list")
-                            )
-                        )
-                        .set(
-                            new HashSet<String>(
-                                Arrays.asList("set")
-                            )
-                        )
-                        .map(
-                            new HashMap<Integer, String>() {{
-                                put(1, "map");
-                            }}
-                        )
-                        .bigint(new BigInteger("1000000"))
-                        .build()
-                )
-                .build()
-        );
+                        .nestedObject(ObjectWithOptionalField.builder()
+                                .string("string")
+                                .integer(1)
+                                .long_(1000000L)
+                                .double_(1.1)
+                                .bool(true)
+                                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                .date("2023-01-15")
+                                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                .base64("SGVsbG8gd29ybGQh".getBytes())
+                                .list(Optional.of(Arrays.asList("list", "list")))
+                                .set(new HashSet<String>(Arrays.asList("set")))
+                                .map(new HashMap<Integer, String>() {
+                                    {
+                                        put(1, "map");
+                                    }
+                                })
+                                .bigint(new BigInteger("1000000"))
+                                .build())
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example19.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example19.java
index 93141ccc8..358d3b5de 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example19.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example19.java
@@ -13,48 +13,36 @@ import java.util.UUID;
 
 public class Example19 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnNestedWithRequiredField(
-            "string",
-            NestedObjectWithRequiredField
-                .builder()
-                .string("string")
-                .nestedObject(
-                    ObjectWithOptionalField
-                        .builder()
-                        .string("string")
-                        .integer(1)
-                        .long_(1000000L)
-                        .double_(1.1)
-                        .bool(true)
-                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                        .date("2023-01-15")
-                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                        .base64("SGVsbG8gd29ybGQh".getBytes())
-                        .list(
-                            Optional.of(
-                                Arrays.asList("list", "list")
-                            )
-                        )
-                        .set(
-                            new HashSet<String>(
-                                Arrays.asList("set")
-                            )
-                        )
-                        .map(
-                            new HashMap<Integer, String>() {{
-                                put(1, "map");
-                            }}
-                        )
-                        .bigint(new BigInteger("1000000"))
-                        .build()
-                )
-                .build()
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnNestedWithRequiredField(
+                        "string",
+                        NestedObjectWithRequiredField.builder()
+                                .string("string")
+                                .nestedObject(ObjectWithOptionalField.builder()
+                                        .string("string")
+                                        .integer(1)
+                                        .long_(1000000L)
+                                        .double_(1.1)
+                                        .bool(true)
+                                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                        .date("2023-01-15")
+                                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                                        .list(Optional.of(Arrays.asList("list", "list")))
+                                        .set(new HashSet<String>(Arrays.asList("set")))
+                                        .map(new HashMap<Integer, String>() {
+                                            {
+                                                put(1, "map");
+                                            }
+                                        })
+                                        .bigint(new BigInteger("1000000"))
+                                        .build())
+                                .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example2.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example2.java
index 3f0f7c326..f94a69e21 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example2.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example2.java
@@ -6,16 +6,11 @@ import java.util.HashSet;
 
 public class Example2 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnSetOfPrimitives(
-            new HashSet<String>(
-                Arrays.asList("string")
-            )
-        );
+        client.endpoints().container().getAndReturnSetOfPrimitives(new HashSet<String>(Arrays.asList("string")));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example20.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example20.java
index 2a70b8e7e..97bb3b6be 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example20.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example20.java
@@ -13,83 +13,57 @@ import java.util.UUID;
 
 public class Example20 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnNestedWithRequiredFieldAsList(
-            Arrays.asList(
-                NestedObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .nestedObject(
-                        ObjectWithOptionalField
-                            .builder()
-                            .string("string")
-                            .integer(1)
-                            .long_(1000000L)
-                            .double_(1.1)
-                            .bool(true)
-                            .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                            .date("2023-01-15")
-                            .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                            .base64("SGVsbG8gd29ybGQh".getBytes())
-                            .list(
-                                Optional.of(
-                                    Arrays.asList("list", "list")
-                                )
-                            )
-                            .set(
-                                new HashSet<String>(
-                                    Arrays.asList("set")
-                                )
-                            )
-                            .map(
-                                new HashMap<Integer, String>() {{
-                                    put(1, "map");
-                                }}
-                            )
-                            .bigint(new BigInteger("1000000"))
-                            .build()
-                    )
-                    .build(),
-                NestedObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .nestedObject(
-                        ObjectWithOptionalField
-                            .builder()
-                            .string("string")
-                            .integer(1)
-                            .long_(1000000L)
-                            .double_(1.1)
-                            .bool(true)
-                            .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                            .date("2023-01-15")
-                            .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                            .base64("SGVsbG8gd29ybGQh".getBytes())
-                            .list(
-                                Optional.of(
-                                    Arrays.asList("list", "list")
-                                )
-                            )
-                            .set(
-                                new HashSet<String>(
-                                    Arrays.asList("set")
-                                )
-                            )
-                            .map(
-                                new HashMap<Integer, String>() {{
-                                    put(1, "map");
-                                }}
-                            )
-                            .bigint(new BigInteger("1000000"))
-                            .build()
-                    )
-                    .build()
-            )
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnNestedWithRequiredFieldAsList(Arrays.asList(
+                        NestedObjectWithRequiredField.builder()
+                                .string("string")
+                                .nestedObject(ObjectWithOptionalField.builder()
+                                        .string("string")
+                                        .integer(1)
+                                        .long_(1000000L)
+                                        .double_(1.1)
+                                        .bool(true)
+                                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                        .date("2023-01-15")
+                                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                                        .list(Optional.of(Arrays.asList("list", "list")))
+                                        .set(new HashSet<String>(Arrays.asList("set")))
+                                        .map(new HashMap<Integer, String>() {
+                                            {
+                                                put(1, "map");
+                                            }
+                                        })
+                                        .bigint(new BigInteger("1000000"))
+                                        .build())
+                                .build(),
+                        NestedObjectWithRequiredField.builder()
+                                .string("string")
+                                .nestedObject(ObjectWithOptionalField.builder()
+                                        .string("string")
+                                        .integer(1)
+                                        .long_(1000000L)
+                                        .double_(1.1)
+                                        .bool(true)
+                                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                        .date("2023-01-15")
+                                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                                        .list(Optional.of(Arrays.asList("list", "list")))
+                                        .set(new HashSet<String>(Arrays.asList("set")))
+                                        .map(new HashMap<Integer, String>() {
+                                            {
+                                                put(1, "map");
+                                            }
+                                        })
+                                        .bigint(new BigInteger("1000000"))
+                                        .build())
+                                .build()));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example21.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example21.java
index 40d13c1d3..488c2d0e5 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example21.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example21.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example21 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().params().getWithPath("param");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example22.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example22.java
index a26bffd38..38f73d142 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example22.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example22.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example22 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().params().getWithPath("param");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example23.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example23.java
index 26bfd0b8f..bc21c09de 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example23.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example23.java
@@ -5,18 +5,13 @@ import com.seed.exhaustive.endpoints.types.GetWithQuery;
 
 public class Example23 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().params().getWithQuery(
-            GetWithQuery
-                .builder()
-                .query("query")
-                .number(1)
-                .build()
-        );
+        client.endpoints()
+                .params()
+                .getWithQuery(GetWithQuery.builder().query("query").number(1).build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example24.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example24.java
index 1f756ec6a..95852a669 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example24.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example24.java
@@ -5,18 +5,13 @@ import com.seed.exhaustive.endpoints.types.GetWithQuery;
 
 public class Example24 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().params().getWithQuery(
-            GetWithQuery
-                .builder()
-                .query("query")
-                .number(1)
-                .build()
-        );
+        client.endpoints()
+                .params()
+                .getWithQuery(GetWithQuery.builder().query("query").number(1).build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example25.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example25.java
index 89aa223a0..1da17c097 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example25.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example25.java
@@ -5,18 +5,14 @@ import com.seed.exhaustive.endpoints.types.GetWithPathAndQuery;
 
 public class Example25 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().params().getWithPathAndQuery(
-            "param",
-            GetWithPathAndQuery
-                .builder()
-                .query("query")
-                .build()
-        );
+        client.endpoints()
+                .params()
+                .getWithPathAndQuery(
+                        "param", GetWithPathAndQuery.builder().query("query").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example26.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example26.java
index 99f1db376..414a36e5c 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example26.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example26.java
@@ -5,18 +5,14 @@ import com.seed.exhaustive.endpoints.types.GetWithPathAndQuery;
 
 public class Example26 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().params().getWithPathAndQuery(
-            "param",
-            GetWithPathAndQuery
-                .builder()
-                .query("query")
-                .build()
-        );
+        client.endpoints()
+                .params()
+                .getWithPathAndQuery(
+                        "param", GetWithPathAndQuery.builder().query("query").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example27.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example27.java
index b5a6138c3..489ca693a 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example27.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example27.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example27 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().params().modifyWithPath("param", "string");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example28.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example28.java
index cd62bb44b..c24788921 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example28.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example28.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example28 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().params().modifyWithPath("param", "string");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example29.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example29.java
index d1f89066c..56034ac43 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example29.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example29.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example29 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnString("string");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example3.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example3.java
index 2012a8882..6ce254a34 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example3.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example3.java
@@ -7,21 +7,14 @@ import java.util.HashSet;
 
 public class Example3 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnSetOfObjects(
-            new HashSet<ObjectWithRequiredField>(
-                Arrays.asList(
-                    ObjectWithRequiredField
-                        .builder()
-                        .string("string")
-                        .build()
-                )
-            )
-        );
+        client.endpoints()
+                .container()
+                .getAndReturnSetOfObjects(new HashSet<ObjectWithRequiredField>(Arrays.asList(
+                        ObjectWithRequiredField.builder().string("string").build())));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example30.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example30.java
index 48576c9eb..0940d379f 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example30.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example30.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example30 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnInt(1);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example31.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example31.java
index f425626bd..af14c7d42 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example31.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example31.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example31 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnLong(1000000L);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example32.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example32.java
index 5b310e6f6..fcccad7ba 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example32.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example32.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example32 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnDouble(1.1);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example33.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example33.java
index f0faab861..3b12dc229 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example33.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example33.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example33 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnBool(true);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example34.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example34.java
index 184f6d802..7bb19c117 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example34.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example34.java
@@ -5,12 +5,11 @@ import java.time.OffsetDateTime;
 
 public class Example34 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnDatetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example35.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example35.java
index b0918ebfb..a4aa2892d 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example35.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example35.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example35 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnDate("2023-01-15");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example36.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example36.java
index 2c1f63e36..8be3d6e88 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example36.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example36.java
@@ -5,12 +5,11 @@ import java.util.UUID;
 
 public class Example36 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnUuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example37.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example37.java
index ec6232ec0..2324c032c 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example37.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example37.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example37 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnBase64("SGVsbG8gd29ybGQh".getBytes());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example38.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example38.java
index 95252cd08..fe1a93b4c 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example38.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example38.java
@@ -5,17 +5,11 @@ import com.seed.exhaustive.endpoints.types.PutRequest;
 
 public class Example38 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().put().add(
-            "id",
-            PutRequest
-                .builder()
-                .build()
-        );
+        client.endpoints().put().add("id", PutRequest.builder().build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example39.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example39.java
index 8f4130711..a3e63366d 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example39.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example39.java
@@ -6,20 +6,14 @@ import com.seed.exhaustive.types.types.Dog;
 
 public class Example39 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().union().getAndReturnUnion(
-            Animal.dog(
-                Dog
-                    .builder()
-                    .name("name")
-                    .likesToWoof(true)
-                    .build()
-            )
-        );
+        client.endpoints()
+                .union()
+                .getAndReturnUnion(
+                        Animal.dog(Dog.builder().name("name").likesToWoof(true).build()));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example4.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example4.java
index 4f92f6969..d42879d90 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example4.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example4.java
@@ -5,16 +5,15 @@ import java.util.HashMap;
 
 public class Example4 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnMapPrimToPrim(
-            new HashMap<String, String>() {{
+        client.endpoints().container().getAndReturnMapPrimToPrim(new HashMap<String, String>() {
+            {
                 put("string", "string");
-            }}
-        );
+            }
+        });
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example40.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example40.java
index 2fdd43ea4..1dbdaae0b 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example40.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example40.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example40 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().urls().withMixedCase();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example41.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example41.java
index fa9ef5a95..e2c88b490 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example41.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example41.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example41 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().urls().noEndingSlash();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example42.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example42.java
index a24834b9b..3aaa108e8 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example42.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example42.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example42 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().urls().withEndingSlash();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example43.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example43.java
index 08f823b86..660e47992 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example43.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example43.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example43 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().urls().withUnderscores();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example44.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example44.java
index 23c89f63f..c2e3db06f 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example44.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example44.java
@@ -13,48 +13,34 @@ import java.util.UUID;
 
 public class Example44 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.inlinedRequests().postWithObjectBodyandResponse(
-            PostWithObjectBody
-                .builder()
-                .string("string")
-                .integer(1)
-                .nestedObject(
-                    ObjectWithOptionalField
-                        .builder()
+        client.inlinedRequests()
+                .postWithObjectBodyandResponse(PostWithObjectBody.builder()
                         .string("string")
                         .integer(1)
-                        .long_(1000000L)
-                        .double_(1.1)
-                        .bool(true)
-                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                        .date("2023-01-15")
-                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                        .base64("SGVsbG8gd29ybGQh".getBytes())
-                        .list(
-                            Optional.of(
-                                Arrays.asList("list", "list")
-                            )
-                        )
-                        .set(
-                            new HashSet<String>(
-                                Arrays.asList("set")
-                            )
-                        )
-                        .map(
-                            new HashMap<Integer, String>() {{
-                                put(1, "map");
-                            }}
-                        )
-                        .bigint(new BigInteger("1000000"))
-                        .build()
-                )
-                .build()
-        );
+                        .nestedObject(ObjectWithOptionalField.builder()
+                                .string("string")
+                                .integer(1)
+                                .long_(1000000L)
+                                .double_(1.1)
+                                .bool(true)
+                                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                .date("2023-01-15")
+                                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                .base64("SGVsbG8gd29ybGQh".getBytes())
+                                .list(Optional.of(Arrays.asList("list", "list")))
+                                .set(new HashSet<String>(Arrays.asList("set")))
+                                .map(new HashMap<Integer, String>() {
+                                    {
+                                        put(1, "map");
+                                    }
+                                })
+                                .bigint(new BigInteger("1000000"))
+                                .build())
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example45.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example45.java
index d325f4e7d..efd46c9ee 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example45.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example45.java
@@ -13,48 +13,34 @@ import java.util.UUID;
 
 public class Example45 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.inlinedRequests().postWithObjectBodyandResponse(
-            PostWithObjectBody
-                .builder()
-                .string("string")
-                .integer(1)
-                .nestedObject(
-                    ObjectWithOptionalField
-                        .builder()
+        client.inlinedRequests()
+                .postWithObjectBodyandResponse(PostWithObjectBody.builder()
                         .string("string")
                         .integer(1)
-                        .long_(1000000L)
-                        .double_(1.1)
-                        .bool(true)
-                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                        .date("2023-01-15")
-                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                        .base64("SGVsbG8gd29ybGQh".getBytes())
-                        .list(
-                            Optional.of(
-                                Arrays.asList("list", "list")
-                            )
-                        )
-                        .set(
-                            new HashSet<String>(
-                                Arrays.asList("set")
-                            )
-                        )
-                        .map(
-                            new HashMap<Integer, String>() {{
-                                put(1, "map");
-                            }}
-                        )
-                        .bigint(new BigInteger("1000000"))
-                        .build()
-                )
-                .build()
-        );
+                        .nestedObject(ObjectWithOptionalField.builder()
+                                .string("string")
+                                .integer(1)
+                                .long_(1000000L)
+                                .double_(1.1)
+                                .bool(true)
+                                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                .date("2023-01-15")
+                                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                .base64("SGVsbG8gd29ybGQh".getBytes())
+                                .list(Optional.of(Arrays.asList("list", "list")))
+                                .set(new HashSet<String>(Arrays.asList("set")))
+                                .map(new HashMap<Integer, String>() {
+                                    {
+                                        put(1, "map");
+                                    }
+                                })
+                                .bigint(new BigInteger("1000000"))
+                                .build())
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example46.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example46.java
index a0551f5a9..6962cc07f 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example46.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example46.java
@@ -5,14 +5,15 @@ import java.util.HashMap;
 
 public class Example46 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.noAuth().postWithNoAuth(new 
-        HashMap<String, Object>() {{put("key", "value");
-        }});
+        client.noAuth().postWithNoAuth(new HashMap<String, Object>() {
+            {
+                put("key", "value");
+            }
+        });
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example47.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example47.java
index c683ff279..00bdb9e88 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example47.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example47.java
@@ -5,14 +5,15 @@ import java.util.HashMap;
 
 public class Example47 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.noAuth().postWithNoAuth(new 
-        HashMap<String, Object>() {{put("key", "value");
-        }});
+        client.noAuth().postWithNoAuth(new HashMap<String, Object>() {
+            {
+                put("key", "value");
+            }
+        });
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example48.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example48.java
index 30e6d8646..a0eb19979 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example48.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example48.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example48 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.noReqBody().getWithNoRequestBody();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example49.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example49.java
index 71d4b2fd2..e3d5957f4 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example49.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example49.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example49 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.noReqBody().postWithNoRequestBody();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example5.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example5.java
index e9f19fd82..3951bd312 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example5.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example5.java
@@ -6,19 +6,15 @@ import java.util.HashMap;
 
 public class Example5 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnMapOfPrimToObject(
-            new HashMap<String, ObjectWithRequiredField>() {{
-                put("string", ObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .build());
-            }}
-        );
+        client.endpoints().container().getAndReturnMapOfPrimToObject(new HashMap<String, ObjectWithRequiredField>() {
+            {
+                put("string", ObjectWithRequiredField.builder().string("string").build());
+            }
+        });
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example50.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example50.java
index 89f58472e..de478c8c5 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example50.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example50.java
@@ -5,19 +5,16 @@ import com.seed.exhaustive.types.ReqWithHeaders;
 
 public class Example50 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.reqWithHeaders().getWithCustomHeader(
-            ReqWithHeaders
-                .builder()
-                .xTestServiceHeader("X-TEST-SERVICE-HEADER")
-                .xTestEndpointHeader("X-TEST-ENDPOINT-HEADER")
-                .body("string")
-                .build()
-        );
+        client.reqWithHeaders()
+                .getWithCustomHeader(ReqWithHeaders.builder()
+                        .xTestServiceHeader("X-TEST-SERVICE-HEADER")
+                        .xTestEndpointHeader("X-TEST-ENDPOINT-HEADER")
+                        .body("string")
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example6.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example6.java
index 34ba669ac..fd32315f1 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example6.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example6.java
@@ -6,19 +6,14 @@ import java.util.Optional;
 
 public class Example6 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnOptional(
-            Optional.of(
-                ObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .build()
-            )
-        );
+        client.endpoints()
+                .container()
+                .getAndReturnOptional(Optional.of(
+                        ObjectWithRequiredField.builder().string("string").build()));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example7.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example7.java
index 2956a8389..90440585a 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example7.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example7.java
@@ -12,41 +12,31 @@ import java.util.UUID;
 
 public class Example7 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().contentType().postJsonPatchContentType(
-            ObjectWithOptionalField
-                .builder()
-                .string("string")
-                .integer(1)
-                .long_(1000000L)
-                .double_(1.1)
-                .bool(true)
-                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                .date("2023-01-15")
-                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                .base64("SGVsbG8gd29ybGQh".getBytes())
-                .list(
-                    Optional.of(
-                        Arrays.asList("list", "list")
-                    )
-                )
-                .set(
-                    new HashSet<String>(
-                        Arrays.asList("set")
-                    )
-                )
-                .map(
-                    new HashMap<Integer, String>() {{
-                        put(1, "map");
-                    }}
-                )
-                .bigint(new BigInteger("1000000"))
-                .build()
-        );
+        client.endpoints()
+                .contentType()
+                .postJsonPatchContentType(ObjectWithOptionalField.builder()
+                        .string("string")
+                        .integer(1)
+                        .long_(1000000L)
+                        .double_(1.1)
+                        .bool(true)
+                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                        .date("2023-01-15")
+                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                        .list(Optional.of(Arrays.asList("list", "list")))
+                        .set(new HashSet<String>(Arrays.asList("set")))
+                        .map(new HashMap<Integer, String>() {
+                            {
+                                put(1, "map");
+                            }
+                        })
+                        .bigint(new BigInteger("1000000"))
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example8.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example8.java
index c645ebd72..2b7fa14b0 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example8.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example8.java
@@ -12,41 +12,31 @@ import java.util.UUID;
 
 public class Example8 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().contentType().postJsonPatchContentWithCharsetType(
-            ObjectWithOptionalField
-                .builder()
-                .string("string")
-                .integer(1)
-                .long_(1000000L)
-                .double_(1.1)
-                .bool(true)
-                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                .date("2023-01-15")
-                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                .base64("SGVsbG8gd29ybGQh".getBytes())
-                .list(
-                    Optional.of(
-                        Arrays.asList("list", "list")
-                    )
-                )
-                .set(
-                    new HashSet<String>(
-                        Arrays.asList("set")
-                    )
-                )
-                .map(
-                    new HashMap<Integer, String>() {{
-                        put(1, "map");
-                    }}
-                )
-                .bigint(new BigInteger("1000000"))
-                .build()
-        );
+        client.endpoints()
+                .contentType()
+                .postJsonPatchContentWithCharsetType(ObjectWithOptionalField.builder()
+                        .string("string")
+                        .integer(1)
+                        .long_(1000000L)
+                        .double_(1.1)
+                        .bool(true)
+                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                        .date("2023-01-15")
+                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                        .list(Optional.of(Arrays.asList("list", "list")))
+                        .set(new HashSet<String>(Arrays.asList("set")))
+                        .map(new HashMap<Integer, String>() {
+                            {
+                                put(1, "map");
+                            }
+                        })
+                        .bigint(new BigInteger("1000000"))
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example9.java b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example9.java
index 3213fdab7..443555fca 100644
--- a/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example9.java
+++ b/seed/java-sdk/exhaustive/flat-package-layout/src/main/java/com/snippets/Example9.java
@@ -5,12 +5,11 @@ import com.seed.exhaustive.types.types.WeatherReport;
 
 public class Example9 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().enum_().getAndReturnEnum(WeatherReport.SUNNY);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/README.md b/seed/java-sdk/exhaustive/no-custom-config/README.md
index e529f3c15..154a6763a 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/README.md
+++ b/seed/java-sdk/exhaustive/no-custom-config/README.md
@@ -77,9 +77,9 @@ When the API returns a non-success status code (4xx or 5xx response), an API exc
 ```java
 import com.seed.exhaustive.core.SeedExhaustiveApiException;
 
-try {
+try{
     client.endpoints().container().getAndReturnListOfPrimitives(...);
-} catch (SeedExhaustiveApiException e) {
+} catch (SeedExhaustiveApiException e){
     // Do something with the API exception...
 }
 ```
diff --git a/seed/java-sdk/exhaustive/no-custom-config/snippet.json b/seed/java-sdk/exhaustive/no-custom-config/snippet.json
index d8bb6f7f8..e45d2ab2e 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/snippet.json
+++ b/seed/java-sdk/exhaustive/no-custom-config/snippet.json
@@ -14,7 +14,7 @@
             }
         },
         {
-            "example_identifier": "c7ab231f",
+            "example_identifier": "adc277bf",
             "id": {
                 "method": "POST",
                 "path": "/container/list-of-objects",
@@ -40,7 +40,7 @@
             }
         },
         {
-            "example_identifier": "317bc7db",
+            "example_identifier": "c6fcb509",
             "id": {
                 "method": "POST",
                 "path": "/container/set-of-objects",
@@ -66,7 +66,7 @@
             }
         },
         {
-            "example_identifier": "65dd09b3",
+            "example_identifier": "55acfd1",
             "id": {
                 "method": "POST",
                 "path": "/container/map-prim-to-object",
@@ -79,7 +79,7 @@
             }
         },
         {
-            "example_identifier": "8e7f59d7",
+            "example_identifier": "6344cc63",
             "id": {
                 "method": "POST",
                 "path": "/container/opt-objects",
@@ -92,7 +92,7 @@
             }
         },
         {
-            "example_identifier": "26c4b3fc",
+            "example_identifier": "dab60b6f",
             "id": {
                 "method": "POST",
                 "path": "/foo/bar",
@@ -105,7 +105,7 @@
             }
         },
         {
-            "example_identifier": "26c4b3fc",
+            "example_identifier": "dab60b6f",
             "id": {
                 "method": "POST",
                 "path": "/foo/baz",
@@ -144,7 +144,7 @@
             }
         },
         {
-            "example_identifier": "7cff6b96",
+            "example_identifier": "bb5ed0ec",
             "id": {
                 "method": "POST",
                 "path": "/http-methods",
@@ -157,7 +157,7 @@
             }
         },
         {
-            "example_identifier": "4490d50d",
+            "example_identifier": "cd2a85b",
             "id": {
                 "method": "PUT",
                 "path": "/http-methods/{id}",
@@ -170,7 +170,7 @@
             }
         },
         {
-            "example_identifier": "f717d12e",
+            "example_identifier": "29f14718",
             "id": {
                 "method": "PATCH",
                 "path": "/http-methods/{id}",
@@ -196,7 +196,7 @@
             }
         },
         {
-            "example_identifier": "1c24712d",
+            "example_identifier": "a69fd89f",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-with-optional-field",
@@ -209,7 +209,7 @@
             }
         },
         {
-            "example_identifier": "e52b6f07",
+            "example_identifier": "db05d70d",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-with-required-field",
@@ -222,7 +222,7 @@
             }
         },
         {
-            "example_identifier": "a15fedf3",
+            "example_identifier": "f56a46bf",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-with-map-of-map",
@@ -235,7 +235,7 @@
             }
         },
         {
-            "example_identifier": "e346b73f",
+            "example_identifier": "45543f",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-nested-with-optional-field",
@@ -248,7 +248,7 @@
             }
         },
         {
-            "example_identifier": "83d00ee4",
+            "example_identifier": "a61a451c",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-nested-with-required-field/{string}",
@@ -261,7 +261,7 @@
             }
         },
         {
-            "example_identifier": "279f6202",
+            "example_identifier": "25673284",
             "id": {
                 "method": "POST",
                 "path": "/object/get-and-return-nested-with-required-field-list",
@@ -495,7 +495,7 @@
             }
         },
         {
-            "example_identifier": "3333808b",
+            "example_identifier": "889b814e",
             "id": {
                 "method": "PUT",
                 "path": "/{id}",
@@ -508,7 +508,7 @@
             }
         },
         {
-            "example_identifier": "9962a07b",
+            "example_identifier": "d3cd01af",
             "id": {
                 "method": "POST",
                 "path": "/union",
@@ -573,7 +573,7 @@
             }
         },
         {
-            "example_identifier": "a939925e",
+            "example_identifier": "8afb875f",
             "id": {
                 "method": "POST",
                 "path": "/req-bodies/object",
@@ -586,7 +586,7 @@
             }
         },
         {
-            "example_identifier": "74fa564b",
+            "example_identifier": "24e4c794",
             "id": {
                 "method": "POST",
                 "path": "/req-bodies/object",
@@ -612,7 +612,7 @@
             }
         },
         {
-            "example_identifier": "4ca6cb0d",
+            "example_identifier": "fd23fcee",
             "id": {
                 "method": "POST",
                 "path": "/no-auth",
@@ -625,7 +625,7 @@
             }
         },
         {
-            "example_identifier": "f825134f",
+            "example_identifier": "9e112462",
             "id": {
                 "method": "GET",
                 "path": "/no-req-body",
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example0.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example0.java
index 5ba38de7a..83f3e6605 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example0.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example0.java
@@ -5,14 +5,11 @@ import java.util.Arrays;
 
 public class Example0 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnListOfPrimitives(
-            Arrays.asList("string", "string")
-        );
+        client.endpoints().container().getAndReturnListOfPrimitives(Arrays.asList("string", "string"));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example1.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example1.java
index f42ce337e..3b6a3a7db 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example1.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example1.java
@@ -6,23 +6,15 @@ import java.util.Arrays;
 
 public class Example1 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnListOfObjects(
-            Arrays.asList(
-                ObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .build(),
-                ObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .build()
-            )
-        );
+        client.endpoints()
+                .container()
+                .getAndReturnListOfObjects(Arrays.asList(
+                        ObjectWithRequiredField.builder().string("string").build(),
+                        ObjectWithRequiredField.builder().string("string").build()));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example10.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example10.java
index 50f0858a6..c586f208d 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example10.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example10.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example10 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().httpMethods().testGet("id");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example11.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example11.java
index 328e3eb66..dae223a93 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example11.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example11.java
@@ -5,17 +5,13 @@ import com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;
 
 public class Example11 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().httpMethods().testPost(
-            ObjectWithRequiredField
-                .builder()
-                .string("string")
-                .build()
-        );
+        client.endpoints()
+                .httpMethods()
+                .testPost(ObjectWithRequiredField.builder().string("string").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example12.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example12.java
index a34a11839..9a0970b1f 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example12.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example12.java
@@ -5,18 +5,14 @@ import com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;
 
 public class Example12 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().httpMethods().testPut(
-            "id",
-            ObjectWithRequiredField
-                .builder()
-                .string("string")
-                .build()
-        );
+        client.endpoints()
+                .httpMethods()
+                .testPut(
+                        "id", ObjectWithRequiredField.builder().string("string").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example13.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example13.java
index f8ff03ad8..e06333892 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example13.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example13.java
@@ -12,42 +12,33 @@ import java.util.UUID;
 
 public class Example13 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().httpMethods().testPatch(
-            "id",
-            ObjectWithOptionalField
-                .builder()
-                .string("string")
-                .integer(1)
-                .long_(1000000L)
-                .double_(1.1)
-                .bool(true)
-                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                .date("2023-01-15")
-                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                .base64("SGVsbG8gd29ybGQh".getBytes())
-                .list(
-                    Optional.of(
-                        Arrays.asList("list", "list")
-                    )
-                )
-                .set(
-                    new HashSet<String>(
-                        Arrays.asList("set")
-                    )
-                )
-                .map(
-                    new HashMap<Integer, String>() {{
-                        put(1, "map");
-                    }}
-                )
-                .bigint(new BigInteger("1000000"))
-                .build()
-        );
+        client.endpoints()
+                .httpMethods()
+                .testPatch(
+                        "id",
+                        ObjectWithOptionalField.builder()
+                                .string("string")
+                                .integer(1)
+                                .long_(1000000L)
+                                .double_(1.1)
+                                .bool(true)
+                                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                .date("2023-01-15")
+                                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                .base64("SGVsbG8gd29ybGQh".getBytes())
+                                .list(Optional.of(Arrays.asList("list", "list")))
+                                .set(new HashSet<String>(Arrays.asList("set")))
+                                .map(new HashMap<Integer, String>() {
+                                    {
+                                        put(1, "map");
+                                    }
+                                })
+                                .bigint(new BigInteger("1000000"))
+                                .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example14.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example14.java
index 453917942..9818c6c8a 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example14.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example14.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example14 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().httpMethods().testDelete("id");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example15.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example15.java
index c86b187dc..d7c67adfa 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example15.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example15.java
@@ -12,41 +12,31 @@ import java.util.UUID;
 
 public class Example15 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnWithOptionalField(
-            ObjectWithOptionalField
-                .builder()
-                .string("string")
-                .integer(1)
-                .long_(1000000L)
-                .double_(1.1)
-                .bool(true)
-                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                .date("2023-01-15")
-                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                .base64("SGVsbG8gd29ybGQh".getBytes())
-                .list(
-                    Optional.of(
-                        Arrays.asList("list", "list")
-                    )
-                )
-                .set(
-                    new HashSet<String>(
-                        Arrays.asList("set")
-                    )
-                )
-                .map(
-                    new HashMap<Integer, String>() {{
-                        put(1, "map");
-                    }}
-                )
-                .bigint(new BigInteger("1000000"))
-                .build()
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnWithOptionalField(ObjectWithOptionalField.builder()
+                        .string("string")
+                        .integer(1)
+                        .long_(1000000L)
+                        .double_(1.1)
+                        .bool(true)
+                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                        .date("2023-01-15")
+                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                        .list(Optional.of(Arrays.asList("list", "list")))
+                        .set(new HashSet<String>(Arrays.asList("set")))
+                        .map(new HashMap<Integer, String>() {
+                            {
+                                put(1, "map");
+                            }
+                        })
+                        .bigint(new BigInteger("1000000"))
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example16.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example16.java
index dc2c12169..1ada40ac5 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example16.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example16.java
@@ -5,17 +5,14 @@ import com.seed.exhaustive.resources.types.object.types.ObjectWithRequiredField;
 
 public class Example16 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnWithRequiredField(
-            ObjectWithRequiredField
-                .builder()
-                .string("string")
-                .build()
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnWithRequiredField(
+                        ObjectWithRequiredField.builder().string("string").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example17.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example17.java
index 83c86d54b..eafec3277 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example17.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example17.java
@@ -7,23 +7,23 @@ import java.util.Map;
 
 public class Example17 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnWithMapOfMap(
-            ObjectWithMapOfMap
-                .builder()
-                .map(
-                    new HashMap<String, Map<String, String>>() {{
-                        put("map", new HashMap<String, String>() {{
-                            put("map", "map");
-                        }});
-                    }}
-                )
-                .build()
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnWithMapOfMap(ObjectWithMapOfMap.builder()
+                        .map(new HashMap<String, Map<String, String>>() {
+                            {
+                                put("map", new HashMap<String, String>() {
+                                    {
+                                        put("map", "map");
+                                    }
+                                });
+                            }
+                        })
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example18.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example18.java
index 682bf220e..d8e58fada 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example18.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example18.java
@@ -13,47 +13,34 @@ import java.util.UUID;
 
 public class Example18 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnNestedWithOptionalField(
-            NestedObjectWithOptionalField
-                .builder()
-                .string("string")
-                .nestedObject(
-                    ObjectWithOptionalField
-                        .builder()
+        client.endpoints()
+                .object()
+                .getAndReturnNestedWithOptionalField(NestedObjectWithOptionalField.builder()
                         .string("string")
-                        .integer(1)
-                        .long_(1000000L)
-                        .double_(1.1)
-                        .bool(true)
-                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                        .date("2023-01-15")
-                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                        .base64("SGVsbG8gd29ybGQh".getBytes())
-                        .list(
-                            Optional.of(
-                                Arrays.asList("list", "list")
-                            )
-                        )
-                        .set(
-                            new HashSet<String>(
-                                Arrays.asList("set")
-                            )
-                        )
-                        .map(
-                            new HashMap<Integer, String>() {{
-                                put(1, "map");
-                            }}
-                        )
-                        .bigint(new BigInteger("1000000"))
-                        .build()
-                )
-                .build()
-        );
+                        .nestedObject(ObjectWithOptionalField.builder()
+                                .string("string")
+                                .integer(1)
+                                .long_(1000000L)
+                                .double_(1.1)
+                                .bool(true)
+                                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                .date("2023-01-15")
+                                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                .base64("SGVsbG8gd29ybGQh".getBytes())
+                                .list(Optional.of(Arrays.asList("list", "list")))
+                                .set(new HashSet<String>(Arrays.asList("set")))
+                                .map(new HashMap<Integer, String>() {
+                                    {
+                                        put(1, "map");
+                                    }
+                                })
+                                .bigint(new BigInteger("1000000"))
+                                .build())
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example19.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example19.java
index 7f9814ee8..bafbb6852 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example19.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example19.java
@@ -13,48 +13,36 @@ import java.util.UUID;
 
 public class Example19 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnNestedWithRequiredField(
-            "string",
-            NestedObjectWithRequiredField
-                .builder()
-                .string("string")
-                .nestedObject(
-                    ObjectWithOptionalField
-                        .builder()
-                        .string("string")
-                        .integer(1)
-                        .long_(1000000L)
-                        .double_(1.1)
-                        .bool(true)
-                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                        .date("2023-01-15")
-                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                        .base64("SGVsbG8gd29ybGQh".getBytes())
-                        .list(
-                            Optional.of(
-                                Arrays.asList("list", "list")
-                            )
-                        )
-                        .set(
-                            new HashSet<String>(
-                                Arrays.asList("set")
-                            )
-                        )
-                        .map(
-                            new HashMap<Integer, String>() {{
-                                put(1, "map");
-                            }}
-                        )
-                        .bigint(new BigInteger("1000000"))
-                        .build()
-                )
-                .build()
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnNestedWithRequiredField(
+                        "string",
+                        NestedObjectWithRequiredField.builder()
+                                .string("string")
+                                .nestedObject(ObjectWithOptionalField.builder()
+                                        .string("string")
+                                        .integer(1)
+                                        .long_(1000000L)
+                                        .double_(1.1)
+                                        .bool(true)
+                                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                        .date("2023-01-15")
+                                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                                        .list(Optional.of(Arrays.asList("list", "list")))
+                                        .set(new HashSet<String>(Arrays.asList("set")))
+                                        .map(new HashMap<Integer, String>() {
+                                            {
+                                                put(1, "map");
+                                            }
+                                        })
+                                        .bigint(new BigInteger("1000000"))
+                                        .build())
+                                .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example2.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example2.java
index 3f0f7c326..f94a69e21 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example2.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example2.java
@@ -6,16 +6,11 @@ import java.util.HashSet;
 
 public class Example2 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnSetOfPrimitives(
-            new HashSet<String>(
-                Arrays.asList("string")
-            )
-        );
+        client.endpoints().container().getAndReturnSetOfPrimitives(new HashSet<String>(Arrays.asList("string")));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example20.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example20.java
index 916e5a63f..fca4925c9 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example20.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example20.java
@@ -13,83 +13,57 @@ import java.util.UUID;
 
 public class Example20 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().object().getAndReturnNestedWithRequiredFieldAsList(
-            Arrays.asList(
-                NestedObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .nestedObject(
-                        ObjectWithOptionalField
-                            .builder()
-                            .string("string")
-                            .integer(1)
-                            .long_(1000000L)
-                            .double_(1.1)
-                            .bool(true)
-                            .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                            .date("2023-01-15")
-                            .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                            .base64("SGVsbG8gd29ybGQh".getBytes())
-                            .list(
-                                Optional.of(
-                                    Arrays.asList("list", "list")
-                                )
-                            )
-                            .set(
-                                new HashSet<String>(
-                                    Arrays.asList("set")
-                                )
-                            )
-                            .map(
-                                new HashMap<Integer, String>() {{
-                                    put(1, "map");
-                                }}
-                            )
-                            .bigint(new BigInteger("1000000"))
-                            .build()
-                    )
-                    .build(),
-                NestedObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .nestedObject(
-                        ObjectWithOptionalField
-                            .builder()
-                            .string("string")
-                            .integer(1)
-                            .long_(1000000L)
-                            .double_(1.1)
-                            .bool(true)
-                            .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                            .date("2023-01-15")
-                            .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                            .base64("SGVsbG8gd29ybGQh".getBytes())
-                            .list(
-                                Optional.of(
-                                    Arrays.asList("list", "list")
-                                )
-                            )
-                            .set(
-                                new HashSet<String>(
-                                    Arrays.asList("set")
-                                )
-                            )
-                            .map(
-                                new HashMap<Integer, String>() {{
-                                    put(1, "map");
-                                }}
-                            )
-                            .bigint(new BigInteger("1000000"))
-                            .build()
-                    )
-                    .build()
-            )
-        );
+        client.endpoints()
+                .object()
+                .getAndReturnNestedWithRequiredFieldAsList(Arrays.asList(
+                        NestedObjectWithRequiredField.builder()
+                                .string("string")
+                                .nestedObject(ObjectWithOptionalField.builder()
+                                        .string("string")
+                                        .integer(1)
+                                        .long_(1000000L)
+                                        .double_(1.1)
+                                        .bool(true)
+                                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                        .date("2023-01-15")
+                                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                                        .list(Optional.of(Arrays.asList("list", "list")))
+                                        .set(new HashSet<String>(Arrays.asList("set")))
+                                        .map(new HashMap<Integer, String>() {
+                                            {
+                                                put(1, "map");
+                                            }
+                                        })
+                                        .bigint(new BigInteger("1000000"))
+                                        .build())
+                                .build(),
+                        NestedObjectWithRequiredField.builder()
+                                .string("string")
+                                .nestedObject(ObjectWithOptionalField.builder()
+                                        .string("string")
+                                        .integer(1)
+                                        .long_(1000000L)
+                                        .double_(1.1)
+                                        .bool(true)
+                                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                        .date("2023-01-15")
+                                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                                        .list(Optional.of(Arrays.asList("list", "list")))
+                                        .set(new HashSet<String>(Arrays.asList("set")))
+                                        .map(new HashMap<Integer, String>() {
+                                            {
+                                                put(1, "map");
+                                            }
+                                        })
+                                        .bigint(new BigInteger("1000000"))
+                                        .build())
+                                .build()));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example21.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example21.java
index 40d13c1d3..488c2d0e5 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example21.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example21.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example21 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().params().getWithPath("param");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example22.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example22.java
index a26bffd38..38f73d142 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example22.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example22.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example22 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().params().getWithPath("param");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example23.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example23.java
index 3e5d8f112..692ccb94f 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example23.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example23.java
@@ -5,18 +5,13 @@ import com.seed.exhaustive.resources.endpoints.params.requests.GetWithQuery;
 
 public class Example23 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().params().getWithQuery(
-            GetWithQuery
-                .builder()
-                .query("query")
-                .number(1)
-                .build()
-        );
+        client.endpoints()
+                .params()
+                .getWithQuery(GetWithQuery.builder().query("query").number(1).build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example24.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example24.java
index 49bd57e46..80f952ad9 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example24.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example24.java
@@ -5,18 +5,13 @@ import com.seed.exhaustive.resources.endpoints.params.requests.GetWithQuery;
 
 public class Example24 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().params().getWithQuery(
-            GetWithQuery
-                .builder()
-                .query("query")
-                .number(1)
-                .build()
-        );
+        client.endpoints()
+                .params()
+                .getWithQuery(GetWithQuery.builder().query("query").number(1).build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example25.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example25.java
index f97d4d477..a2965acfa 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example25.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example25.java
@@ -5,18 +5,14 @@ import com.seed.exhaustive.resources.endpoints.params.requests.GetWithPathAndQue
 
 public class Example25 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().params().getWithPathAndQuery(
-            "param",
-            GetWithPathAndQuery
-                .builder()
-                .query("query")
-                .build()
-        );
+        client.endpoints()
+                .params()
+                .getWithPathAndQuery(
+                        "param", GetWithPathAndQuery.builder().query("query").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example26.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example26.java
index d7379bbd3..a9bd63e4c 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example26.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example26.java
@@ -5,18 +5,14 @@ import com.seed.exhaustive.resources.endpoints.params.requests.GetWithPathAndQue
 
 public class Example26 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().params().getWithPathAndQuery(
-            "param",
-            GetWithPathAndQuery
-                .builder()
-                .query("query")
-                .build()
-        );
+        client.endpoints()
+                .params()
+                .getWithPathAndQuery(
+                        "param", GetWithPathAndQuery.builder().query("query").build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example27.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example27.java
index b5a6138c3..489ca693a 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example27.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example27.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example27 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().params().modifyWithPath("param", "string");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example28.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example28.java
index cd62bb44b..c24788921 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example28.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example28.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example28 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().params().modifyWithPath("param", "string");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example29.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example29.java
index d1f89066c..56034ac43 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example29.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example29.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example29 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnString("string");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example3.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example3.java
index d3337bad4..4b45d2e3b 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example3.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example3.java
@@ -7,21 +7,14 @@ import java.util.HashSet;
 
 public class Example3 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnSetOfObjects(
-            new HashSet<ObjectWithRequiredField>(
-                Arrays.asList(
-                    ObjectWithRequiredField
-                        .builder()
-                        .string("string")
-                        .build()
-                )
-            )
-        );
+        client.endpoints()
+                .container()
+                .getAndReturnSetOfObjects(new HashSet<ObjectWithRequiredField>(Arrays.asList(
+                        ObjectWithRequiredField.builder().string("string").build())));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example30.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example30.java
index 48576c9eb..0940d379f 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example30.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example30.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example30 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnInt(1);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example31.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example31.java
index f425626bd..af14c7d42 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example31.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example31.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example31 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnLong(1000000L);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example32.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example32.java
index 5b310e6f6..fcccad7ba 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example32.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example32.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example32 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnDouble(1.1);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example33.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example33.java
index f0faab861..3b12dc229 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example33.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example33.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example33 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnBool(true);
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example34.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example34.java
index 184f6d802..7bb19c117 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example34.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example34.java
@@ -5,12 +5,11 @@ import java.time.OffsetDateTime;
 
 public class Example34 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnDatetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example35.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example35.java
index b0918ebfb..a4aa2892d 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example35.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example35.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example35 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnDate("2023-01-15");
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example36.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example36.java
index 2c1f63e36..8be3d6e88 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example36.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example36.java
@@ -5,12 +5,11 @@ import java.util.UUID;
 
 public class Example36 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnUuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example37.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example37.java
index ec6232ec0..2324c032c 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example37.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example37.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example37 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().primitive().getAndReturnBase64("SGVsbG8gd29ybGQh".getBytes());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example38.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example38.java
index ee462d3bf..3a50dd692 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example38.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example38.java
@@ -5,17 +5,11 @@ import com.seed.exhaustive.resources.endpoints.put.requests.PutRequest;
 
 public class Example38 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().put().add(
-            "id",
-            PutRequest
-                .builder()
-                .build()
-        );
+        client.endpoints().put().add("id", PutRequest.builder().build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example39.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example39.java
index abaa9fc2d..e7e5a2777 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example39.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example39.java
@@ -6,20 +6,14 @@ import com.seed.exhaustive.resources.types.union.types.Dog;
 
 public class Example39 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().union().getAndReturnUnion(
-            Animal.dog(
-                Dog
-                    .builder()
-                    .name("name")
-                    .likesToWoof(true)
-                    .build()
-            )
-        );
+        client.endpoints()
+                .union()
+                .getAndReturnUnion(
+                        Animal.dog(Dog.builder().name("name").likesToWoof(true).build()));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example4.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example4.java
index 4f92f6969..d42879d90 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example4.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example4.java
@@ -5,16 +5,15 @@ import java.util.HashMap;
 
 public class Example4 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnMapPrimToPrim(
-            new HashMap<String, String>() {{
+        client.endpoints().container().getAndReturnMapPrimToPrim(new HashMap<String, String>() {
+            {
                 put("string", "string");
-            }}
-        );
+            }
+        });
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example40.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example40.java
index 2fdd43ea4..1dbdaae0b 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example40.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example40.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example40 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().urls().withMixedCase();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example41.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example41.java
index fa9ef5a95..e2c88b490 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example41.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example41.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example41 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().urls().noEndingSlash();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example42.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example42.java
index a24834b9b..3aaa108e8 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example42.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example42.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example42 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().urls().withEndingSlash();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example43.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example43.java
index 08f823b86..660e47992 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example43.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example43.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example43 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().urls().withUnderscores();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example44.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example44.java
index 295d0ec6c..57d1626c3 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example44.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example44.java
@@ -13,48 +13,34 @@ import java.util.UUID;
 
 public class Example44 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.inlinedRequests().postWithObjectBodyandResponse(
-            PostWithObjectBody
-                .builder()
-                .string("string")
-                .integer(1)
-                .nestedObject(
-                    ObjectWithOptionalField
-                        .builder()
+        client.inlinedRequests()
+                .postWithObjectBodyandResponse(PostWithObjectBody.builder()
                         .string("string")
                         .integer(1)
-                        .long_(1000000L)
-                        .double_(1.1)
-                        .bool(true)
-                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                        .date("2023-01-15")
-                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                        .base64("SGVsbG8gd29ybGQh".getBytes())
-                        .list(
-                            Optional.of(
-                                Arrays.asList("list", "list")
-                            )
-                        )
-                        .set(
-                            new HashSet<String>(
-                                Arrays.asList("set")
-                            )
-                        )
-                        .map(
-                            new HashMap<Integer, String>() {{
-                                put(1, "map");
-                            }}
-                        )
-                        .bigint(new BigInteger("1000000"))
-                        .build()
-                )
-                .build()
-        );
+                        .nestedObject(ObjectWithOptionalField.builder()
+                                .string("string")
+                                .integer(1)
+                                .long_(1000000L)
+                                .double_(1.1)
+                                .bool(true)
+                                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                .date("2023-01-15")
+                                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                .base64("SGVsbG8gd29ybGQh".getBytes())
+                                .list(Optional.of(Arrays.asList("list", "list")))
+                                .set(new HashSet<String>(Arrays.asList("set")))
+                                .map(new HashMap<Integer, String>() {
+                                    {
+                                        put(1, "map");
+                                    }
+                                })
+                                .bigint(new BigInteger("1000000"))
+                                .build())
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example45.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example45.java
index db309e2ab..ad4681f4b 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example45.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example45.java
@@ -13,48 +13,34 @@ import java.util.UUID;
 
 public class Example45 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.inlinedRequests().postWithObjectBodyandResponse(
-            PostWithObjectBody
-                .builder()
-                .string("string")
-                .integer(1)
-                .nestedObject(
-                    ObjectWithOptionalField
-                        .builder()
+        client.inlinedRequests()
+                .postWithObjectBodyandResponse(PostWithObjectBody.builder()
                         .string("string")
                         .integer(1)
-                        .long_(1000000L)
-                        .double_(1.1)
-                        .bool(true)
-                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                        .date("2023-01-15")
-                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                        .base64("SGVsbG8gd29ybGQh".getBytes())
-                        .list(
-                            Optional.of(
-                                Arrays.asList("list", "list")
-                            )
-                        )
-                        .set(
-                            new HashSet<String>(
-                                Arrays.asList("set")
-                            )
-                        )
-                        .map(
-                            new HashMap<Integer, String>() {{
-                                put(1, "map");
-                            }}
-                        )
-                        .bigint(new BigInteger("1000000"))
-                        .build()
-                )
-                .build()
-        );
+                        .nestedObject(ObjectWithOptionalField.builder()
+                                .string("string")
+                                .integer(1)
+                                .long_(1000000L)
+                                .double_(1.1)
+                                .bool(true)
+                                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                                .date("2023-01-15")
+                                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                                .base64("SGVsbG8gd29ybGQh".getBytes())
+                                .list(Optional.of(Arrays.asList("list", "list")))
+                                .set(new HashSet<String>(Arrays.asList("set")))
+                                .map(new HashMap<Integer, String>() {
+                                    {
+                                        put(1, "map");
+                                    }
+                                })
+                                .bigint(new BigInteger("1000000"))
+                                .build())
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example46.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example46.java
index a0551f5a9..6962cc07f 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example46.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example46.java
@@ -5,14 +5,15 @@ import java.util.HashMap;
 
 public class Example46 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.noAuth().postWithNoAuth(new 
-        HashMap<String, Object>() {{put("key", "value");
-        }});
+        client.noAuth().postWithNoAuth(new HashMap<String, Object>() {
+            {
+                put("key", "value");
+            }
+        });
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example47.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example47.java
index c683ff279..00bdb9e88 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example47.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example47.java
@@ -5,14 +5,15 @@ import java.util.HashMap;
 
 public class Example47 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.noAuth().postWithNoAuth(new 
-        HashMap<String, Object>() {{put("key", "value");
-        }});
+        client.noAuth().postWithNoAuth(new HashMap<String, Object>() {
+            {
+                put("key", "value");
+            }
+        });
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example48.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example48.java
index 30e6d8646..a0eb19979 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example48.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example48.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example48 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.noReqBody().getWithNoRequestBody();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example49.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example49.java
index 71d4b2fd2..e3d5957f4 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example49.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example49.java
@@ -4,12 +4,11 @@ import com.seed.exhaustive.SeedExhaustiveClient;
 
 public class Example49 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.noReqBody().postWithNoRequestBody();
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example5.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example5.java
index c12a34f09..9079b06ae 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example5.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example5.java
@@ -6,19 +6,15 @@ import java.util.HashMap;
 
 public class Example5 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnMapOfPrimToObject(
-            new HashMap<String, ObjectWithRequiredField>() {{
-                put("string", ObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .build());
-            }}
-        );
+        client.endpoints().container().getAndReturnMapOfPrimToObject(new HashMap<String, ObjectWithRequiredField>() {
+            {
+                put("string", ObjectWithRequiredField.builder().string("string").build());
+            }
+        });
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example50.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example50.java
index b24bb60cd..cf78aa61f 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example50.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example50.java
@@ -5,19 +5,16 @@ import com.seed.exhaustive.resources.reqwithheaders.requests.ReqWithHeaders;
 
 public class Example50 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.reqWithHeaders().getWithCustomHeader(
-            ReqWithHeaders
-                .builder()
-                .xTestServiceHeader("X-TEST-SERVICE-HEADER")
-                .xTestEndpointHeader("X-TEST-ENDPOINT-HEADER")
-                .body("string")
-                .build()
-        );
+        client.reqWithHeaders()
+                .getWithCustomHeader(ReqWithHeaders.builder()
+                        .xTestServiceHeader("X-TEST-SERVICE-HEADER")
+                        .xTestEndpointHeader("X-TEST-ENDPOINT-HEADER")
+                        .body("string")
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example6.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example6.java
index bd2b74555..2f68b62f6 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example6.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example6.java
@@ -6,19 +6,14 @@ import java.util.Optional;
 
 public class Example6 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().container().getAndReturnOptional(
-            Optional.of(
-                ObjectWithRequiredField
-                    .builder()
-                    .string("string")
-                    .build()
-            )
-        );
+        client.endpoints()
+                .container()
+                .getAndReturnOptional(Optional.of(
+                        ObjectWithRequiredField.builder().string("string").build()));
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example7.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example7.java
index 0291d9e98..cf7454bb9 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example7.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example7.java
@@ -12,41 +12,31 @@ import java.util.UUID;
 
 public class Example7 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().contentType().postJsonPatchContentType(
-            ObjectWithOptionalField
-                .builder()
-                .string("string")
-                .integer(1)
-                .long_(1000000L)
-                .double_(1.1)
-                .bool(true)
-                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                .date("2023-01-15")
-                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                .base64("SGVsbG8gd29ybGQh".getBytes())
-                .list(
-                    Optional.of(
-                        Arrays.asList("list", "list")
-                    )
-                )
-                .set(
-                    new HashSet<String>(
-                        Arrays.asList("set")
-                    )
-                )
-                .map(
-                    new HashMap<Integer, String>() {{
-                        put(1, "map");
-                    }}
-                )
-                .bigint(new BigInteger("1000000"))
-                .build()
-        );
+        client.endpoints()
+                .contentType()
+                .postJsonPatchContentType(ObjectWithOptionalField.builder()
+                        .string("string")
+                        .integer(1)
+                        .long_(1000000L)
+                        .double_(1.1)
+                        .bool(true)
+                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                        .date("2023-01-15")
+                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                        .list(Optional.of(Arrays.asList("list", "list")))
+                        .set(new HashSet<String>(Arrays.asList("set")))
+                        .map(new HashMap<Integer, String>() {
+                            {
+                                put(1, "map");
+                            }
+                        })
+                        .bigint(new BigInteger("1000000"))
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example8.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example8.java
index 90f2dd5af..f5d0bd432 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example8.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example8.java
@@ -12,41 +12,31 @@ import java.util.UUID;
 
 public class Example8 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
-        client.endpoints().contentType().postJsonPatchContentWithCharsetType(
-            ObjectWithOptionalField
-                .builder()
-                .string("string")
-                .integer(1)
-                .long_(1000000L)
-                .double_(1.1)
-                .bool(true)
-                .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
-                .date("2023-01-15")
-                .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
-                .base64("SGVsbG8gd29ybGQh".getBytes())
-                .list(
-                    Optional.of(
-                        Arrays.asList("list", "list")
-                    )
-                )
-                .set(
-                    new HashSet<String>(
-                        Arrays.asList("set")
-                    )
-                )
-                .map(
-                    new HashMap<Integer, String>() {{
-                        put(1, "map");
-                    }}
-                )
-                .bigint(new BigInteger("1000000"))
-                .build()
-        );
+        client.endpoints()
+                .contentType()
+                .postJsonPatchContentWithCharsetType(ObjectWithOptionalField.builder()
+                        .string("string")
+                        .integer(1)
+                        .long_(1000000L)
+                        .double_(1.1)
+                        .bool(true)
+                        .datetime(OffsetDateTime.parse("2024-01-15T09:30:00Z"))
+                        .date("2023-01-15")
+                        .uuid(UUID.fromString("d5e9c84f-c2b2-4bf4-b4b0-7ffd7a9ffc32"))
+                        .base64("SGVsbG8gd29ybGQh".getBytes())
+                        .list(Optional.of(Arrays.asList("list", "list")))
+                        .set(new HashSet<String>(Arrays.asList("set")))
+                        .map(new HashMap<Integer, String>() {
+                            {
+                                put(1, "map");
+                            }
+                        })
+                        .bigint(new BigInteger("1000000"))
+                        .build());
     }
-}
\ No newline at end of file
+}
diff --git a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example9.java b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example9.java
index 3fe41ffff..aaa251989 100644
--- a/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example9.java
+++ b/seed/java-sdk/exhaustive/no-custom-config/src/main/java/com/snippets/Example9.java
@@ -5,12 +5,11 @@ import com.seed.exhaustive.resources.types.enum_.types.WeatherReport;
 
 public class Example9 {
     public static void main(String[] args) {
-        SeedExhaustiveClient client = SeedExhaustiveClient
-            .builder()
-            .token("<token>")
-            .url("https://api.fern.com")
-            .build();
+        SeedExhaustiveClient client = SeedExhaustiveClient.builder()
+                .token("<token>")
+                .url("https://api.fern.com")
+                .build();
 
         client.endpoints().enum_().getAndReturnEnum(WeatherReport.SUNNY);
     }
-}
\ No newline at end of file
+}
